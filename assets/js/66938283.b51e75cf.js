"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[9688],{3905:(e,t,o)=>{o.d(t,{Zo:()=>m,kt:()=>p});var i=o(67294);function a(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function n(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,i)}return o}function r(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?n(Object(o),!0).forEach((function(t){a(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):n(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function s(e,t){if(null==e)return{};var o,i,a=function(e,t){if(null==e)return{};var o,i,a={},n=Object.keys(e);for(i=0;i<n.length;i++)o=n[i],t.indexOf(o)>=0||(a[o]=e[o]);return a}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(i=0;i<n.length;i++)o=n[i],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(a[o]=e[o])}return a}var d=i.createContext({}),c=function(e){var t=i.useContext(d),o=t;return e&&(o="function"==typeof e?e(t):r(r({},t),e)),o},m=function(e){var t=c(e.components);return i.createElement(d.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},l=i.forwardRef((function(e,t){var o=e.components,a=e.mdxType,n=e.originalType,d=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),l=c(o),p=a,u=l["".concat(d,".").concat(p)]||l[p]||h[p]||n;return o?i.createElement(u,r(r({ref:t},m),{},{components:o})):i.createElement(u,r({ref:t},m))}));function p(e,t){var o=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var n=o.length,r=new Array(n);r[0]=l;var s={};for(var d in t)hasOwnProperty.call(t,d)&&(s[d]=t[d]);s.originalType=e,s.mdxType="string"==typeof e?e:a,r[1]=s;for(var c=2;c<n;c++)r[c]=o[c];return i.createElement.apply(null,r)}return i.createElement.apply(null,o)}l.displayName="MDXCreateElement"},31661:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>d,contentTitle:()=>r,default:()=>h,frontMatter:()=>n,metadata:()=>s,toc:()=>c});var i=o(87462),a=(o(67294),o(3905));const n={sidebar_position:6990,slug:"2022-07-17",title:"MQTT Auto-Discovery - Use Node-RED to register Smarthome Devices",authors:"mpolinowski",tags:["IoT"],image:"https://mpolinowski.github.io/img/search/mqtt.png",description:"Previously I wrote a Python Script that allowed me to register MQTT devices with Home Assistant using the HA internal auto-discovery service. The same script can be used to register those devices with OpenHAB using the homie convention. Now I want to use Node-RED to dynamically register devices, instead of providing fixed configuration files for each device."},r=void 0,s={unversionedId:"IoT-and-Machine-Learning/Home_Automation/2022-07-17-node-red-for-mqtt-autodiscovery/index",id:"IoT-and-Machine-Learning/Home_Automation/2022-07-17-node-red-for-mqtt-autodiscovery/index",title:"MQTT Auto-Discovery - Use Node-RED to register Smarthome Devices",description:"Previously I wrote a Python Script that allowed me to register MQTT devices with Home Assistant using the HA internal auto-discovery service. The same script can be used to register those devices with OpenHAB using the homie convention. Now I want to use Node-RED to dynamically register devices, instead of providing fixed configuration files for each device.",source:"@site/docs/IoT-and-Machine-Learning/Home_Automation/2022-07-17-node-red-for-mqtt-autodiscovery/index.md",sourceDirName:"IoT-and-Machine-Learning/Home_Automation/2022-07-17-node-red-for-mqtt-autodiscovery",slug:"/IoT-and-Machine-Learning/Home_Automation/2022-07-17-node-red-for-mqtt-autodiscovery/2022-07-17",permalink:"/docs/IoT-and-Machine-Learning/Home_Automation/2022-07-17-node-red-for-mqtt-autodiscovery/2022-07-17",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/IoT-and-Machine-Learning/Home_Automation/2022-07-17-node-red-for-mqtt-autodiscovery/index.md",tags:[{label:"IoT",permalink:"/docs/tags/io-t"}],version:"current",sidebarPosition:6990,frontMatter:{sidebar_position:6990,slug:"2022-07-17",title:"MQTT Auto-Discovery - Use Node-RED to register Smarthome Devices",authors:"mpolinowski",tags:["IoT"],image:"https://mpolinowski.github.io/img/search/mqtt.png",description:"Previously I wrote a Python Script that allowed me to register MQTT devices with Home Assistant using the HA internal auto-discovery service. The same script can be used to register those devices with OpenHAB using the homie convention. Now I want to use Node-RED to dynamically register devices, instead of providing fixed configuration files for each device."},sidebar:"tutorialSidebar",previous:{title:"Run Camera.UI with Docker-Compose",permalink:"/docs/IoT-and-Machine-Learning/Home_Automation/2022-10-18-camera-ui-docker/2022-10-18"},next:{title:"OpenHab - MQTT Homie Convention",permalink:"/docs/IoT-and-Machine-Learning/Home_Automation/2022-07-16-openhab-mqtt-homie/2022-07-16"}},d={},c=[{value:"Home Assistant",id:"home-assistant",level:2},{value:"OpenHAB (homie)",id:"openhab-homie",level:2}],m={toc:c};function h(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,i.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Abashiri, Japan",src:o(75110).Z,width:"1500",height:"594"})),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#home-assistant"},"Home Assistant")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#openhab-homie"},"OpenHAB (homie)"))),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/docs/IoT-and-Machine-Learning/Home_Automation/2022-07-12-home-assistant-mqtt-python/2022-07-12"},"Previously I wrote a Python Script")," that allowed me to register MQTT devices with Home Assistant using the HA internal auto-discovery service. The same script can be used to register those devices with ",(0,a.kt)("a",{parentName:"p",href:"/docs/IoT-and-Machine-Learning/Home_Automation/2022-07-16-openhab-mqtt-homie/2022-07-16"},"OpenHAB using the homie convention"),". Now I want to use Node-RED to dynamically register devices, instead of providing fixed configuration files for each device."),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"All flows can be downloaded from ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/mpolinowski/node-red-mqtt-autodiscovery"},"Github"),".")),(0,a.kt)("h2",{id:"home-assistant"},"Home Assistant"),(0,a.kt)("p",null,"As a convention I am grouping all devices by prefix according to the device type. E.g. all MQTT cameras are in the ",(0,a.kt)("inlineCode",{parentName:"p"},"cameras")," group. I identify each device by it's IP address - e.g. ",(0,a.kt)("em",{parentName:"p"},"192.168.2.120")," would give the device ID ",(0,a.kt)("inlineCode",{parentName:"p"},"120"),":"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"MQTT Auto-Discovery - Use Node-RED to register Smarthome Devices",src:o(3725).Z,width:"929",height:"522"})),(0,a.kt)("p",null,"To be able to register all my cameras with a Node-RED script I first have to inject the prefix and ID of the camera I want to target and then walk my way through the ",(0,a.kt)("a",{parentName:"p",href:"https://wiki.instar.com/en/Advanced_User/INSTAR_MQTT_Broker/MQTTv5_API/"},"MQTT API")," to extract all the information I need from this camera:"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"MQTT Auto-Discovery - Use Node-RED to register Smarthome Devices",src:o(45443).Z,width:"1290",height:"560"})),(0,a.kt)("p",null,"By writing those information into flow variables I can then use them to build the ",(0,a.kt)("a",{parentName:"p",href:"/docs/IoT-and-Machine-Learning/Home_Automation/2022-07-10-home-assistant-mqtt-autodiscovery-part-i/2022-07-10"},"Configuration Topics needed by the Home Assistant Auto-discovery"),":"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"MQTT Auto-Discovery - Use Node-RED to register Smarthome Devices",src:o(61220).Z,width:"1108",height:"438"})),(0,a.kt)("p",null,"Now all I have to do is to inject the MQTT ID of the camera I want to register with Home Assistant (which has to be connected to the same MQTT Broker) and all the configuration topics will fire. This event can be coupled to the Last-Will topic of the device to have it register itself as soon as it connects with the broker."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"MQTT Auto-Discovery - Use Node-RED to register Smarthome Devices",src:o(67187).Z,width:"1288",height:"887"})),(0,a.kt)("h2",{id:"openhab-homie"},"OpenHAB (homie)"),(0,a.kt)("p",null,"OpenHAB uses the ",(0,a.kt)("a",{parentName:"p",href:"/docs/IoT-and-Machine-Learning/Home_Automation/2022-07-16-openhab-mqtt-homie/2022-07-16"},"homie convention")," to do the same thing. Again, I first need to extract all information through the ",(0,a.kt)("a",{parentName:"p",href:"https://wiki.instar.com/en/Advanced_User/INSTAR_MQTT_Broker/MQTTv5_API/"},"MQTT API"),":"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"MQTT Auto-Discovery - Use Node-RED to register Smarthome Devices",src:o(21892).Z,width:"954",height:"414"})),(0,a.kt)("p",null,"Now I can continue building the configuration topics according to the ",(0,a.kt)("a",{parentName:"p",href:"https://homieiot.github.io/specification/"},"homie convention"),":"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"MQTT Auto-Discovery - Use Node-RED to register Smarthome Devices",src:o(88889).Z,width:"996",height:"259"})),(0,a.kt)("p",null,"First we have to define the device by registering the ",(0,a.kt)("inlineCode",{parentName:"p"},"$homie")," version it is using, the ",(0,a.kt)("inlineCode",{parentName:"p"},"$name")," of the device, some more administrative work with the ",(0,a.kt)("inlineCode",{parentName:"p"},"$extensions")," and the online ",(0,a.kt)("inlineCode",{parentName:"p"},"$state")," that I have coupled to the camera ",(0,a.kt)("strong",{parentName:"p"},"Last-Will & Testament"),". The last point is a comma separated list of all the ",(0,a.kt)("inlineCode",{parentName:"p"},"$nodes")," we want to register to group ",(0,a.kt)("inlineCode",{parentName:"p"},"$properties")," that directly translate into ",(0,a.kt)("strong",{parentName:"p"},"Thing")," ",(0,a.kt)("strong",{parentName:"p"},"Channels")," and can be used as ",(0,a.kt)("strong",{parentName:"p"},"Items")," like switches or sliders:"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"MQTT Auto-Discovery - Use Node-RED to register Smarthome Devices",src:o(79005).Z,width:"1022",height:"376"})),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"$node")," then lists all the ",(0,a.kt)("inlineCode",{parentName:"p"},"$properties")," it contains and then defines each of those - that directly correspond to a MQTT command topic on my camera:"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"MQTT Auto-Discovery - Use Node-RED to register Smarthome Devices",src:o(54344).Z,width:"1112",height:"363"})),(0,a.kt)("p",null,"Every property here is, thanks to Node-RED, directly coupled with the camera API and will receive change updates:"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"MQTT Auto-Discovery - Use Node-RED to register Smarthome Devices",src:o(54344).Z,width:"1112",height:"363"})),(0,a.kt)("p",null,"In OpenHAB you should now see a new ",(0,a.kt)("strong",{parentName:"p"},"Thing")," in your Inbox:"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"MQTT Auto-Discovery - Use Node-RED to register Smarthome Devices",src:o(39159).Z,width:"1203",height:"596"})),(0,a.kt)("p",null,"Select your camera from the inbox and add it:"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"MQTT Auto-Discovery - Use Node-RED to register Smarthome Devices",src:o(19291).Z,width:"1201",height:"471"})),(0,a.kt)("p",null,"All ",(0,a.kt)("strong",{parentName:"p"},"homie")," ",(0,a.kt)("inlineCode",{parentName:"p"},"&properties")," should now show up as ",(0,a.kt)("strong",{parentName:"p"},"Channels")," and are ready to use as dashboard ",(0,a.kt)("strong",{parentName:"p"},"Items")," or for automation:"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"MQTT Auto-Discovery - Use Node-RED to register Smarthome Devices",src:o(20967).Z,width:"1195",height:"600"})),(0,a.kt)("p",null," To toggle a value use the ",(0,a.kt)("inlineCode",{parentName:"p"},"/set")," command - e.g. the state topic defined to turn the alarm on is ",(0,a.kt)("inlineCode",{parentName:"p"},"homie/120/alarm/alarm-armed"),". You can toggle it by publishing an update to ",(0,a.kt)("inlineCode",{parentName:"p"},"homie/120/alarm/alarm-armed/set"),". Make sure that all subscriptions are active and send an update to the set-command:"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"MQTT Auto-Discovery - Use Node-RED to register Smarthome Devices",src:o(3132).Z,width:"900",height:"95"})),(0,a.kt)("p",null,"Updating the command topic ",(0,a.kt)("inlineCode",{parentName:"p"},"homie/120/alarm/alarm-armed/set")," will now also update the value of the state topic ",(0,a.kt)("inlineCode",{parentName:"p"},"homie/120/alarm/alarm-armed")," and of course, since it is coupled with the device API, it will actually update the state on your device as well:"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"MQTT Auto-Discovery - Use Node-RED to register Smarthome Devices",src:o(2877).Z,width:"1403",height:"795"})))}h.isMDXComponent=!0},67187:(e,t,o)=>{o.d(t,{Z:()=>i});const i=o.p+"assets/images/Home_Assistant_MQTT_Auto-Discovery_04-d7c7193502a52b04fd04e3b1be33bdd1.png"},3725:(e,t,o)=>{o.d(t,{Z:()=>i});const i=o.p+"assets/images/home_assistant_auto_discovery_node-red_00-2af8b3efb0ca126a1a9a35186e6df3cd.png"},45443:(e,t,o)=>{o.d(t,{Z:()=>i});const i=o.p+"assets/images/home_assistant_auto_discovery_node-red_01-3d5cbd41ce9285ba1cd0abbae8ea3917.png"},61220:(e,t,o)=>{o.d(t,{Z:()=>i});const i=o.p+"assets/images/home_assistant_auto_discovery_node-red_02-4788096d37511a591610843f6b2fa3d7.png"},21892:(e,t,o)=>{o.d(t,{Z:()=>i});const i=o.p+"assets/images/homie_auto_discovery_node-red_01-b5b67441b318d89f6ac9ea1e049a297b.png"},88889:(e,t,o)=>{o.d(t,{Z:()=>i});const i=o.p+"assets/images/homie_auto_discovery_node-red_02a-d6a6fed30f394a8d9dd2da67d72307e3.png"},79005:(e,t,o)=>{o.d(t,{Z:()=>i});const i=o.p+"assets/images/homie_auto_discovery_node-red_02b-0a6b98e740e40332d4cf7dfa9f3cbb08.png"},54344:(e,t,o)=>{o.d(t,{Z:()=>i});const i=o.p+"assets/images/homie_auto_discovery_node-red_03a-598aafd7470e5c741ab5eff6e64fbfa8.png"},39159:(e,t,o)=>{o.d(t,{Z:()=>i});const i=o.p+"assets/images/homie_auto_discovery_node-red_04-0417d4d0bbc3b14607a3dece9379cfa8.png"},19291:(e,t,o)=>{o.d(t,{Z:()=>i});const i=o.p+"assets/images/homie_auto_discovery_node-red_05-31e45566c138cb26ff91255a28cfe5c2.png"},20967:(e,t,o)=>{o.d(t,{Z:()=>i});const i=o.p+"assets/images/homie_auto_discovery_node-red_06-6fa1bb051ea73e23d06e83e91dfbe3f6.png"},3132:(e,t,o)=>{o.d(t,{Z:()=>i});const i=o.p+"assets/images/homie_auto_discovery_node-red_07-2bf103f75bff381827598e4ce8563e9c.png"},2877:(e,t,o)=>{o.d(t,{Z:()=>i});const i=o.p+"assets/images/homie_auto_discovery_node-red_08-36cb419c1ab4fc2ab73fcf7287c6b8e3.png"},75110:(e,t,o)=>{o.d(t,{Z:()=>i});const i=o.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-877ed54046c637e78f96cc6a07569d43.jpg"}}]);