"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[7098],{3905:(e,a,t)=>{t.d(a,{Zo:()=>c,kt:()=>m});var l=t(67294);function n(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function r(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);a&&(l=l.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,l)}return t}function i(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?r(Object(t),!0).forEach((function(a){n(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function o(e,a){if(null==e)return{};var t,l,n=function(e,a){if(null==e)return{};var t,l,n={},r=Object.keys(e);for(l=0;l<r.length;l++)t=r[l],a.indexOf(t)>=0||(n[t]=e[t]);return n}(e,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(l=0;l<r.length;l++)t=r[l],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var s=l.createContext({}),p=function(e){var a=l.useContext(s),t=a;return e&&(t="function"==typeof e?e(a):i(i({},a),e)),t},c=function(e){var a=p(e.components);return l.createElement(s.Provider,{value:a},e.children)},d={inlineCode:"code",wrapper:function(e){var a=e.children;return l.createElement(l.Fragment,{},a)}},u=l.forwardRef((function(e,a){var t=e.components,n=e.mdxType,r=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),u=p(t),m=n,f=u["".concat(s,".").concat(m)]||u[m]||d[m]||r;return t?l.createElement(f,i(i({ref:a},c),{},{components:t})):l.createElement(f,i({ref:a},c))}));function m(e,a){var t=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var r=t.length,i=new Array(r);i[0]=u;var o={};for(var s in a)hasOwnProperty.call(a,s)&&(o[s]=a[s]);o.originalType=e,o.mdxType="string"==typeof e?e:n,i[1]=o;for(var p=2;p<r;p++)i[p]=t[p];return l.createElement.apply(null,i)}return l.createElement.apply(null,t)}u.displayName="MDXCreateElement"},70042:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>r,metadata:()=>o,toc:()=>p});var l=t(87462),n=(t(67294),t(3905));const r={sidebar_position:1e4,slug:"2020-07-26",title:"Securing Webservers - FirewallD and fail2ban",authors:"mpolinowski",tags:["LINUX","Security","FirewallD","fail2ban"]},i=void 0,o={unversionedId:"DevOps/Security/2020-07-26--firewalld-configuration/index",id:"DevOps/Security/2020-07-26--firewalld-configuration/index",title:"Securing Webservers - FirewallD and fail2ban",description:"TST, Hong Kong",source:"@site/docs/DevOps/Security/2020-07-26--firewalld-configuration/index.md",sourceDirName:"DevOps/Security/2020-07-26--firewalld-configuration",slug:"/DevOps/Security/2020-07-26--firewalld-configuration/2020-07-26",permalink:"/docs/DevOps/Security/2020-07-26--firewalld-configuration/2020-07-26",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/DevOps/Security/2020-07-26--firewalld-configuration/index.md",tags:[{label:"LINUX",permalink:"/docs/tags/linux"},{label:"Security",permalink:"/docs/tags/security"},{label:"FirewallD",permalink:"/docs/tags/firewall-d"},{label:"fail2ban",permalink:"/docs/tags/fail-2-ban"}],version:"current",sidebarPosition:1e4,frontMatter:{sidebar_position:1e4,slug:"2020-07-26",title:"Securing Webservers - FirewallD and fail2ban",authors:"mpolinowski",tags:["LINUX","Security","FirewallD","fail2ban"]},sidebar:"tutorialSidebar",previous:{title:"Securing Webservers - FirewallD Deployment on CentOS7",permalink:"/docs/DevOps/Security/2020-07-27--firewalld-deployment-centos7/2020-07-27"},next:{title:"Linux",permalink:"/docs/category/linux"}},s={},p=[{value:"FirewallD",id:"firewalld",level:2},{value:"How to install FirewallD",id:"how-to-install-firewalld",level:3},{value:"Ubuntu",id:"ubuntu",level:4},{value:"CentOS",id:"centos",level:4},{value:"How to configure FirewallD",id:"how-to-configure-firewalld",level:3},{value:"Zones",id:"zones",level:4},{value:"Services",id:"services",level:4},{value:"Ports",id:"ports",level:4},{value:"Panic Mode",id:"panic-mode",level:4},{value:"IP Address",id:"ip-address",level:4},{value:"Prevent Bruteforce SSH attacks",id:"prevent-bruteforce-ssh-attacks",level:4},{value:"Create a Blacklist",id:"create-a-blacklist",level:4},{value:"Block and Enable ICMP",id:"block-and-enable-icmp",level:4},{value:"Lockdown Rules",id:"lockdown-rules",level:4},{value:"fail2ban-firewalld",id:"fail2ban-firewalld",level:4},{value:"fail2ban",id:"fail2ban",level:2},{value:"Blacklisting Script and Configuration",id:"blacklisting-script-and-configuration",level:2}],c={toc:p};function d(e){let{components:a,...r}=e;return(0,n.kt)("wrapper",(0,l.Z)({},c,r,{components:a,mdxType:"MDXLayout"}),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"TST, Hong Kong",src:t(52518).Z,width:"1500",height:"517"})),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#firewalld"},"FirewallD"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#how-to-install-firewalld"},"How to install FirewallD"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#ubuntu"},"Ubuntu")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#centos"},"CentOS")))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#how-to-configure-firewalld"},"How to configure FirewallD"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#zones"},"Zones")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#services"},"Services")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#ports"},"Ports")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#panic-mode"},"Panic Mode")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#ip-address"},"IP Address")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#prevent-bruteforce-ssh-attacks"},"Prevent Bruteforce SSH attacks")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#create-a-blacklist"},"Create a Blacklist")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#block-and-enable-icmp"},"Block and Enable ICMP")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#lockdown-rules"},"Lockdown Rules")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#fail2ban-firewalld"},"fail2ban-firewalld")))))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#fail2ban"},"fail2ban")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#blacklisting-script-and-configuration"},"Blacklisting Script and Configuration"))),(0,n.kt)("h2",{id:"firewalld"},"FirewallD"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"http://www.firewalld.org/"},"FirewallD")," provides a dynamically managed firewall with support for network/firewall zones that defines the trust level of network connections or interfaces. It has support for IPv4, IPv6 firewall settings, ethernet bridges and IP sets. There is a separation of runtime and permanent configuration options. It also provides an interface for services or applications to add firewall rules directly. It has following features:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Timed firewall rules"),(0,n.kt)("li",{parentName:"ul"},"IPv4 and IPv6 NAT support"),(0,n.kt)("li",{parentName:"ul"},"Firewall zones"),(0,n.kt)("li",{parentName:"ul"},"IP set support"),(0,n.kt)("li",{parentName:"ul"},"Simple log of denied packets"),(0,n.kt)("li",{parentName:"ul"},"Direct interface"),(0,n.kt)("li",{parentName:"ul"},"Lockdown: Whitelisting of applications that may modify the firewall"),(0,n.kt)("li",{parentName:"ul"},"Support for iptables, ip6tables, ebtables and ipset firewall backends")),(0,n.kt)("h3",{id:"how-to-install-firewalld"},"How to install FirewallD"),(0,n.kt)("p",null,"Before installing FirewallD, please make sure you stop iptables and also make sure that iptables are not using or working anymore. To do so:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"sudo systemctl stop iptables\nsudo systemctl mask iptables\nsudo systemctl status iptables\n")),(0,n.kt)("h4",{id:"ubuntu"},"Ubuntu"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt-get remove ufw\nsudo apt-get install firewall-applet\n")),(0,n.kt)("h4",{id:"centos"},"CentOS"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"sudo yum install firewalld firewall-config -y\n")),(0,n.kt)("h3",{id:"how-to-configure-firewalld"},"How to configure FirewallD"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"sudo systemctl enable --now firewalld\nsudo systemctl status firewalld\n")),(0,n.kt)("h4",{id:"zones"},"Zones"),(0,n.kt)("p",null,"Firewall-cmd uses zones as presets, giving you sane defaults to choose from. Doing this saves you from having to build a firewall from scratch. Zones apply to a network interface, so on a server with two ethernet interfaces, you may have one zone governing one ethernet interface, and a different zone governing the other."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"sudo firewall-cmd --get-active-zones\nsudo firewall-cmd --get-zones\nsudo firewall-cmd --get-default-zone\n")),(0,n.kt)("p",null,"Setting Default Zone:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"sudo firewall-cmd --set-default-zone=public\nsudo firewall-cmd --reload\nsudo firewall-cmd --get-default-zone\n")),(0,n.kt)("p",null,"Assigning a zone to an interface:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"firewall-cmd --change-interface ens3 --zone public --permanent\n\nThe interface is under control of NetworkManager, setting zone to 'public'.\nsuccess\n")),(0,n.kt)("h4",{id:"services"},"Services"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"sudo firewall-cmd --get-services\n")),(0,n.kt)("p",null,"Adding a Service to the Public Zone:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"sudo firewall-cmd --zone=public --add-service=http\nsudo firewall-cmd --zone=public --add-service=https\nsudo firewall-cmd --zone=public --add-service=ftp\nsudo firewall-cmd --zone=public --add-service=smtp\nsudo firewall-cmd --reload\n\nsudo firewall-cmd --zone=public --remove-service=ftp\nsudo firewall-cmd --zone=public --remove-service=smtp\nsudo firewall-cmd --reload\n")),(0,n.kt)("p",null,"Add the ",(0,n.kt)("inlineCode",{parentName:"p"},"--permanent")," option to make your rules permanent."),(0,n.kt)("h4",{id:"ports"},"Ports"),(0,n.kt)("p",null,"Adding a Port to the Public Zone:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"sudo firewall-cmd --permanent --zone=public --add-port=80/tcp\nsudo firewall-cmd --reload\n\nsudo firewall-cmd --zone=public --list-ports\nsudo firewall-cmd --zone=public --list-all\nsudo firewall-cmd --zone=public --remove-port=80/tcp\nsudo firewall-cmd --reload\n")),(0,n.kt)("p",null,"Adding multiple ports:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"firewall-cmd --permanent --add-port={80/tcp,443/tcp,9200/tcp,5601/tcp,5044/tcp}\nfirewall-cmd --permanent --add-port=60000-61000/udp\nfirewall-cmd --reload\n")),(0,n.kt)("p",null,"Add the ",(0,n.kt)("inlineCode",{parentName:"p"},"--permanent")," option to make your rules permanent."),(0,n.kt)("h4",{id:"panic-mode"},"Panic Mode"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"sudo firewall-cmd --panic-on\nsudo firewall-cmd --panic-off\n")),(0,n.kt)("h4",{id:"ip-address"},"IP Address"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'sudo firewall-cmd --zone=public --add-rich-rule=\'rule family="ipv4" source address="192.168.1.4" accept\'\nsudo firewall-cmd --zone=public --add-rich-rule=\'rule family="ipv4" source address="192.168.1.5" reject\'\nsudo firewall-cmd --reload\n')),(0,n.kt)("p",null,"Add the ",(0,n.kt)("inlineCode",{parentName:"p"},"--permanent")," option to make your rules permanent."),(0,n.kt)("h4",{id:"prevent-bruteforce-ssh-attacks"},"Prevent Bruteforce SSH attacks"),(0,n.kt)("p",null,"Reject new incoming ipv4 connections when more than 2 attempts per minute are made. It will also log a message about this:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'firewall-cmd --add-rich-rule=\'rule family="ipv4" service name="ssh" log prefix="SSH Bruteforce:" level="warning" limit value="2/m" accept limit value="2/m"\'\n')),(0,n.kt)("p",null,"If you have both ipv4 and ipv6 configured you\u2019ll probably want the more generic version:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'firewall-cmd --add-rich-rule=\'rule service name="ssh" log prefix="SSH Bruteforce:" level="warning" limit value="2/m" accept limit value="2/m"\'\n')),(0,n.kt)("p",null,"Add the ",(0,n.kt)("inlineCode",{parentName:"p"},"--permanent")," option to make your rules permanent."),(0,n.kt)("h4",{id:"create-a-blacklist"},"Create a Blacklist"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"firewall-cmd --permanent --new-ipset=blacklist --type=hash:net --option=family=inet --option=hashsize=4096 --option=maxelem=200000\n")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"\u2013permanent")," = use to make changes to the permanent configuration"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"\u2013new-ipset")," = name of the new IP/net blacklist"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"\u2013type"),' = storage hash type, "net" is for subnets, while "ip" for individual ip addresses'),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"\u2013option=family")," = IPv4 or IPv6 network, inet is for IPv4"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"\u2013option=hashsize")," = the initial hash size of the list"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"\u2013option=maxelem")," = max number of elements")),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://www.ipdeny.com/ipblocks/"},"Download net blocks"),":"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"wget https://www.ipdeny.com/ipblocks/data/aggregated/ru-aggregated.zone\ntar -vxzf all-zones.tar.gz\n")),(0,n.kt)("p",null,"Populate the blacklist:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"firewall-cmd --permanent --ipset=blacklist --add-entries-from-file=./ru-aggregated.zone\n")),(0,n.kt)("p",null,"To add individual IP addresses or net blocks by yourself:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"firewall-cmd --permanent --ipset=blacklist --add-entry=4.46.116.112\nfirewall-cmd --ipset=blacklist --add-entry=4.46.116.112\n")),(0,n.kt)("p",null,"Redirect the blacklist to the drop zone"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"firewall-cmd --permanent --zone=drop --add-source=ipset:blacklist\nfirewall-cmd --reload\n")),(0,n.kt)("h4",{id:"block-and-enable-icmp"},"Block and Enable ICMP"),(0,n.kt)("p",null,"First, check the type of icmp we are using with below command."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"firewall-cmd --get-icmptypes\n")),(0,n.kt)("p",null,"To add icmp block on any zone, you can use the following command. For example, here I am going to add icmp block on external zone, before blocking, just do a icmp ping to confirm the status of icmp block."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"firewall-cmd --zone=public --query-icmp-block=echo-reply\n")),(0,n.kt)("p",null,'If you get "no", that means there isn\u2019t any icmp block applied, let\u2019s enable (block) icmp.'),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"firewall-cmd --zone=public --add-icmp-block=echo-reply\n")),(0,n.kt)("h4",{id:"lockdown-rules"},"Lockdown Rules"),(0,n.kt)("p",null,"It\u2019s possible to change the firewalld rules by any local applications, which have the root privileges. To avoid making changes to firewalld rules, we have to put a lock-down in \u2018firewalld.conf\u2018 file. This mostly used to protect the firewalld from any unwanted rules changes by any applications."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"nano /etc/firewalld/firewalld.conf\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-cfg"},"Lockdown=yes\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"firewall-cmd --reload\nfirewall-cmd --query-lockdown\n")),(0,n.kt)("p",null,"To On/Off lockdown mode, use the following combination."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"firewall-cmd --lockdown-on\nfirewall-cmd --lockdown-off\n")),(0,n.kt)("h4",{id:"fail2ban-firewalld"},"fail2ban-firewalld"),(0,n.kt)("p",null,"Configure ",(0,n.kt)("a",{parentName:"p",href:"https://fedoraproject.org/wiki/Fail2ban_with_FirewallD#fail2ban-firewalld"},"fail2ban")," (",(0,n.kt)("strong",{parentName:"p"},"see below"),") to block hosts via firewalld."),(0,n.kt)("h2",{id:"fail2ban"},"fail2ban"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://www.fail2ban.org/wiki/index.php/Main_Page"},"fail2ban")," is a daemon to ban hosts that cause multiple authentication errors."),(0,n.kt)("p",null,"fail2ban will monitor the SystemD journal to look for failed authentication attempts for whichever jails have been enabled. After the number of failed attempts specified it will add a firewall rule to block that specific IP address for an amount of time configured."),(0,n.kt)("p",null,"Start by ",(0,n.kt)("a",{parentName:"p",href:"https://www.fail2ban.org/wiki/index.php/Downloads"},"installing the package")," on your system - ",(0,n.kt)("a",{parentName:"p",href:"https://packages.debian.org/stable/net/fail2ban"},"Debian"),", ",(0,n.kt)("a",{parentName:"p",href:"https://packages.ubuntu.com/search?keywords=fail2ban"},"Ubuntu")," or on Centos through EPEL."),(0,n.kt)("p",null,"Once installed the next step is to configure a jail (a service you want to monitor and ban at whatever thresholds you\u2019ve set). By default IPs are banned for 1 hour. The best practice is to override the system defaults using ",(0,n.kt)("em",{parentName:"p"},".local files instead of directly modifying the "),".config files:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-cfg"},'# cat /etc/fail2ban/jail.local\n[DEFAULT]\n\n# "bantime" is the number of seconds that a host is banned.\nbantime  = 1d\n\n# A host is banned if it has generated "maxretry" during the last "findtime"\nfindtime  = 1h\n\n# "maxretry" is the number of failures before a host get banned.\nmaxretry = 5\n')),(0,n.kt)("p",null,"After 5 attempts within the last hour the IP will be blocked for 1 day."),(0,n.kt)("p",null,"The next step is to configure a jail. In this tutorial sshd is shown but the steps are more or less the same for other services. Create a configuration file inside ",(0,n.kt)("inlineCode",{parentName:"p"},"/etc/fail2ban/jail.d"),":"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"# cat /etc/fail2ban/jail.d/sshd.local\n[sshd]\nenabled = true\n")),(0,n.kt)("p",null,"Next enable and start the fail2ban service."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"sudo systemctl enable --now fail2ban\nsudo systemctl status fail2ban\n")),(0,n.kt)("p",null,"to check the status of fail2ban and make sure the jail is enabled enter:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"sudo fail2ban-client status\n\nStatus\n|- Number of jail:  1\n`- Jail list:   sshd\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"sudo fail2ban-client status sshd\nStatus for the jail: sshd\n|- Filter\n|  |- Currently failed: 8\n|  |- Total failed: 4399\n|  `- Journal matches:  _SYSTEMD_UNIT=sshd.service + _COMM=sshd\n`- Actions\n   |- Currently banned: 101\n   |- Total banned: 684\n   `- Banned IP list:   ...\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"sudo tail -f /var/log/fail2ban.log\n")),(0,n.kt)("p",null,"Check IP address geo location and add country ban lists where necessary ",(0,n.kt)("inlineCode",{parentName:"p"},"whois ip-addrss | grep -i country"),"."),(0,n.kt)("h2",{id:"blacklisting-script-and-configuration"},"Blacklisting Script and Configuration"),(0,n.kt)("p",null,"The ",(0,n.kt)("a",{parentName:"p",href:"https://fedoramagazine.org/protect-your-system-with-fail2ban-and-firewalld-blacklists/"},"following script")," to automate the process as much as possible:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'#!/bin/bash\n# Based on the below article\n# https://www.linode.com/community/questions/11143/top-tip-firewalld-and-ipset-country-blacklist\n\n# Source the blacklisted countries from the configuration file\n. /etc/blacklist-by-country\n\n# Create a temporary working directory\nipdeny_tmp_dir=$(mktemp -d -t blacklist-XXXXXXXXXX)\npushd $ipdeny_tmp_dir\n\n# Download the latest network addresses by country file\ncurl -LO http://www.ipdeny.com/ipblocks/data/countries/all-zones.tar.gz\ntar xf all-zones.tar.gz\n\n# For updates, remove the ipset blacklist and recreate\nif firewall-cmd -q --zone=drop --query-source=ipset:blacklist; then\n    firewall-cmd -q --permanent --delete-ipset=blacklist\nfi\n\n# Create the ipset blacklist which accepts both IP addresses and networks\nfirewall-cmd -q --permanent --new-ipset=blacklist --type=hash:net \\\n    --option=family=inet --option=hashsize=4096 --option=maxelem=200000 \\\n    --set-description="An ipset list of networks or ips to be dropped."\n\n# Add the address ranges by country per ipdeny.com to the blacklist\nfor country in $countries; do\n    firewall-cmd -q --permanent --ipset=blacklist \\\n        --add-entries-from-file=./$country.zone && \\\n        echo "Added $country to blacklist ipset."\ndone\n\n# Block individual IPs if the configuration file exists and is not empty\nif [ -s "/etc/blacklist-by-ip" ]; then\n    echo "Adding IPs blacklists."\n    firewall-cmd -q --permanent --ipset=blacklist \\\n        --add-entries-from-file=/etc/blacklist-by-ip && \\\n        echo "Added IPs to blacklist ipset."\nfi\n\n# Add the blacklist ipset to the drop zone if not already setup\nif firewall-cmd -q --zone=drop --query-source=ipset:blacklist; then\n    echo "Blacklist already in firewalld drop zone."\nelse\n    echo "Adding ipset blacklist to firewalld drop zone."\n    firewall-cmd --permanent --zone=drop --add-source=ipset:blacklist\nfi\n\nfirewall-cmd -q --reload\n\npopd\nrm -rf $ipdeny_tmp_dir\n')),(0,n.kt)("p",null,"This should be installed to ",(0,n.kt)("inlineCode",{parentName:"p"},"/usr/local/sbin")," and don\u2019t forget to make it executable!"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"sudo chmod +x /usr/local/sbin/firewalld-blacklist\n")),(0,n.kt)("p",null,"Then create a configure file: ",(0,n.kt)("inlineCode",{parentName:"p"},"/etc/blacklist-by-country"),":"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'# Which countries should be blocked?\n# Use the two letter designation separated by a space.\ncountries=""\n')),(0,n.kt)("p",null,"And another configuration file ",(0,n.kt)("inlineCode",{parentName:"p"},"/etc/blacklist-by-ip"),", which is just one IP per line without any additional formatting."),(0,n.kt)("p",null,"For this example 10 random countries were selected from the ipdeny zones:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"# ls | shuf -n 10 | sed \"s/\\.zone//g\" | tr '\\n' ' '\nnl ee ie pk is sv na om gp bn\n")),(0,n.kt)("p",null,"Now as long as at least one country has been added to the config file it\u2019s ready to run!"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"sudo firewalld-blacklist\nsudo firewall-cmd --info-zone=drop\nsudo firewall-cmd --info-ipset=blacklist | less\n")),(0,n.kt)("p",null,"See also - auto blacklist updates: ",(0,n.kt)("a",{parentName:"p",href:"https://pagure.io/firewalld-blacklist/tree/master"},"https://pagure.io/firewalld-blacklist/tree/master")),(0,n.kt)("p",null,"download the service file and timer to ",(0,n.kt)("inlineCode",{parentName:"p"},"/etc/systemd/system/")," and enable the timer:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"sudo systemctl daemon-reload\nsudo systemctl enable --now firewalld-blacklist.timer\n")))}d.isMDXComponent=!0},52518:(e,a,t)=>{t.d(a,{Z:()=>l});const l=t.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-ec671595d585b88a85b017a7908fb619.jpg"}}]);