"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[78358],{3905:(t,e,a)=>{a.d(e,{Zo:()=>p,kt:()=>h});var n=a(67294);function i(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function s(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function o(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?s(Object(a),!0).forEach((function(e){i(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function r(t,e){if(null==t)return{};var a,n,i=function(t,e){if(null==t)return{};var a,n,i={},s=Object.keys(t);for(n=0;n<s.length;n++)a=s[n],e.indexOf(a)>=0||(i[a]=t[a]);return i}(t,e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(t);for(n=0;n<s.length;n++)a=s[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(i[a]=t[a])}return i}var l=n.createContext({}),m=function(t){var e=n.useContext(l),a=e;return t&&(a="function"==typeof t?t(e):o(o({},e),t)),a},p=function(t){var e=m(t.components);return n.createElement(l.Provider,{value:e},t.children)},d={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},c=n.forwardRef((function(t,e){var a=t.components,i=t.mdxType,s=t.originalType,l=t.parentName,p=r(t,["components","mdxType","originalType","parentName"]),c=m(a),h=i,u=c["".concat(l,".").concat(h)]||c[h]||d[h]||s;return a?n.createElement(u,o(o({ref:e},p),{},{components:a})):n.createElement(u,o({ref:e},p))}));function h(t,e){var a=arguments,i=e&&e.mdxType;if("string"==typeof t||i){var s=a.length,o=new Array(s);o[0]=c;var r={};for(var l in e)hasOwnProperty.call(e,l)&&(r[l]=e[l]);r.originalType=t,r.mdxType="string"==typeof t?t:i,o[1]=r;for(var m=2;m<s;m++)o[m]=a[m];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},86573:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>s,metadata:()=>r,toc:()=>m});var n=a(87462),i=(a(67294),a(3905));const s={sidebar_position:9020,slug:"2019-08-11",title:"MQTT Networks with Home Assistant",authors:"mpolinowski",tags:["MQTT","Smarthome","IoT"]},o=void 0,r={unversionedId:"IoT-and-Machine-Learning/MQTT/2019-08-11--mqtt-home-assistant/index",id:"IoT-and-Machine-Learning/MQTT/2019-08-11--mqtt-home-assistant/index",title:"MQTT Networks with Home Assistant",description:"Taipa, Macau",source:"@site/docs/IoT-and-Machine-Learning/MQTT/2019-08-11--mqtt-home-assistant/index.mdx",sourceDirName:"IoT-and-Machine-Learning/MQTT/2019-08-11--mqtt-home-assistant",slug:"/IoT-and-Machine-Learning/MQTT/2019-08-11--mqtt-home-assistant/2019-08-11",permalink:"/docs/IoT-and-Machine-Learning/MQTT/2019-08-11--mqtt-home-assistant/2019-08-11",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/IoT-and-Machine-Learning/MQTT/2019-08-11--mqtt-home-assistant/index.mdx",tags:[{label:"MQTT",permalink:"/docs/tags/mqtt"},{label:"Smarthome",permalink:"/docs/tags/smarthome"},{label:"IoT",permalink:"/docs/tags/io-t"}],version:"current",sidebarPosition:9020,frontMatter:{sidebar_position:9020,slug:"2019-08-11",title:"MQTT Networks with Home Assistant",authors:"mpolinowski",tags:["MQTT","Smarthome","IoT"]},sidebar:"tutorialSidebar",previous:{title:"Go Paho MQTT Client",permalink:"/docs/IoT-and-Machine-Learning/MQTT/2021-09-12--golang-paho-mqtt/2021-09-12"},next:{title:"MQTT Networks with Athom Homey",permalink:"/docs/IoT-and-Machine-Learning/MQTT/2019-08-10--mqtt-athom-homey/2019-08-10"}},l={},m=[{value:"Home Assistant Installation on a Raspberry Pi",id:"home-assistant-installation-on-a-raspberry-pi",level:2},{value:"MQTT Binding",id:"mqtt-binding",level:3},{value:"Testing our MQTT Service",id:"testing-our-mqtt-service",level:3},{value:"Adding a UI Switch",id:"adding-a-ui-switch",level:2},{value:"Switch Component",id:"switch-component",level:3},{value:"Configuring the User Interface",id:"configuring-the-user-interface",level:3},{value:"Adding your Cameras Live Video",id:"adding-your-cameras-live-video",level:2},{value:"Adding a UI Push Button",id:"adding-a-ui-push-button",level:2},{value:"Automations",id:"automations",level:2},{value:"Testing our Service",id:"testing-our-service",level:3},{value:"Day/Night Switching Detection Areas",id:"daynight-switching-detection-areas",level:3}],p={toc:m};function d(t){let{components:e,...s}=t;return(0,i.kt)("wrapper",(0,n.Z)({},p,s,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Taipa, Macau",src:a(32003).Z,width:"1500",height:"627"})),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#home-assistant-installation-on-a-raspberry-pi"},"Home Assistant Installation on a Raspberry Pi"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#mqtt-binding"},"MQTT Binding")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#testing-our-mqtt-service"},"Testing our MQTT Service")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#adding-a-ui-switch"},"Adding a UI Switch"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#switch-component"},"Switch Component")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#configuring-the-user-interface"},"Configuring the User Interface")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#adding-your-cameras-live-video"},"Adding your Cameras Live Video")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#adding-a-ui-push-button"},"Adding a UI Push Button")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#automations"},"Automations"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#testing-our-service"},"Testing our Service")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#daynight-switching-detection-areas"},"Day/Night Switching Detection Areas")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#using-home-assistant-as-the-alarmserver-for-your-camera"},"Using Home Assistant as the Alarmserver for your Camera"))),(0,i.kt)("h2",{id:"home-assistant-installation-on-a-raspberry-pi"},"Home Assistant Installation on a Raspberry Pi"),(0,i.kt)("p",null,"Following the ",(0,i.kt)("a",{parentName:"p",href:"https://www.home-assistant.io/docs/installation/raspberry-pi/"},"installation instruction")," and the ",(0,i.kt)("a",{parentName:"p",href:"https://www.home-assistant.io/docs/autostart/systemd/"},"SystemD Service Setup")," it turned out to be a breeze to install HASS on our Raspberry Pi 3 with ",(0,i.kt)("a",{parentName:"p",href:"https://www.raspberrypi.org/downloads/raspbian/"},"Raspbian Buster"),"."),(0,i.kt)("h3",{id:"mqtt-binding"},"MQTT Binding"),(0,i.kt)("p",null,"We noticed that now you are able to add an MQTT broker already during the initial setup. There is no longer the need for doing this inside the configuration YAML files:"),(0,i.kt)("hr",null),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Home Assistant with your INSTAR IP Camera",src:a(36560).Z,width:"1040",height:"521"})),(0,i.kt)("hr",null),(0,i.kt)("p",null,"When you access the UI for the first time click on adding an extension and choose MQTT from the list. Now type in your INSTAR IP camera IP address (e.g. ",(0,i.kt)("inlineCode",{parentName:"p"},"192.168.2.165"),") followed by the port ",(0,i.kt)("inlineCode",{parentName:"p"},"1883")," and your INSTAR MQTT Broker login."),(0,i.kt)("hr",null),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Home Assistant with your INSTAR IP Camera",src:a(21004).Z,width:"1043",height:"297"})),(0,i.kt)("hr",null),(0,i.kt)("p",null,"If you already installed Home Assistant, go to ",(0,i.kt)("strong",{parentName:"p"},"Settings")," and ",(0,i.kt)("strong",{parentName:"p"},"Integrations")," and select to add the ",(0,i.kt)("em",{parentName:"p"},"MQTT Broker")," there:"),(0,i.kt)("hr",null),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Home Assistant with your INSTAR IP Camera",src:a(60683).Z,width:"866",height:"701"})),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Home Assistant with your INSTAR IP Camera",src:a(69364).Z,width:"879",height:"263"})),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"testing-our-mqtt-service"},"Testing our MQTT Service"),(0,i.kt)("p",null,"To test if everything is working, we need to go to ",(0,i.kt)("strong",{parentName:"p"},"Developer Tools")," and ",(0,i.kt)("strong",{parentName:"p"},"MQTT"),". Here we can setup a subscription for the topic (",(0,i.kt)("strong",{parentName:"p"},"Listen to a topic"),") ",(0,i.kt)("inlineCode",{parentName:"p"},"instar/000389888811/status/alarm/area1/enable")," (please replace the ",(0,i.kt)("strong",{parentName:"p"},"000389888811")," part with the MAC address of your camera)."),(0,i.kt)("hr",null),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Home Assistant with your INSTAR IP Camera",src:a(74027).Z,width:"862",height:"808"})),(0,i.kt)("hr",null),(0,i.kt)("p",null,"In the screenshot you can see that we first received an update that the value for this topic was 0: ",(0,i.kt)("inlineCode",{parentName:"p"},'{"val":"0"}'),". That means that the alarm detection area 1 was deactivated. Now by publishing the value ",(0,i.kt)("inlineCode",{parentName:"p"},'{"val":"1"}')," on the topic ",(0,i.kt)("inlineCode",{parentName:"p"},"instar/000389888811/alarm/area1/enable")," the area gets activated. You can verify this inside your cameras web user interface. You can also deactivate the area again inside the WebUI and see that the MQTT topic switches back to ",(0,i.kt)("inlineCode",{parentName:"p"},'{"val":"0"}'),"."),(0,i.kt)("h2",{id:"adding-a-ui-switch"},"Adding a UI Switch"),(0,i.kt)("p",null,"We now know that we are able to subscribe to MQTT status topics on our camera and to update these topics via the corresponding command topic. All we need to do now is to add a ",(0,i.kt)("strong",{parentName:"p"},"Switch Component")," that does this for us and can be assigned to our Home Assistant dashboard."),(0,i.kt)("h3",{id:"switch-component"},"Switch Component"),(0,i.kt)("p",null,"To keep our main ",(0,i.kt)("inlineCode",{parentName:"p"},"configuration.yaml")," uncluttered we will create a separate file ",(0,i.kt)("inlineCode",{parentName:"p"},"switches.yaml")," that contains all our MQTT related switches and import this into the configuration by adding the following line: ",(0,i.kt)("inlineCode",{parentName:"p"},"switch: !include switches.yaml"),"."),(0,i.kt)("p",null,"We can now add our first switch components - e.g. to activate and deactivate the motion detection areas:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"- platform: mqtt\n  name: 'Alarm Area 1'\n  state_topic: 'instar/000389888811/status/alarm/area1/enable'\n  command_topic: 'instar/000389888811/alarm/area1/enable'\n  qos: 1\n  payload_on: '{\"val\":\"1\"}'\n  payload_off: '{\"val\":\"0\"}'\n  optimistic: false\n  retain: false\n\n- platform: mqtt\n  name: 'Alarm Area 2'\n  state_topic: 'instar/000389888811/status/alarm/area2/enable'\n  command_topic: 'instar/000389888811/alarm/area2/enable'\n  qos: 1\n  payload_on: '{\"val\":\"1\"}'\n  payload_off: '{\"val\":\"0\"}'\n  optimistic: false\n  retain: false\n\n- platform: mqtt\n  name: 'Alarm Area 3'\n  state_topic: 'instar/000389888811/status/alarm/area3/enable'\n  command_topic: 'instar/000389888811/alarm/area3/enable'\n  qos: 1\n  payload_on: '{\"val\":\"1\"}'\n  payload_off: '{\"val\":\"0\"}'\n  optimistic: false\n  retain: false\n\n- platform: mqtt\n  name: 'Alarm Area 4'\n  state_topic: 'instar/000389888811/status/alarm/area4/enable'\n  command_topic: 'instar/000389888811/alarm/area4/enable'\n  qos: 1\n  payload_on: '{\"val\":\"1\"}'\n  payload_off: '{\"val\":\"0\"}'\n  optimistic: false\n  retain: false\n")),(0,i.kt)("p",null,"For each component - that we assign the switch template to inside our main configuration - we have to define the platform we want to use it on. Now this is the ",(0,i.kt)("strong",{parentName:"p"},"mqtt")," platform that we added to Home Assistant."),(0,i.kt)("p",null,"We have both a ",(0,i.kt)("strong",{parentName:"p"},"state","_","topic")," and a ",(0,i.kt)("strong",{parentName:"p"},"command","_","topic"),". The first one takes the status topic and defines the state our switch is in. The command topic is the one that we use to update the state and trigger our camera to change it's corresponding internal state e.g. switch our alarm area on or off. Here you can use any of the MQTT Topics that belong to functions that are supported by your camera model."),(0,i.kt)("p",null,"The message payload is in this case either ",(0,i.kt)("inlineCode",{parentName:"p"},'{"val":"1"}'),", to switch the area on, or  ",(0,i.kt)("inlineCode",{parentName:"p"},'{"val":"0"}')," to deactivate the area. Those are the ",(0,i.kt)("strong",{parentName:"p"},"payload","_","on")," and ",(0,i.kt)("strong",{parentName:"p"},"value","_","payload")," for our switch. Note that you have to surround each one of those with ",(0,i.kt)("em",{parentName:"p"},"single-tick quotation marks"),"."),(0,i.kt)("p",null,"Now we are also able to set some MQTT magic. The first one is ",(0,i.kt)("inlineCode",{parentName:"p"},"qos")," and stands for ",(0,i.kt)("strong",{parentName:"p"},"Quality of Service")," - where ",(0,i.kt)("inlineCode",{parentName:"p"},"0")," stands for ",(0,i.kt)("em",{parentName:"p"},"fire-and-forget")," (your client might loose an status update if it does not receive the message), ",(0,i.kt)("inlineCode",{parentName:"p"},"1")," means that it is verified that a status update is received and ",(0,i.kt)("inlineCode",{parentName:"p"},"2")," is not relevant for us here (with a qos value of 2 it is made sure that every update is received but only received once - which is important e.g. when you are recording time series from measuring sensors). ",(0,i.kt)("inlineCode",{parentName:"p"},"optimistic")," has to be used when your device does not have a separate ",(0,i.kt)("inlineCode",{parentName:"p"},"state_topic")," - here you have to assume that the command you just sent worked and the state was updated. With ",(0,i.kt)("inlineCode",{parentName:"p"},"retain")," you can hold on to the value of a topic even if the client or server cannot be reached. But we don't need this for our setup."),(0,i.kt)("h3",{id:"configuring-the-user-interface"},"Configuring the User Interface"),(0,i.kt)("p",null,"Now we need to add a new ",(0,i.kt)("strong",{parentName:"p"},"View")," for our camera by switching the UI into the ",(0,i.kt)("em",{parentName:"p"},"configuration mode"),":"),(0,i.kt)("hr",null),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Home Assistant with your INSTAR IP Camera",src:a(11039).Z,width:"868",height:"208"})),(0,i.kt)("hr",null),(0,i.kt)("p",null,"Now click on the ",(0,i.kt)("strong",{parentName:"p"},"+")," as highlighted in the screenshot below and add a view for your camera:"),(0,i.kt)("hr",null),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Home Assistant with your INSTAR IP Camera",src:a(98367).Z,width:"800",height:"663"})),(0,i.kt)("hr",null),(0,i.kt)("p",null,"Switch to the new view and click on the big ",(0,i.kt)("strong",{parentName:"p"},"+")," button to add a card that can contain our MQTT switches:"),(0,i.kt)("hr",null),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Home Assistant with your INSTAR IP Camera",src:a(41760).Z,width:"805",height:"193"})),(0,i.kt)("hr",null),(0,i.kt)("p",null,"Choose an ",(0,i.kt)("strong",{parentName:"p"},"Entity Card")," and select all the switches we just added to our configuration. They should show up automatically - if not, try reloading Home Assistant:"),(0,i.kt)("hr",null),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Home Assistant with your INSTAR IP Camera",src:a(30468).Z,width:"868",height:"645"})),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Home Assistant with your INSTAR IP Camera",src:a(54605).Z,width:"867",height:"579"})),(0,i.kt)("hr",null),(0,i.kt)("p",null,"Quit the configuration mode to get back to the regular UI and you should be able to see your new card with all 4 alarm area switches. Try switching your alarm areas from your cameras Web User Interface - once you apply your settings there all switched inside Home Assistant should react to the state change immediately."),(0,i.kt)("hr",null),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Home Assistant with your INSTAR IP Camera",src:a(17955).Z,width:"857",height:"916"})),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"adding-your-cameras-live-video"},"Adding your Cameras Live Video"),(0,i.kt)("h2",{id:"adding-a-ui-push-button"},"Adding a UI Push Button"),(0,i.kt)("p",null,"Some of our camera's functions don't have 2 states (on/off) - we just need a button that we can push and it should jump back to idle right after that. Examples are:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Manual Alarm Trigger: ",(0,i.kt)("inlineCode",{parentName:"li"},"alarm/pushalarm")),(0,i.kt)("li",{parentName:"ul"},"Go to Preset Position: ",(0,i.kt)("inlineCode",{parentName:"li"},"features/ptz/preset")),(0,i.kt)("li",{parentName:"ul"},"Move Up/Down/Left/Right: ",(0,i.kt)("inlineCode",{parentName:"li"},"features/ptz/move"),"  etc.")),(0,i.kt)("p",null,"This can be done in Home Assistant with a script. Make sure that your ",(0,i.kt)("inlineCode",{parentName:"p"},"scripts.yaml")," file exist inside the ",(0,i.kt)("strong",{parentName:"p"},".homeassistant")," folder and is linked into your main ",(0,i.kt)("inlineCode",{parentName:"p"},"configuration.yaml")," - ",(0,i.kt)("inlineCode",{parentName:"p"},"script: !include scripts.yaml"),". Then open the scripts file and add the following lines:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'9010_pushalarm:\n  sequence:\n    - service: mqtt.publish\n      data_template:\n        topic: instar/000389888811/alarm/pushalarm\n        payload: \'{"val":"1"}\'\n        qos: 1\n\n9010_gotopos1:\n  sequence:\n    - service: mqtt.publish\n      data_template:\n        topic: instar/000389888811/features/ptz/preset\n        payload: \'{"val":"0"}\'\n        qos: 1\n\n9010_moveright:\n  sequence:\n    - service: mqtt.publish\n      data_template:\n        topic: instar/000389888811/features/ptz/move\n        payload: \'{"val":"right"}\'\n        qos: 1\n\n9010_movestop:\n  sequence:\n    - service: mqtt.publish\n      data_template:\n        topic: instar/000389888811/features/ptz/move\n        payload: \'{"val":"stop"}\'\n        qos: 1\n')),(0,i.kt)("p",null,"Choose a name for each script that helps you identify which camera you are addressing, e.g. ",(0,i.kt)("inlineCode",{parentName:"p"},"9010_pushalarm")," and choose the MQTT topics that you want to add in form of buttons to your Home Assistant UI. Note that the ",(0,i.kt)("strong",{parentName:"p"},"move command")," will move your camera's PTZ head continuously until you hit the ",(0,i.kt)("strong",{parentName:"p"},"stop command")," - don't forget to add the stop button :)"),(0,i.kt)("p",null,"Just like with our ",(0,i.kt)("a",{parentName:"p",href:"#configuring-the-user-interface"},"switches earlier")," we now have to activate the configuration mode inside the Home Assistant Lovelace UI and click on the ",(0,i.kt)("strong",{parentName:"p"},"+")," button to add a new ",(0,i.kt)("strong",{parentName:"p"},"Entity"),":"),(0,i.kt)("hr",null),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Home Assistant with your INSTAR IP Camera",src:a(96478).Z,width:"1066",height:"384"})),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Home Assistant with your INSTAR IP Camera",src:a(44535).Z,width:"1069",height:"378"})),(0,i.kt)("hr",null),(0,i.kt)("p",null,"Now select the script you want to assign to this button from the ",(0,i.kt)("strong",{parentName:"p"},"Entity List")," and name the card. Unfortunately, the UI does not yet give us the option to add a ",(0,i.kt)("inlineCode",{parentName:"p"},"name")," and icon to the selected script. But if you click on the two wavy brackets - highlighted here (red arrow):"),(0,i.kt)("hr",null),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Home Assistant with your INSTAR IP Camera",src:a(97096).Z,width:"1050",height:"615"})),(0,i.kt)("hr",null),(0,i.kt)("p",null,"You can add them manually into the entity definition:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"entities:\n  - entity: script.9010_pushalarm\n    icon: 'mdi:bell'\n    name: IN-9010 FHD\nshow_header_toggle: false\ntitle: Trigger Alarm\ntype: entities\n")),(0,i.kt)("hr",null),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Home Assistant with your INSTAR IP Camera",src:a(95427).Z,width:"1048",height:"556"})),(0,i.kt)("hr",null),(0,i.kt)("p",null,"You can choose your icon from the ",(0,i.kt)("a",{parentName:"p",href:"https://cdn.materialdesignicons.com/4.5.95/"},"Material Design Icons"),". Note that the button we chose here - ",(0,i.kt)("inlineCode",{parentName:"p"},"icon: 'mdi:bell'")," - is called ",(0,i.kt)("inlineCode",{parentName:"p"},"mdi-bell")," in the Material Design documentation and this name has to be changed accordingly for Home Assistant to recognize the icon."),(0,i.kt)("hr",null),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Home Assistant with your INSTAR IP Camera",src:a(56553).Z,width:"1051",height:"698"})),(0,i.kt)("hr",null),(0,i.kt)("p",null,"Here we added all Pan-Tilt, Preset Position and the Manual Alarm Trigger command to the Lovelace UI."),(0,i.kt)("h2",{id:"automations"},"Automations"),(0,i.kt)("p",null,"Now that we are able to manually trigger functions on our camera we now want to find a way to automate those processes through Home Assistant. To do this we will first add a prototype service to our ",(0,i.kt)("inlineCode",{parentName:"p"},"scripts.yaml")," file. This service should be able to receive a ",(0,i.kt)("strong",{parentName:"p"},"MQTT Topic")," (",(0,i.kt)("inlineCode",{parentName:"p"},"target"),") and ",(0,i.kt)("strong",{parentName:"p"},"MQTT Payload")," (",(0,i.kt)("inlineCode",{parentName:"p"},"message"),") from an automation in the ",(0,i.kt)("inlineCode",{parentName:"p"},"automations.yaml")," file. This can be done by adding the following lines into the script file:"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"scripts.yaml")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'# MQTT Publish Service\n\nsend_mqtt_command:\n  sequence:\n    - service: mqtt.publish\n      data_template:\n        topic: "{{ target }}"\n        payload: "{{ message }}"\n        qos: 1\n')),(0,i.kt)("p",null," Now make sure that the ",(0,i.kt)("inlineCode",{parentName:"p"},"automations.yaml")," file exists in the ",(0,i.kt)("em",{parentName:"p"},".homeassistant")," directory and is linked into the main ",(0,i.kt)("inlineCode",{parentName:"p"},"configuration.yaml"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"automation: !include automations.yaml"),". Then switch to the Lovelace UI, open the ",(0,i.kt)("strong",{parentName:"p"},"Configuration Panel")," and select ",(0,i.kt)("strong",{parentName:"p"},"Automation"),":"),(0,i.kt)("hr",null),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Home Assistant with your INSTAR IP Camera",src:a(35281).Z,width:"976",height:"707"})),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"testing-our-service"},"Testing our Service"),(0,i.kt)("p",null,"Click on the red ",(0,i.kt)("strong",{parentName:"p"},"+")," button to add a new automation. Fill out the form as follows:"),(0,i.kt)("hr",null),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Home Assistant with your INSTAR IP Camera",src:a(60297).Z,width:"971",height:"705"})),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Home Assistant with your INSTAR IP Camera",src:a(98819).Z,width:"974",height:"676"})),(0,i.kt)("hr",null),(0,i.kt)("p",null,"To test our automation we want to set up a MQTT topic ",(0,i.kt)("inlineCode",{parentName:"p"},"hass/automation/test")," that, when it receives a payload of ",(0,i.kt)("inlineCode",{parentName:"p"},'{"val":"1"}')," will call our prototype MQTT service we created above and passes down a ",(0,i.kt)("strong",{parentName:"p"},"message")," and a ",(0,i.kt)("strong",{parentName:"p"},"topic")," to it:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "message": "{\\"val\\":\\"1\\"}",\n  "target": "instar/000389888811/features/ptz/preset"\n}\n')),(0,i.kt)("p",null,"Note that to be able to send a JSON formated payload inside this JSON expression, we have to escape the quotation marks with a backslash."),(0,i.kt)("p",null,"By sending the payload ",(0,i.kt)("inlineCode",{parentName:"p"},"1")," to ",(0,i.kt)("inlineCode",{parentName:"p"},"/features/ptz/preset")," we have our camera moving to ",(0,i.kt)("strong",{parentName:"p"},"preset position 2"),". We can test this using ",(0,i.kt)("strong",{parentName:"p"},"MQTT.fx"),":"),(0,i.kt)("hr",null),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Home Assistant with your INSTAR IP Camera",src:a(98586).Z,width:"987",height:"244"})),(0,i.kt)("hr",null),(0,i.kt)("p",null,"Clicking on publish will trigger our automation, that then triggers our service telling our camera to move to preset 2."),(0,i.kt)("p",null,"When you check the ",(0,i.kt)("inlineCode",{parentName:"p"},"automations.yaml")," file inside the ",(0,i.kt)("inlineCode",{parentName:"p"},".homeassistant")," directory, you will see that Home Assistant created the automation for us as follows:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"- id: '1571128164029'\n  alias: TEST MQTT Automation\n  trigger:\n  - payload: '{\"val\":\"1\"}'\n    platform: mqtt\n    topic: hass/automation/test\n  condition: []\n  action:\n  - alias: ''\n    data:\n      message: '{\"val\":\"1\"}'\n      target: instar/000389888811/features/ptz/preset\n    service: script.send_mqtt_command\n")),(0,i.kt)("h3",{id:"daynight-switching-detection-areas"},"Day/Night Switching Detection Areas"),(0,i.kt)("p",null,"Now that we have proven that our concept is sound, we can continue and build our first meaningful automation. For this we can, again, use our prototype MQTT service and have an automation - triggered by a schedule or timed events like sunrise/sunset - pass it the necessary MQTT topics and payloads to switch our detection areas on or off:"),(0,i.kt)("hr",null),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Home Assistant with your INSTAR IP Camera",src:a(52676).Z,width:"969",height:"693"})),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Home Assistant with your INSTAR IP Camera",src:a(60615).Z,width:"969",height:"726"})),(0,i.kt)("hr",null),(0,i.kt)("p",null,"This is the ",(0,i.kt)("strong",{parentName:"p"},"Day Automation")," that is triggered by the ",(0,i.kt)("strong",{parentName:"p"},"Sunrise")," and will update the MQTT topics to activate Alarm Detection Area 1 & 2, while deactivating Areas 3 & 4. Note that this automation combines 4 actions that all will be let loose on our MQTT Publishing Service every morning by sunrise."),(0,i.kt)("p",null,"The ",(0,i.kt)("strong",{parentName:"p"},"Night Automation")," is the opposite - triggered by ",(0,i.kt)("strong",{parentName:"p"},"Sunset")," and deactivates Areas 1 & 2, while activating Areas 3 & 4."),(0,i.kt)("p",null,"A quick look into the ",(0,i.kt)("inlineCode",{parentName:"p"},"automations.yaml")," file shows us the two automations that were created through the Lovelace UI:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'- id: \'1571131738957\'\n  alias: Switch to Night Areas\n  trigger:\n  - event: sunset\n    platform: sun\n  condition: []\n  action:\n  - data:\n      message: \'{"val":"0"}\'\n      target: instar/000389888811/alarm/area1/enable\n    service: script.send_mqtt_command\n  - data:\n      message: \'{"val":"0"}\'\n      target: instar/000389888811/alarm/area2/enable\n    service: script.send_mqtt_command\n  - data:\n      message: \'{"val":"1"}\'\n      target: instar/000389888811/alarm/area3/enable\n    service: script.send_mqtt_command\n  - data:\n      message: \'{"val":"1"}\'\n      target: instar/000389888811/alarm/area4/enable\n    service: script.send_mqtt_command\n\n    \n- id: \'1571131880630\'\n  alias: Switch to Day Areas\n  trigger:\n  - event: sunrise\n    platform: sun\n  condition: []\n  action:\n  - data:\n      message: \'{"val":"1"}\'\n      target: instar/000389888811/alarm/area1/enable\n    service: script.send_mqtt_command\n  - data:\n      message: \'{"val":"1"}\'\n      target: instar/000389888811/alarm/area2/enable\n    service: script.send_mqtt_command\n  - data:\n      message: \'{"val":"0"}\'\n      target: instar/000389888811/alarm/area3/enable\n    service: script.send_mqtt_command\n  - data:\n      message: \'{"val":"0"}\'\n      target: instar/000389888811/alarm/area4/enable\n    service: script.send_mqtt_command\n')),(0,i.kt)("p",null,"You can now wait for the next Sunrise or Sunset to see if your automation is working (or just use the Home Assistant Developer Tools inside the Lovelace UI to trigger this event)."))}d.isMDXComponent=!0},36560:(t,e,a)=>{a.d(e,{Z:()=>n});const n=a.p+"assets/images/Home_Assistant_01-dfbb2b0cbf4e985d385da05ae4bab355.png"},21004:(t,e,a)=>{a.d(e,{Z:()=>n});const n=a.p+"assets/images/Home_Assistant_02-6537cced391fe7aa017ca8e8083fa5f4.png"},60683:(t,e,a)=>{a.d(e,{Z:()=>n});const n=a.p+"assets/images/Home_Assistant_03-9c82e0326ba8118e3458ef051d92f874.png"},69364:(t,e,a)=>{a.d(e,{Z:()=>n});const n=a.p+"assets/images/Home_Assistant_04-127766b64617aadcb619d8fe953fd541.png"},74027:(t,e,a)=>{a.d(e,{Z:()=>n});const n=a.p+"assets/images/Home_Assistant_05-5b1a5cba5cf6c80396b04b12fa44e8f7.png"},11039:(t,e,a)=>{a.d(e,{Z:()=>n});const n=a.p+"assets/images/Home_Assistant_06-cbed47f5c2bf352f8925308833c16e7a.png"},98367:(t,e,a)=>{a.d(e,{Z:()=>n});const n=a.p+"assets/images/Home_Assistant_07-f4ce0b9bfeec5c68b7f1fc6ade9de4fa.png"},41760:(t,e,a)=>{a.d(e,{Z:()=>n});const n=a.p+"assets/images/Home_Assistant_08-5b41e6473b8ee767e5d424cb1a48a773.png"},30468:(t,e,a)=>{a.d(e,{Z:()=>n});const n=a.p+"assets/images/Home_Assistant_09-15563dd399ba12509562f5927eed3067.png"},54605:(t,e,a)=>{a.d(e,{Z:()=>n});const n=a.p+"assets/images/Home_Assistant_10-8663c7ab0d3fe11f2acf1541e5b10846.png"},17955:(t,e,a)=>{a.d(e,{Z:()=>n});const n=a.p+"assets/images/Home_Assistant_12-5ea816b3a5d2fff377235eb8d8b52313.gif"},96478:(t,e,a)=>{a.d(e,{Z:()=>n});const n=a.p+"assets/images/Home_Assistant_13-c1ad54af96eaec2e4797bb646e9e0d60.png"},44535:(t,e,a)=>{a.d(e,{Z:()=>n});const n=a.p+"assets/images/Home_Assistant_14-b1a5e0e5edab9dddcdf97e6931def111.png"},97096:(t,e,a)=>{a.d(e,{Z:()=>n});const n=a.p+"assets/images/Home_Assistant_15-23c43a73b35b278dc9f57c4831e96614.png"},95427:(t,e,a)=>{a.d(e,{Z:()=>n});const n=a.p+"assets/images/Home_Assistant_16-cfe71898ee0022977e00c9e2d52f518e.png"},56553:(t,e,a)=>{a.d(e,{Z:()=>n});const n=a.p+"assets/images/Home_Assistant_17-1f370422b381c96fbbe604baf55a0962.png"},35281:(t,e,a)=>{a.d(e,{Z:()=>n});const n=a.p+"assets/images/Home_Assistant_18-3553fd9f6cba2ee267efbf243db67424.png"},60297:(t,e,a)=>{a.d(e,{Z:()=>n});const n=a.p+"assets/images/Home_Assistant_19-8c4258738e4e4fa4bb68cdee3223f5c3.png"},98819:(t,e,a)=>{a.d(e,{Z:()=>n});const n=a.p+"assets/images/Home_Assistant_20-a2ed4b96133aebb3944b6cbc824e477e.png"},98586:(t,e,a)=>{a.d(e,{Z:()=>n});const n=a.p+"assets/images/Home_Assistant_21-a5ff882a1cbfd697cac80fc51626ba40.png"},52676:(t,e,a)=>{a.d(e,{Z:()=>n});const n=a.p+"assets/images/Home_Assistant_22-798ec1d55a99acef87cc04753557b894.png"},60615:(t,e,a)=>{a.d(e,{Z:()=>n});const n=a.p+"assets/images/Home_Assistant_23-e980211d629c3a7b56b7bd4198133674.png"},32003:(t,e,a)=>{a.d(e,{Z:()=>n});const n=a.p+"assets/images/photo-kt456d_645dhfh6dgjkhg4_d-f5314d8e960ad06f31d574bb958b70cf.jpg"}}]);