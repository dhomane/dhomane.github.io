"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[62956],{3905:(e,a,t)=>{t.d(a,{Zo:()=>p,kt:()=>d});var n=t(67294);function o(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function r(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?r(Object(t),!0).forEach((function(a){o(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function s(e,a){if(null==e)return{};var t,n,o=function(e,a){if(null==e)return{};var t,n,o={},r=Object.keys(e);for(n=0;n<r.length;n++)t=r[n],a.indexOf(t)>=0||(o[t]=e[t]);return o}(e,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)t=r[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=n.createContext({}),c=function(e){var a=n.useContext(l),t=a;return e&&(t="function"==typeof e?e(a):i(i({},a),e)),t},p=function(e){var a=c(e.components);return n.createElement(l.Provider,{value:a},e.children)},h={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},u=n.forwardRef((function(e,a){var t=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(t),d=o,b=u["".concat(l,".").concat(d)]||u[d]||h[d]||r;return t?n.createElement(b,i(i({ref:a},p),{},{components:t})):n.createElement(b,i({ref:a},p))}));function d(e,a){var t=arguments,o=a&&a.mdxType;if("string"==typeof e||o){var r=t.length,i=new Array(r);i[0]=u;var s={};for(var l in a)hasOwnProperty.call(a,l)&&(s[l]=a[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var c=2;c<r;c++)i[c]=t[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}u.displayName="MDXCreateElement"},15176:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>l,contentTitle:()=>i,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>c});var n=t(87462),o=(t(67294),t(3905));const r={sidebar_position:8050,slug:"2021-08-06",title:"Hashicorp Consul Refresher - Loadbalancing with Fabio",authors:"mpolinowski",tags:["Consul","Nomad","Linux"]},i=void 0,s={unversionedId:"DevOps/Hashicorp/2021-08-06--hashicorp-consul-fabio-loadbalancing/index",id:"DevOps/Hashicorp/2021-08-06--hashicorp-consul-fabio-loadbalancing/index",title:"Hashicorp Consul Refresher - Loadbalancing with Fabio",description:"Tsim Sha Tsui, Hongkong",source:"@site/docs/DevOps/Hashicorp/2021-08-06--hashicorp-consul-fabio-loadbalancing/index.md",sourceDirName:"DevOps/Hashicorp/2021-08-06--hashicorp-consul-fabio-loadbalancing",slug:"/DevOps/Hashicorp/2021-08-06--hashicorp-consul-fabio-loadbalancing/2021-08-06",permalink:"/docs/DevOps/Hashicorp/2021-08-06--hashicorp-consul-fabio-loadbalancing/2021-08-06",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/DevOps/Hashicorp/2021-08-06--hashicorp-consul-fabio-loadbalancing/index.md",tags:[{label:"Consul",permalink:"/docs/tags/consul"},{label:"Nomad",permalink:"/docs/tags/nomad"},{label:"Linux",permalink:"/docs/tags/linux"}],version:"current",sidebarPosition:8050,frontMatter:{sidebar_position:8050,slug:"2021-08-06",title:"Hashicorp Consul Refresher - Loadbalancing with Fabio",authors:"mpolinowski",tags:["Consul","Nomad","Linux"]},sidebar:"tutorialSidebar",previous:{title:"Hashicorp Consul Refresher - Loadbalancing with Traefik",permalink:"/docs/DevOps/Hashicorp/2021-08-06--hashicorp-consul-traefik-loadbalancing/2021-08-06"},next:{title:"Hashicorp Consul Refresher - Service Discovery",permalink:"/docs/DevOps/Hashicorp/2021-08-05--hashicorp-consul-service-discovery/2021-08-05"}},l={},c=[{value:"Load Balancing with Fabio",id:"load-balancing-with-fabio",level:2},{value:"Create the Web Service",id:"create-the-web-service",level:3},{value:"Create and run a Fabio job",id:"create-and-run-a-fabio-job",level:3}],p={toc:c};function h(e){let{components:a,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},p,r,{components:a,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Tsim Sha Tsui, Hongkong",src:t(63896).Z,width:"1500",height:"461"})),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#load-balancing-with-fabio"},"Load Balancing with Fabio"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#create-the-web-service"},"Create the Web Service")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#create-and-run-a-fabio-job"},"Create and run a Fabio job"))))),(0,o.kt)("h2",{id:"load-balancing-with-fabio"},"Load Balancing with Fabio"),(0,o.kt)("p",null,"The main use case for ",(0,o.kt)("a",{parentName:"p",href:"https://fabiolb.net/"},"Fabio")," in this scenario is to distribute incoming HTTP(S) and TCP requests from the Internet to front-end services that can handle these requests. ",(0,o.kt)("a",{parentName:"p",href:"https://learn.hashicorp.com/tutorials/nomad/load-balancing-fabio"},"Fabio can natively integrate with Consul")," using the ",(0,o.kt)("a",{parentName:"p",href:"https://docs.traefik.io/providers/consul-catalog/"},"Consul Catalog Provider")," and can use tags to route traffic."),(0,o.kt)("h3",{id:"create-the-web-service"},"Create the Web Service"),(0,o.kt)("p",null,"I am going to modify the ",(0,o.kt)("a",{parentName:"p",href:"/docs/DevOps/Hashicorp/2021-08-05--hashicorp-consul-service-discovery/2021-08-05"},"HTTP Echo service I created earlier")," to be load balanced by Fabio:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'job "http-echo-gui" {\n  datacenters = ["instaryun"]\n\n  group "echo" {\n  \n    network {\n        port "heartbeat" {\n            static = 8080\n            }\n    }\n\n    count = 1\n    task "server" {\n      driver = "docker"  \n      config {\n        image = "hashicorp/http-echo:latest"\n        ports = ["heartbeat"]\n        args  = [\n          "-listen", ":${NOMAD_PORT_heartbeat}",\n          "-text", "${attr.os.name}: server running on ${NOMAD_IP_heartbeat} with port ${NOMAD_PORT_heartbeat}",\n        ]\n      }\n      service {\n        name = "http-echo"\n        port = "heartbeat"\n        \n        tags = [\n          "heartbeat",\n          "urlprefix-/http-echo",\n        ]\n\n        check {\n          type     = "http"\n          path     = "/health"\n          interval = "2s"\n          timeout  = "2s"\n        }\n      }\n    }\n  }\n}\n')),(0,o.kt)("p",null,'Note that this job only deploys 1 instance of the Echo web application which I will "load balance" with Fabio in the next few steps. Obviously, you should increase this count to have this make sense... but I only have two LINUX PCs running at the moment and so my "Datacenter" consists of a single minion server.'),(0,o.kt)("h3",{id:"create-and-run-a-fabio-job"},"Create and run a Fabio job"),(0,o.kt)("p",null,"Create a job named:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"nano ~/nomad_jobs/fabio.nomad\n")),(0,o.kt)("p",null,"This job starts an instance of Fabio and configures it to discover its configuration from Consul. This Fabio instance provides routing and load balancing to the sample web application."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'job "fabio" {\n  datacenters = ["instaryun"]\n  type = "system"\n\n  group "fabio" {\n    network {\n      port "lb" {\n        static = 9999\n      }\n      port "ui" {\n        static = 9998\n      }\n    }\n    task "fabio" {\n      driver = "docker"\n      config {\n        image = "fabiolb/fabio"\n        network_mode = "host"\n        ports = ["lb","ui"]\n        args    = ["-proxy.strategy=rr"]\n      }\n\n      resources {\n        cpu    = 200\n        memory = 128\n      }\n    }\n  }\n}\n')),(0,o.kt)("p",null,"Fabio can be run without any additional parameters and will use a pseudo-random strategy for load balancing between multiple instances of the same application. In our job file, an additional argument of ",(0,o.kt)("inlineCode",{parentName:"p"},"-proxy.strategy=rr")," is passed to the Fabio command to use a ",(0,o.kt)("a",{parentName:"p",href:"https://fabiolb.net/ref/proxy.strategy/"},"round-robin strategy")," instead."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'nomad plan ~/nomad_jobs/fabio.nomad\n+ Job: "fabio"\n+ Task Group: "fabio" (1 create)\n  + Task: "fabio" (forces create)\n\nScheduler dry-run:\n- All tasks successfully allocated.\n')),(0,o.kt)("p",null,"Run Fabio and it will automatically use the ",(0,o.kt)("a",{parentName:"p",href:"https://fabiolb.net/quickstart/"},"tags")," that were provided to Consul when the job was registered, to automatically configure itself with the instances running on the various dynamic ports."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'nomad job run -check-index 0 ~/nomad_jobs/fabio.nomad\n\n==> 2021-09-04T17:48:20+08:00: Evaluation "4ccd671f" finished with status "complete"\n')),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Hashicorp Consul Fabio",src:t(97317).Z,width:"1277",height:"590"})),(0,o.kt)("p",null,"The tag urlprefix-/http-echo tells Fabio to add the instance to the route /http-echo. The instances of the application are then available by visiting ",(0,o.kt)("inlineCode",{parentName:"p"},"/http-echo")," on port ",(0,o.kt)("inlineCode",{parentName:"p"},"9999"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"curl 192.168.2.111:9999/http-echo\n\ndebian: server running on 192.168.2.111 with port 8080\n")),(0,o.kt)("p",null,"The response shows that the service is still running on port 8080 but is now proxied through Fabio and - ",(0,o.kt)("strong",{parentName:"p"},"in theory")," - it would be loadbalanced. Refreshing the page would show you that you will reach all your instances of ",(0,o.kt)("inlineCode",{parentName:"p"},"http-echo"),". You can visit the ",(0,o.kt)("strong",{parentName:"p"},"Fabio UI")," on port ",(0,o.kt)("inlineCode",{parentName:"p"},"9998")," to verify that all your nodes were picked up successfully:"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Hashicorp Consul Fabio",src:t(25948).Z,width:"981",height:"385"})))}h.isMDXComponent=!0},97317:(e,a,t)=>{t.d(a,{Z:()=>n});const n=t.p+"assets/images/Hashicorp_Consul_Fabio_01-7ff80874cd28e444d5a04ea68434458d.png"},25948:(e,a,t)=>{t.d(a,{Z:()=>n});const n=t.p+"assets/images/Hashicorp_Consul_Fabio_02-69915edc19eaa6efa7b3300ef3163ec7.png"},63896:(e,a,t)=>{t.d(a,{Z:()=>n});const n=t.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-11f46a2aa16d04d5dd9b5dc1c7c256c1.jpg"}}]);