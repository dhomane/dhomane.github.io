"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[84927],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>h});var n=a(67294);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var s=n.createContext({}),c=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},d=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,l=e.mdxType,r=e.originalType,s=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),u=c(a),h=l,m=u["".concat(s,".").concat(h)]||u[h]||p[h]||r;return a?n.createElement(m,o(o({ref:t},d),{},{components:a})):n.createElement(m,o({ref:t},d))}));function h(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=a.length,o=new Array(r);o[0]=u;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:l,o[1]=i;for(var c=2;c<r;c++)o[c]=a[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},52576:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>i,toc:()=>c});var n=a(87462),l=(a(67294),a(3905));const r={sidebar_position:5970,slug:"2022-11-19",title:"Web3.js Blockchain Application",authors:"mpolinowski",tags:["Javascript"],description:"Ethereum and Metamask for Decentralized Authentication"},o=void 0,i={unversionedId:"Development/Javascript/2022-11-19-web3-javascript-app/index",id:"Development/Javascript/2022-11-19-web3-javascript-app/index",title:"Web3.js Blockchain Application",description:"Ethereum and Metamask for Decentralized Authentication",source:"@site/docs/Development/Javascript/2022-11-19-web3-javascript-app/index.md",sourceDirName:"Development/Javascript/2022-11-19-web3-javascript-app",slug:"/Development/Javascript/2022-11-19-web3-javascript-app/2022-11-19",permalink:"/docs/Development/Javascript/2022-11-19-web3-javascript-app/2022-11-19",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Development/Javascript/2022-11-19-web3-javascript-app/index.md",tags:[{label:"Javascript",permalink:"/docs/tags/javascript"}],version:"current",sidebarPosition:5970,frontMatter:{sidebar_position:5970,slug:"2022-11-19",title:"Web3.js Blockchain Application",authors:"mpolinowski",tags:["Javascript"],description:"Ethereum and Metamask for Decentralized Authentication"},sidebar:"tutorialSidebar",previous:{title:"TypeScript 2.0 in React 19 (2023)",permalink:"/docs/Development/Javascript/2022-11-29-react-typescript-intro-2023/2022-11-29"},next:{title:"WebRTC Introduction - Interactive Connectivity Establishment",permalink:"/docs/Development/Javascript/2022-11-10-webrtc-introduction-video-chat-part2/2022-11-10"}},s={},c=[{value:"Web3.js Library",id:"web3js-library",level:2},{value:"Ethereum Wallet",id:"ethereum-wallet",level:2},{value:"Building the Application",id:"building-the-application",level:2},{value:"The Login Screen",id:"the-login-screen",level:3},{value:"The Dashboard",id:"the-dashboard",level:3},{value:"Scripting",id:"scripting",level:2},{value:"Do you even have an Ethereum Wallet?",id:"do-you-even-have-an-ethereum-wallet",level:3},{value:"Login Button",id:"login-button",level:3},{value:"Load Dashboard after Login",id:"load-dashboard-after-login",level:3},{value:"Displaying Ethereum Stats",id:"displaying-ethereum-stats",level:3},{value:"Web3 Logout",id:"web3-logout",level:3}],d={toc:c};function p(e){let{components:t,...r}=e;return(0,l.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"Shenzhen, China",src:a(8782).Z,width:"2208",height:"757"})),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#web3js-library"},"Web3.js Library")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#ethereum-wallet"},"Ethereum Wallet")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#building-the-application"},"Building the Application"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#the-login-screen"},"The Login Screen")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#the-dashboard"},"The Dashboard")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#scripting"},"Scripting"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#do-you-even-have-an-ethereum-wallet"},"Do you even have an Ethereum Wallet?")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#login-button"},"Login Button")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#load-dashboard-after-login"},"Load Dashboard after Login")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#displaying-ethereum-stats"},"Displaying Ethereum Stats")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#web3-logout"},"Web3 Logout"))))),(0,l.kt)("p",null,"Following along a tutorial by ",(0,l.kt)("a",{parentName:"p",href:"https://hashnode.com/@unclebigbay"},"Ayodele Samuel Adebayo"),"."),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://web3js.org/"},"Web3.js")," is a collection of libraries that allow you to interact with a local or remote Ethereum node using HTTP, IPC, or WebSocket. Web3.js can be used in the frontend or backend of an application to read data from the blockchain."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Blockchain")," authentication can be used to protect application with public data. It helps identify who is accessing the website and what data should be accessible for the logged-in user. This is the evolution coming from a ",(0,l.kt)("strong",{parentName:"p"},"Basic Authentication")," system with a username and password in ",(0,l.kt)("inlineCode",{parentName:"p"},"web1")," to ",(0,l.kt)("strong",{parentName:"p"},"OAuth")," system allowing users to use their social media logins to login to another system with ",(0,l.kt)("inlineCode",{parentName:"p"},"web2")," and on to ",(0,l.kt)("inlineCode",{parentName:"p"},"web3")," - a decentralized system that does not involve a third-party that holds your data for you. Every user has complete control over their personal data using a ",(0,l.kt)("strong",{parentName:"p"},"Decentralised Identity"),"."),(0,l.kt)("p",null,"As a proof of work we can build an application that:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Has a login section where the user can connect to their wallet."),(0,l.kt)("li",{parentName:"ul"},"Has a dashboard section to display the logged-in user's wallet address and their Ethereum account balance.")),(0,l.kt)("h2",{id:"web3js-library"},"Web3.js Library"),(0,l.kt)("p",null,"The Web3 library can be installed as a ",(0,l.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/web3"},"Node module"),". But to get started it can also be linked in from a ",(0,l.kt)("a",{parentName:"p",href:"https://cdnjs.com/libraries/web3"},"CDN"),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-html"},'<script src="https://cdnjs.cloudflare.com/ajax/libs/web3/1.8.1/web3.min.js" integrity="sha512-vtUOC0YIaNm/UutU7yfnwqnF9LOYnXtpHe2kwi1nvJNloeGQuncNBiEKP/3Ww3D62USAhbXGsnYpAYoiDsa+wA==" crossorigin="anonymous" referrerpolicy="no-referrer"><\/script>\n')),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},(0,l.kt)("strong",{parentName:"p"},"Update"),": There is now a new ",(0,l.kt)("a",{parentName:"p",href:"https://cdnjs.com/libraries/web3/4.0.1-alpha.1"},"alpha version 4")," available.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-html"},'<script src="https://cdnjs.cloudflare.com/ajax/libs/web3/4.0.1-alpha.1/web3.min.js" integrity="sha512-53NYeuuMZACjFqIMYEeKpIAURC/HYaAKFQ3InNgTmS45BX7qNOMmjgmE5Fvidj0+hHHC9ICYi5L4AAIhqG2fOQ==" crossorigin="anonymous" referrerpolicy="no-referrer"><\/script>\n')),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"index.html")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-html"},'<!DOCTYPE html>\n<html lang="en">\n  <head>\n    <meta charset="UTF-8" />\n    <meta http-equiv="X-UA-Compatible" content="IE=edge" />\n    <meta name="viewport" content="width=device-width, initial-scale=1.0" />\n    <script src="https://cdnjs.cloudflare.com/ajax/libs/web3/4.0.1-alpha.1/web3.min.js"\n            integrity="sha512-53NYeuuMZACjFqIMYEeKpIAURC/HYaAKFQ3InNgTmS45BX7qNOMmjgmE5Fvidj0+hHHC9ICYi5L4AAIhqG2fOQ=="\n            crossorigin="anonymous"\n            referrerpolicy="no-referrer"><\/script>\n    <link rel="stylesheet" href="styles.css" />\n    <title>Web3.js Login Test</title>\n  </head>\n  <body></body>\n  <script src="./scripts.js"><\/script>\n</html>\n')),(0,l.kt)("h2",{id:"ethereum-wallet"},"Ethereum Wallet"),(0,l.kt)("p",null,"To be able to authenticate using the Ethereum Blockchain we need to setup a Ethereum Wallet on our device first. We can use ",(0,l.kt)("a",{parentName:"p",href:"https://metamask.io/download/"},"Metamask")," to interact with our Ethereum account via a web browser - e.g. as a ",(0,l.kt)("a",{parentName:"p",href:"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn"},"Chrome Plugin"),":"),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"Web3 and Dapp Development",src:a(28938).Z,width:"1092",height:"266"})),(0,l.kt)("p",null,"Create your account and generate your ",(0,l.kt)("strong",{parentName:"p"},"Master Key")," and keep it somewhere save:"),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"Web3 and Dapp Development",src:a(86732).Z,width:"874",height:"552"})),(0,l.kt)("h2",{id:"building-the-application"},"Building the Application"),(0,l.kt)("p",null,"Now that we have Web3.js and an Ethereum wallet installed we can start building the interface. Add the following blocks inside the Body tag."),(0,l.kt)("h3",{id:"the-login-screen"},"The Login Screen"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"index.html")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-html"},'<section class="login-section">\n    <button class="login-btn">\ud83d\udd13 Log in with Web3</button>\n    <span class="instruction">\n        Ensure to have an Ethereum based wallet installed i.e MetaMask\n    </span>\n</section>\n')),(0,l.kt)("h3",{id:"the-dashboard"},"The Dashboard"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"index.html")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-html"},'\x3c!-- DASHBOARD SECTION --\x3e\n<section class="dashboard-section">\n    <h2 class="wallet-status">Wallet Connected! \ud83e\udd1d</h2>\n    <h3 class="wallet-address-heading">\n        ETH Wallet Address:\n        <span class="wallet-address"></span>\n    </h3>\n    <h3 class="wallet-balance-heading">\n        ETH Balance:\n        <span class="wallet-balance"></span>\n    </h3>\n    <button class="logout-btn">\ud83d\udd10 Log out</button>\n</section>\n')),(0,l.kt)("h2",{id:"scripting"},"Scripting"),(0,l.kt)("h3",{id:"do-you-even-have-an-ethereum-wallet"},"Do you even have an Ethereum Wallet?"),(0,l.kt)("p",null,"On page load, check if the user has an Ethereum wallet installed. Else prompt the user with a message to install a wallet. If the user is already logged in simply load the dashboard:"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"scripts.js")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},'// Global wallet address variable\nwindow.userWalletAddress = null;\n\n// Check if metamask is available and if user is logged in already\nwindow.onload = async (event) => {\n\n  // Check if ethereum extension is installed\n  if (window.ethereum) {\n    // Create instance\n    window.web3 = new Web3(window.ethereum);\n  } else {\n    // Prompt to install\n    alert("Please install MetaMask or any Ethereum Extension Wallet");\n  }\n  // Check if already logged in and update the global userWalletAddress variable\n  window.userWalletAddress = window.localStorage.getItem("userWalletAddress");\n  // Show dashboard\n  showUserDashboard();\n};\n')),(0,l.kt)("h3",{id:"login-button"},"Login Button"),(0,l.kt)("p",null,"When the Metamask extension is installed but the user is not yet logged in we need a login function. Bind the login button to this function:"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"scripts.js")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},'// Web3 login function\nconst loginWithEth = async () => {\n    // Check if there is global instance\n    if (window.web3) {\n      try {\n        // Get the user\'s account\n        const selectedAccount = await window.ethereum\n          .request({\n            // Prompt metamask to login\n            method: "eth_requestAccounts",\n          })\n          .then((accounts) => accounts[0])\n          .catch(() => {\n            // Catch cancelled login\n            throw Error("Please select an account");\n          });\n  \n        // Set global wallet address variable\n        window.userWalletAddress = selectedAccount;\n  \n        // Store in local storage => can be moved to db later\n        window.localStorage.setItem("userWalletAddress", selectedAccount);\n  \n        // Show dashboard\n        showUserDashboard();\n  \n      } catch (error) {\n        alert(error);\n      }\n    } else {\n      alert("Wallet not found");\n    }\n  };\n  \n  // Bind function to login button\n  document.querySelector(".login-btn").addEventListener("click", loginWithEth);\n')),(0,l.kt)("h3",{id:"load-dashboard-after-login"},"Load Dashboard after Login"),(0,l.kt)("p",null,"Check if a user is connected to their wallet address. If they are not connected, display the login section. Once connected redirect the user to the dashboard section:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},'// Show the user dashboard\nconst showUserDashboard = async () => {\n\n    // If not logged in\n    if (!window.userWalletAddress) {\n  \n      // Change the page title\n      document.title = "Web3 Login";\n  \n      // Show the login\n      document.querySelector(".login-section").style.display = "flex";\n  \n      // Hide dashboard\n      document.querySelector(".dashboard-section").style.display = "none";\n      return false;\n    }\n  \n    // change the page title\n    document.title = "Metamask Dashboard";\n  \n    // Hide the login\n    document.querySelector(".login-section").style.display = "none";\n  \n    // Show dashboard\n    document.querySelector(".dashboard-section").style.display = "flex";\n};\n')),(0,l.kt)("h3",{id:"displaying-ethereum-stats"},"Displaying Ethereum Stats"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},'// Show wallet address from stored variable\nconst showUserWalletAddress = () => {\n  const walletAddressEl = document.querySelector(".wallet-address")\n  walletAddressEl.innerHTML = window.userWalletAddress\n}\n\n// Get wallet balance\nconst getWalletBalance = async () => {\n    if (!window.userWalletAddress) {\n      return false\n    }\n    const balance = await window.web3.eth.getBalance(window.userWalletAddress)\n    // Convert the balance to ether\n    document.querySelector(".wallet-balance").innerHTML = web3.utils.fromWei(\n      balance,\n      "ether"\n    )\n}\n')),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"Web3 and Dapp Development",src:a(64389).Z,width:"1143",height:"442"})),(0,l.kt)("h3",{id:"web3-logout"},"Web3 Logout"),(0,l.kt)("p",null,"To logout we need to set the global ",(0,l.kt)("inlineCode",{parentName:"p"},"userWalletAddress")," variable to ",(0,l.kt)("inlineCode",{parentName:"p"},"null")," and remove the ",(0,l.kt)("inlineCode",{parentName:"p"},"userWalletAddress")," from the browser ",(0,l.kt)("inlineCode",{parentName:"p"},"localStorage"),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},'// Web3 logout\nconst logout = () => {\n  // Set the global userWalletAddress to null\n  window.userWalletAddress = null\n\n  // Remove wallet address from local storage\n  window.localStorage.removeItem("userWalletAddress")\n\n  // Show the user dashboard\n  showUserDashboard()\n}\n\n// Bind function to logout button\ndocument.querySelector(".logout-btn").addEventListener("click", logout)\n')))}p.isMDXComponent=!0},28938:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/Web3-Javascript_App_01-9546ac20d7b2cd06c1e52d15e5c219d5.png"},86732:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/Web3-Javascript_App_02-ce8f25896a257874ed3039df46130a5f.png"},64389:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/Web3-Javascript_App_03-61e4ba0c77152a7701e77f2fc5b4c714.png"},8782:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-e38404fdf0e14587f660e537829bfab5.jpg"}}]);