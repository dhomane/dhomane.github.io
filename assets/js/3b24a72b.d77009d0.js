"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[46662],{3905:(e,n,a)=>{a.d(n,{Zo:()=>p,kt:()=>m});var t=a(67294);function r(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function i(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function o(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?i(Object(a),!0).forEach((function(n){r(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function l(e,n){if(null==e)return{};var a,t,r=function(e,n){if(null==e)return{};var a,t,r={},i=Object.keys(e);for(t=0;t<i.length;t++)a=i[t],n.indexOf(a)>=0||(r[a]=e[a]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)a=i[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=t.createContext({}),b=function(e){var n=t.useContext(s),a=n;return e&&(a="function"==typeof e?e(n):o(o({},n),e)),a},p=function(e){var n=b(e.components);return t.createElement(s.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},d=t.forwardRef((function(e,n){var a=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=b(a),m=r,u=d["".concat(s,".").concat(m)]||d[m]||c[m]||i;return a?t.createElement(u,o(o({ref:n},p),{},{components:a})):t.createElement(u,o({ref:n},p))}));function m(e,n){var a=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=d;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var b=2;b<i;b++)o[b]=a[b];return t.createElement.apply(null,o)}return t.createElement.apply(null,a)}d.displayName="MDXCreateElement"},97491:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>b});var t=a(87462),r=(a(67294),a(3905));const i={sidebar_position:9080,slug:"2020-07-15",title:"Zabbix Docker Installation",authors:"mpolinowski",tags:["LINUX","Zabbix","Docker"]},o=void 0,l={unversionedId:"DevOps/Zabbix/2020-07-15--zabbix-docker-installation/index",id:"DevOps/Zabbix/2020-07-15--zabbix-docker-installation/index",title:"Zabbix Docker Installation",description:"Victoria Harbour, Hong Kong",source:"@site/docs/DevOps/Zabbix/2020-07-15--zabbix-docker-installation/index.md",sourceDirName:"DevOps/Zabbix/2020-07-15--zabbix-docker-installation",slug:"/DevOps/Zabbix/2020-07-15--zabbix-docker-installation/2020-07-15",permalink:"/docs/DevOps/Zabbix/2020-07-15--zabbix-docker-installation/2020-07-15",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/DevOps/Zabbix/2020-07-15--zabbix-docker-installation/index.md",tags:[{label:"LINUX",permalink:"/docs/tags/linux"},{label:"Zabbix",permalink:"/docs/tags/zabbix"},{label:"Docker",permalink:"/docs/tags/docker"}],version:"current",sidebarPosition:9080,frontMatter:{sidebar_position:9080,slug:"2020-07-15",title:"Zabbix Docker Installation",authors:"mpolinowski",tags:["LINUX","Zabbix","Docker"]},sidebar:"tutorialSidebar",previous:{title:"Zabbix Agent",permalink:"/docs/DevOps/Zabbix/2020-07-16--zabbix-agent/2020-07-16"},next:{title:"Installing Nagios4 on Ubuntu Server 20.04",permalink:"/docs/DevOps/Zabbix/2020-07-14--nagios-ubuntu-install/2020-07-14"}},s={},b=[{value:"Alternatives",id:"alternatives",level:2},{value:"Introduction",id:"introduction",level:2},{value:"Structure",id:"structure",level:3},{value:"Configuring your Firewall",id:"configuring-your-firewall",level:3},{value:"Docker Compose",id:"docker-compose",level:3},{value:"Installation",id:"installation",level:2},{value:"Connecting the Agent",id:"connecting-the-agent",level:2},{value:"FirewallD",id:"firewalld",level:2},{value:"Used Docker Compose File",id:"used-docker-compose-file",level:2}],p={toc:b};function c(e){let{components:n,...i}=e;return(0,r.kt)("wrapper",(0,t.Z)({},p,i,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Victoria Harbour, Hong Kong",src:a(5970).Z,width:"1500",height:"740"})),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#alternatives"},"Alternatives")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#introduction"},"Introduction"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#structure"},"Structure")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#configuring-your-firewall"},"Configuring your Firewall")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#docker-compose"},"Docker Compose")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#installation"},"Installation")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#connecting-the-agent"},"Connecting the Agent")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#firewalld"},"FirewallD")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#used-docker-compose-file"},"Used Docker Compose File"))),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"See also ",(0,r.kt)("a",{parentName:"p",href:"/docs/DevOps/Zabbix/2021-10-13--zabbix-compose-setup/2021-10-13"},"Update Version for Zabbix 5.4"))),(0,r.kt)("h2",{id:"alternatives"},"Alternatives"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://assets.nagios.com/downloads/nagioscore/docs/nagioscore/4/en/quickstart.html"},"Nagios")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://docs.opennms.org/opennms/releases/latest/guide-install/guide-install.html#_run_with_docker"},"OpenNMS")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://shinken.readthedocs.io/en/latest/02_gettingstarted/installations/shinken-installation.html"},"Schinken.io")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://icinga.com/2020/08/06/docker-compose-icinga/"},"ICINGA"))),(0,r.kt)("h2",{id:"introduction"},"Introduction"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://www.zabbix.com/documentation/current/manual/quickstart"},"Zabbix")," provides ",(0,r.kt)("a",{parentName:"p",href:"https://www.zabbix.com/documentation/current/manual/installation/containers"},"Docker images for each Zabbix component")," as portable and self-sufficient containers to speed up deployment and update procedure."),(0,r.kt)("p",null,"Zabbix components come with MySQL and PostgreSQL database support, Apache2 and Nginx web server support. These images are separated into different images."),(0,r.kt)("h3",{id:"structure"},"Structure"),(0,r.kt)("p",null,"All Zabbix components are available in the following Docker repositories:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Zabbix agent - zabbix/zabbix-agent"),(0,r.kt)("li",{parentName:"ul"},"Zabbix server",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Zabbix server with MySQL database support - zabbix/zabbix-server-mysql"),(0,r.kt)("li",{parentName:"ul"},"Zabbix server with PostgreSQL database support - zabbix/zabbix-server-pgsql"))),(0,r.kt)("li",{parentName:"ul"},"Zabbix web-interface",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Zabbix web-interface based on Apache2 web server with MySQL database support - zabbix/zabbix-web-apache-mysql"),(0,r.kt)("li",{parentName:"ul"},"Zabbix web-interface based on Apache2 web server with PostgreSQL database support - zabbix/zabbix-web-apache-pgsql"),(0,r.kt)("li",{parentName:"ul"},"Zabbix web-interface based on Nginx web server with MySQL database support - zabbix/zabbix-web-nginx-mysql"),(0,r.kt)("li",{parentName:"ul"},"Zabbix web-interface based on Nginx web server with PostgreSQL database support - zabbix/zabbix-web-nginx-pgsql"))),(0,r.kt)("li",{parentName:"ul"},"Zabbix proxy",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Zabbix proxy with SQLite3 database support - zabbix/zabbix-proxy-sqlite3"),(0,r.kt)("li",{parentName:"ul"},"Zabbix proxy with MySQL database support - zabbix/zabbix-proxy-mysql"),(0,r.kt)("li",{parentName:"ul"},"Zabbix Java Gateway - zabbix/zabbix-java-gateway")))),(0,r.kt)("h3",{id:"configuring-your-firewall"},"Configuring your Firewall"),(0,r.kt)("p",null,"We will open the HTTP and HTTPS (80 and 443) port, and the port that will be used by the Zabbix Server and Zabbix agent (port 10051 and 10050). Run the following firewall-cmd commands."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"firewall-cmd --add-service={http,https} --permanent\nfirewall-cmd --add-port={10051/tcp,10050/tcp} --permanent\n")),(0,r.kt)("p",null,"Now reload the firewalld configuration and check the port."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"firewall-cmd --reload\nfirewall-cmd --list-all\n")),(0,r.kt)("h3",{id:"docker-compose"},"Docker Compose"),(0,r.kt)("p",null,"Zabbix provides compose files also for defining and running multi-container Zabbix components in Docker. These compose files are available in Zabbix docker official repository on ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/zabbix/zabbix-docker"},"github.com"),". These compose files are added as examples, they are overloaded. For example, they contain proxies with MySQL and SQLite3 support."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"There are a few different versions of compose files:")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"File name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"docker-compose_v3_alpine_mysql_latest.yaml"),(0,r.kt)("td",{parentName:"tr",align:null},"The compose file runs the latest version of Zabbix 5.0 components on Alpine Linux with MySQL database support.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"do Linux with My"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"docker-compose_v3_alpine_pgsql_latest.yaml"),(0,r.kt)("td",{parentName:"tr",align:null},"The compose file runs the latest version of Zabbix 5.0 components on Alpine Linux with PostgreSQL database support.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"docker-compose_v3_alpine_pgsql_local.yaml"),(0,r.kt)("td",{parentName:"tr",align:null},"The compose file locally builds the latest version of Zabbix 5.0 and runs Zabbix components on Alpine Linux with PostgreSQL.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"docker-compose_v3_centos_mysql_latest.yaml"),(0,r.kt)("td",{parentName:"tr",align:null},"The compose file runs the latest version of Zabbix 5.0 components on CentOS 7 with MySQL database support.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"do"),(0,r.kt)("td",{parentName:"tr",align:null},"with MySQL da")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"docker-compose_v3_centos_pgsql_latest.yaml"),(0,r.kt)("td",{parentName:"tr",align:null},"The compose file runs the latest version of Zabbix 5.0 components on CentOS 7 with PostgreSQL database support.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"do"),(0,r.kt)("td",{parentName:"tr",align:null},"with PostgreS")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"docker-compose_v3_ubuntu_mysql_latest.yaml"),(0,r.kt)("td",{parentName:"tr",align:null},"The compose file runs the latest version of Zabbix 5.0 components on Ubuntu 18.04 with MySQL database support.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"do"),(0,r.kt)("td",{parentName:"tr",align:null},"04 with MySQL")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"docker-compose_v3_ubuntu_pgsql_latest.yaml"),(0,r.kt)("td",{parentName:"tr",align:null},"The compose file runs the latest version of Zabbix 5.0 components on Ubuntu 18.04 with PostgreSQL database support.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"docker-compose_v3_ubuntu_pgsql_local.yaml"),(0,r.kt)("td",{parentName:"tr",align:null},"The compose file locally builds the latest version of Zabbix 5.0 and runs Zabbix components on Ubuntu 18.04 with Postgres.")))),(0,r.kt)("h2",{id:"installation"},"Installation"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Compose files"),": Are configured to support local storage on a host machine. Docker Compose will create a zbx_env directory in the folder with the compose file when you run Zabbix components using the compose file. The directory will contain the same structure as described above in the Volumes section and directory for database storage."),(0,r.kt)("p",null,"There are also volumes in read-only mode for /etc/localtime and /etc/timezone files."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Environment files"),": In the same directory with compose files on github.com you can find files with default environment variables for each component in compose file. These environment files are named like ",(0,r.kt)("inlineCode",{parentName:"p"},".env_*type of component*"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-env"},"# git checkout 5.0\n# docker-compose -f ./docker-compose_v3_alpine_mysql_latest.yaml up -d\n")),(0,r.kt)("p",null,"The command will download latest Zabbix 5.0 images for each Zabbix component and run them in detach mode."),(0,r.kt)("p",null,"Start by cloning the repository:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cd /opt\ngit clone https://github.com/mpolinowski/zabbix-docker.git\ncd zabbix-docker\n")),(0,r.kt)("p",null,"Check all Dotfiles inside the directory - the following contain the login for the database you want to use ",(0,r.kt)("strong",{parentName:"p"},"CHANGE THEM IN PRODUCTION"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},".MYSQL_PASSWORD"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},".MYSQL_ROOT_PASSWORD"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},".MYSQL_USER"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},".POSTGRES_PASSWORD"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},".POSTGRES_USER")))),(0,r.kt)("p",null,"If you want to use Zabbix with PostgreSQL based on Alpine LINUX images you have two choices:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"docker-compose_v3_alpine_pgsql_latest.yaml")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"docker-compose_v3_alpine_pgsql_local.yaml"))),(0,r.kt)("p",null,"The first one downloads the latest version from ",(0,r.kt)("a",{parentName:"p",href:"https://hub.docker.com/u/zabbix"},"DockerHUB"),". The second downloads the base images (Alpine LINUX) from DockerHUB and builds the Zabbix images for you locally from source."),(0,r.kt)("p",null,"You can run them in Docker Compose with:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cfg"},"docker-compose -f docker-compose_v3_alpine_pgsql_latest.yaml up  #check run\ndocker-compose -f docker-compose_v3_alpine_pgsql_latest.yaml up -d #run detached\n")),(0,r.kt)("p",null,"The Zabbix web interface is now available on port ",(0,r.kt)("inlineCode",{parentName:"p"},"80")," on your hosts IP address. The ",(0,r.kt)("a",{parentName:"p",href:"https://www.zabbix.com/documentation/current/manual/quickstart/login"},"default login")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Admin"),"/",(0,r.kt)("inlineCode",{parentName:"p"},"zabbix")," can be changed under ",(0,r.kt)("strong",{parentName:"p"},"Administration")," / ",(0,r.kt)("strong",{parentName:"p"},"Users"),". ",(0,r.kt)("strong",{parentName:"p"},"Change your Login!"),":"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Zabbix Installation with Docker",src:a(89729).Z,width:"913",height:"492"})),(0,r.kt)("h2",{id:"connecting-the-agent"},"Connecting the Agent"),(0,r.kt)("p",null,"The Zabbix Agent installed inside the Docker container is pointing to ",(0,r.kt)("inlineCode",{parentName:"p"},"127.0.0.1"),". That is why you will see the following error message:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"Get value from agent failed: cannot connect to [[127.0.0.1]:10050]: [111] Connection refused\nZabbix agent is not available (for 3m)\n")),(0,r.kt)("p",null,"We instead have to point it to the IP address the Agent container has inside the Docker network. For this type the following command to list all running containers and copy the container ID of ",(0,r.kt)("inlineCode",{parentName:"p"},"zabbix/zabbix-agent:alpine-5.0-latest"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'docker ps\n\nCONTAINER ID        IMAGE                                              COMMAND\n6315816b12ed        zabbix/zabbix-agent:alpine-5.0-latest              "/sbin/tini -- /usr/\u2026"\n')),(0,r.kt)("p",null,"We can now inspect the container via it's ID ",(0,r.kt)("inlineCode",{parentName:"p"},"6315816b12ed")," and see what IP address was assigned to it:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker inspect 6315816b12ed\n")),(0,r.kt)("p",null,"The IP is ",(0,r.kt)("inlineCode",{parentName:"p"},"172.16.239.7")," in my case:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'"Networks": {\n                "zabbix-docker_zbx_net_backend": {\n                    "IPAMConfig": null,\n                    "Links": [\n                        "zabbix-docker_zabbix-server_1:zabbix-docker_zabbix-server_1",\n                        "zabbix-docker_zabbix-server_1:zabbix-server",\n                        "zabbix-docker_zabbix-server_1:zabbix-server_1"\n                    ],\n                    "Aliases": [\n                        "zabbix-agent-alpine",\n                        "zabbix-agent-passive",\n                        "zabbix-agent",\n                        "6315816b12ed"\n                    ],\n                    "NetworkID": "b44fc5350c64f8f39a111ce2a7b8a89628700cf2a52ff2469a5c260669b8d997",\n                    "EndpointID": "815e1dcc4d1f7ee968fdf9e1e142bf27a2c2291843ceaaba15bfb4f86fa79c3c",\n                    "Gateway": "172.16.239.1",\n                    "IPAddress": "172.16.239.7",\n                    "IPPrefixLen": 24,\n                    "IPv6Gateway": "",\n                    "GlobalIPv6Address": "",\n                    "GlobalIPv6PrefixLen": 0,\n                    "MacAddress": "02:42:ac:10:ef:07",\n                    "DriverOpts": null\n                }\n            }\n')),(0,r.kt)("p",null,"Copy this IP address and past it into the Zabbix Server host configuration - overwriting ",(0,r.kt)("inlineCode",{parentName:"p"},"127.0.0.1"),":"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Zabbix Installation with Docker",src:a(29372).Z,width:"954",height:"305"})),(0,r.kt)("p",null,"To have this change take effect we need to refresh the configuration cache:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker exec -ti cad2dbddafd9 /bin/bash\nzabbix_server -R config_cache_reload\n\n#or for short:\n\ndocker exec -ti cad2dbddafd9 zabbix_server -R config_cache_reload\n")),(0,r.kt)("p",null,"Where ",(0,r.kt)("inlineCode",{parentName:"p"},"cad2dbddafd9")," is the container ID of my instance of ",(0,r.kt)("inlineCode",{parentName:"p"},"zabbix/zabbix-server-pgsql:alpine-5.0-latest"),". The availability should switch from red to green as soon as you refresh the readout:"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Zabbix Installation with Docker",src:a(6360).Z,width:"1198",height:"156"})),(0,r.kt)("h2",{id:"firewalld"},"FirewallD"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Zabbix Master")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"firewall-cmd --add-service={http,https} --permanent\nfirewall-cmd --add-port={8081/tcp,8443/tcp,10050/tcp,10051/tcp,10052/tcp,10061/tcp,10071/tcp,} --permanent\nfirewall-cmd --reload\nfirewall-cmd --zone=public --list-all\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Zabbix Minion")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"firewall-cmd --add-service={http,https} --permanent\nfirewall-cmd --add-port={10051/tcp,10050/tcp} --permanent\nfirewall-cmd --reload\nfirewall-cmd --zone=public --list-all\n")),(0,r.kt)("h2",{id:"used-docker-compose-file"},"Used Docker Compose File"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker-compose -f /opt/zabbix-docker/docker-compose.yml up\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yml"},'version: \'3.5\'\nservices:\n zabbix-server:\n  image: zabbix/zabbix-server-pgsql:alpine-5.0-latest\n  ports:\n   - "10051:10051"\n  volumes:\n   - /etc/localtime:/etc/localtime:ro\n   - /etc/timezone:/etc/timezone:ro\n   - ./zbx_env/usr/lib/zabbix/alertscripts:/usr/lib/zabbix/alertscripts:ro\n   - ./zbx_env/usr/lib/zabbix/externalscripts:/usr/lib/zabbix/externalscripts:ro\n   - ./zbx_env/var/lib/zabbix/export:/var/lib/zabbix/export:rw\n   - ./zbx_env/var/lib/zabbix/modules:/var/lib/zabbix/modules:ro\n   - ./zbx_env/var/lib/zabbix/enc:/var/lib/zabbix/enc:ro\n   - ./zbx_env/var/lib/zabbix/ssh_keys:/var/lib/zabbix/ssh_keys:ro\n   - ./zbx_env/var/lib/zabbix/mibs:/var/lib/zabbix/mibs:ro\n  links:\n   - postgres-server:postgres-server\n   - zabbix-java-gateway:zabbix-java-gateway\n  ulimits:\n   nproc: 65535\n   nofile:\n    soft: 20000\n    hard: 40000\n  deploy:\n   resources:\n    limits:\n      cpus: \'0.70\'\n      memory: 1G\n    reservations:\n      cpus: \'0.5\'\n      memory: 512M\n  env_file:\n   - .env_db_pgsql\n   - .env_srv\n  secrets:\n   - POSTGRES_USER\n   - POSTGRES_PASSWORD\n  depends_on:\n   - postgres-server\n   - zabbix-java-gateway\n  networks:\n   zbx_net_backend:\n     ipv4_address: 172.16.239.101\n     aliases:\n      - zabbix-server\n      - zabbix-server-pgsql\n      - zabbix-server-alpine-pgsql\n      - zabbix-server-pgsql-alpine\n   zbx_net_frontend:\n     ipv4_address: 172.16.238.101\n  stop_grace_period: 30s\n  sysctls:\n   - net.ipv4.ip_local_port_range=1024 65000\n   - net.ipv4.conf.all.accept_redirects=0\n   - net.ipv4.conf.all.secure_redirects=0\n   - net.ipv4.conf.all.send_redirects=0\n  labels:\n   com.zabbix.description: "Zabbix server with PostgreSQL database support"\n   com.zabbix.company: "Zabbix LLC"\n   com.zabbix.component: "zabbix-server"\n   com.zabbix.dbtype: "pgsql"\n   com.zabbix.os: "alpine"\n\n zabbix-proxy-sqlite3:\n  image: zabbix/zabbix-proxy-sqlite3:alpine-5.0-latest\n  ports:\n   - "10061:10051"\n  volumes:\n   - /etc/localtime:/etc/localtime:ro\n   - /etc/timezone:/etc/timezone:ro\n   - ./zbx_env/usr/lib/zabbix/externalscripts:/usr/lib/zabbix/externalscripts:ro\n   - ./zbx_env/var/lib/zabbix/modules:/var/lib/zabbix/modules:ro\n   - ./zbx_env/var/lib/zabbix/enc:/var/lib/zabbix/enc:ro\n   - ./zbx_env/var/lib/zabbix/ssh_keys:/var/lib/zabbix/ssh_keys:ro\n   - ./zbx_env/var/lib/zabbix/mibs:/var/lib/zabbix/mibs:ro\n  links:\n   - zabbix-server:zabbix-server\n   - zabbix-java-gateway:zabbix-java-gateway\n  ulimits:\n   nproc: 65535\n   nofile:\n    soft: 20000\n    hard: 40000\n  deploy:\n   resources:\n    limits:\n      cpus: \'0.70\'\n      memory: 512M\n    reservations:\n      cpus: \'0.3\'\n      memory: 256M\n  env_file:\n   - .env_prx\n   - .env_prx_sqlite3\n  depends_on:\n   - zabbix-java-gateway\n  networks:\n   zbx_net_backend:\n    ipv4_address: 172.16.239.102\n    aliases:\n     - zabbix-proxy-sqlite3\n     - zabbix-proxy-alpine-sqlite3\n     - zabbix-proxy-sqlite3-alpine\n   zbx_net_frontend:\n    ipv4_address: 172.16.238.102\n  stop_grace_period: 30s\n  labels:\n   com.zabbix.description: "Zabbix proxy with SQLite3 database support"\n   com.zabbix.company: "Zabbix LLC"\n   com.zabbix.component: "zabbix-proxy"\n   com.zabbix.dbtype: "sqlite3"\n   com.zabbix.os: "alpine"\n\n zabbix-proxy-mysql:\n  image: zabbix/zabbix-proxy-mysql:alpine-5.0-latest\n  ports:\n   - "10071:10051"\n  volumes:\n   - /etc/localtime:/etc/localtime:ro\n   - /etc/timezone:/etc/timezone:ro\n   - ./zbx_env/usr/lib/zabbix/externalscripts:/usr/lib/zabbix/externalscripts:ro\n   - ./zbx_env/var/lib/zabbix/modules:/var/lib/zabbix/modules:ro\n   - ./zbx_env/var/lib/zabbix/enc:/var/lib/zabbix/enc:ro\n   - ./zbx_env/var/lib/zabbix/ssh_keys:/var/lib/zabbix/ssh_keys:ro\n   - ./zbx_env/var/lib/zabbix/mibs:/var/lib/zabbix/mibs:ro\n  links:\n   - zabbix-server:zabbix-server\n   - zabbix-java-gateway:zabbix-java-gateway\n  ulimits:\n   nproc: 65535\n   nofile:\n    soft: 20000\n    hard: 40000\n  deploy:\n   resources:\n    limits:\n      cpus: \'0.70\'\n      memory: 512M\n    reservations:\n      cpus: \'0.3\'\n      memory: 256M\n  env_file:\n   - .env_db_mysql_proxy\n   - .env_prx\n   - .env_prx_mysql\n  secrets:\n   - MYSQL_USER\n   - MYSQL_PASSWORD\n   - MYSQL_ROOT_PASSWORD\n  depends_on:\n   - mysql-server\n   - zabbix-java-gateway\n  networks:\n   zbx_net_backend:\n    ipv4_address: 172.16.239.103\n    aliases:\n     - zabbix-proxy-mysql\n     - zabbix-proxy-alpine-mysql\n     - zabbix-proxy-mysql-alpine\n   zbx_net_frontend:\n    ipv4_address: 172.16.238.103\n  stop_grace_period: 30s\n  labels:\n   com.zabbix.description: "Zabbix proxy with MySQL database support"\n   com.zabbix.company: "Zabbix LLC"\n   com.zabbix.component: "zabbix-proxy"\n   com.zabbix.dbtype: "mysql"\n   com.zabbix.os: "alpine"\n\n zabbix-web-apache-pgsql:\n  image: zabbix/zabbix-web-apache-pgsql:alpine-5.0-latest\n  ports:\n   - "80:8080"\n   - "443:8443"\n  links:\n   - postgres-server:postgres-server\n   - zabbix-server:zabbix-server\n  volumes:\n   - /etc/localtime:/etc/localtime:ro\n   - /etc/timezone:/etc/timezone:ro\n   - ./zbx_env/etc/ssl/apache2:/etc/ssl/apache2:ro\n   - ./zbx_env/usr/share/zabbix/modules/:/usr/share/zabbix/modules/:ro\n  deploy:\n   resources:\n    limits:\n      cpus: \'0.70\'\n      memory: 512M\n    reservations:\n      cpus: \'0.5\'\n      memory: 256M\n  env_file:\n   - .env_db_pgsql\n   - .env_web\n  secrets:\n   - POSTGRES_USER\n   - POSTGRES_PASSWORD\n  depends_on:\n   - postgres-server\n   - zabbix-server\n  healthcheck:\n   test: ["CMD", "curl", "-f", "http://localhost:8080/"]\n   interval: 10s\n   timeout: 5s\n   retries: 3\n   start_period: 30s\n  networks:\n   zbx_net_backend:\n    ipv4_address: 172.16.239.104\n    aliases:\n     - zabbix-web-apache-pgsql\n     - zabbix-web-apache-alpine-pgsql\n     - zabbix-web-apache-pgsql-alpine\n   zbx_net_frontend:\n    ipv4_address: 172.16.238.104\n  stop_grace_period: 10s\n  sysctls:\n   - net.core.somaxconn=65535\n  labels:\n   com.zabbix.description: "Zabbix frontend on Apache web-server with PostgreSQL database support"\n   com.zabbix.company: "Zabbix LLC"\n   com.zabbix.component: "zabbix-frontend"\n   com.zabbix.webserver: "apache2"\n   com.zabbix.dbtype: "pgsql"\n   com.zabbix.os: "alpine"\n\n zabbix-web-nginx-pgsql:\n  image: zabbix/zabbix-web-nginx-pgsql:alpine-5.0-latest\n  ports:\n   - "8081:8080"\n   - "8443:8443"\n  links:\n   - postgres-server:postgres-server\n   - zabbix-server:zabbix-server\n  volumes:\n   - /etc/localtime:/etc/localtime:ro\n   - /etc/timezone:/etc/timezone:ro\n   - ./zbx_env/etc/ssl/nginx:/etc/ssl/nginx:ro\n   - ./zbx_env/usr/share/zabbix/modules/:/usr/share/zabbix/modules/:ro\n  deploy:\n   resources:\n    limits:\n      cpus: \'0.70\'\n      memory: 512M\n    reservations:\n      cpus: \'0.5\'\n      memory: 256M\n  env_file:\n   - .env_db_pgsql\n   - .env_web\n  secrets:\n   - POSTGRES_USER\n   - POSTGRES_PASSWORD\n  depends_on:\n   - postgres-server\n   - zabbix-server\n  healthcheck:\n   test: ["CMD", "curl", "-f", "http://localhost:8080/"]\n   interval: 10s\n   timeout: 5s\n   retries: 3\n   start_period: 30s\n  networks:\n   zbx_net_backend:\n    ipv4_address: 172.16.239.105\n    aliases:\n     - zabbix-web-nginx-pgsql\n     - zabbix-web-nginx-alpine-pgsql\n     - zabbix-web-nginx-pgsql-alpine\n   zbx_net_frontend:\n    ipv4_address: 172.16.238.105\n  stop_grace_period: 10s\n  sysctls:\n   - net.core.somaxconn=65535\n  labels:\n   com.zabbix.description: "Zabbix frontend on Nginx web-server with PostgreSQL database support"\n   com.zabbix.company: "Zabbix LLC"\n   com.zabbix.component: "zabbix-frontend"\n   com.zabbix.webserver: "nginx"\n   com.zabbix.dbtype: "pgsql"\n   com.zabbix.os: "alpine"\n\n zabbix-agent:\n  privileged: true\n  image: zabbix/zabbix-agent:alpine-5.0-latest\n  ports:\n   - "10050:10050"\n  volumes:\n   - /etc/localtime:/etc/localtime:ro\n   - /etc/timezone:/etc/timezone:ro\n   - ./zbx_env/etc/zabbix/zabbix_agentd.d:/etc/zabbix/zabbix_agentd.d:ro\n   - ./zbx_env/var/lib/zabbix/modules:/var/lib/zabbix/modules:ro\n   - ./zbx_env/var/lib/zabbix/enc:/var/lib/zabbix/enc:ro\n   - ./zbx_env/var/lib/zabbix/ssh_keys:/var/lib/zabbix/ssh_keys:ro\n  links:\n   - zabbix-server:zabbix-server\n  deploy:\n   resources:\n    limits:\n      cpus: \'0.2\'\n      memory: 128M\n    reservations:\n      cpus: \'0.1\'\n      memory: 64M\n   mode: global\n  env_file:\n   - .env_agent\n  privileged: true\n  pid: "host"\n  networks:\n   zbx_net_backend:\n    ipv4_address: 172.16.239.106\n    aliases:\n     - zabbix-agent\n     - zabbix-agent-passive\n     - zabbix-agent-alpine\n  stop_grace_period: 5s\n  labels:\n   com.zabbix.description: "Zabbix agent"\n   com.zabbix.company: "Zabbix LLC"\n   com.zabbix.component: "zabbix-agentd"\n   com.zabbix.os: "alpine"\n\n zabbix-java-gateway:\n  image: zabbix/zabbix-java-gateway:alpine-5.0-latest\n  ports:\n   - "10052:10052"\n  deploy:\n   resources:\n    limits:\n      cpus: \'0.5\'\n      memory: 512M\n    reservations:\n      cpus: \'0.25\'\n      memory: 256M\n  env_file:\n   - .env_java\n  networks:\n   zbx_net_backend:\n    ipv4_address: 172.16.239.107\n    aliases:\n     - zabbix-java-gateway\n     - zabbix-java-gateway-alpine\n  stop_grace_period: 5s\n  labels:\n   com.zabbix.description: "Zabbix Java Gateway"\n   com.zabbix.company: "Zabbix LLC"\n   com.zabbix.component: "java-gateway"\n   com.zabbix.os: "alpine"\n\n mysql-server:\n  image: mysql:8.0\n  command:\n   - mysqld\n   - --character-set-server=utf8\n   - --collation-server=utf8_bin\n   - --default-authentication-plugin=mysql_native_password\n  volumes:\n   - ./zbx_env/var/lib/mysql:/var/lib/mysql:rw\n  env_file:\n   - .env_db_mysql\n  secrets:\n   - MYSQL_USER\n   - MYSQL_PASSWORD\n   - MYSQL_ROOT_PASSWORD\n  stop_grace_period: 1m\n  networks:\n   zbx_net_backend:\n    ipv4_address: 172.16.239.109\n    aliases:\n     - mysql-server\n     - zabbix-database\n     - mysql-database\n\n postgres-server:\n  image: postgres:latest\n  volumes:\n   - ./zbx_env/var/lib/postgresql/data:/var/lib/postgresql/data:rw\n   - ./.ZBX_DB_CA_FILE:/run/secrets/root-ca.pem:ro\n   - ./.ZBX_DB_CERT_FILE:/run/secrets/server-cert.pem:ro\n   - ./.ZBX_DB_KEY_FILE:/run/secrets/server-key.pem:ro\n  env_file:\n   - .env_db_pgsql\n  secrets:\n   - POSTGRES_USER\n   - POSTGRES_PASSWORD\n  stop_grace_period: 1m\n  networks:\n   zbx_net_backend:\n    ipv4_address: 172.16.239.110\n    aliases:\n     - postgres-server\n     - pgsql-server\n     - pgsql-database\n\n db_data_mysql:\n  image: busybox\n  volumes:\n   - ./zbx_env/var/lib/mysql:/var/lib/mysql:rw\n\n db_data_pgsql:\n  image: busybox\n  volumes:\n   - ./zbx_env/var/lib/postgresql/data:/var/lib/postgresql/data:rw\n\nnetworks:\n  zbx_net_frontend:\n    driver: bridge\n    driver_opts:\n      com.docker.network.enable_ipv6: "false"\n    ipam:\n      driver: default\n      config:\n      - subnet: 172.16.238.0/24\n  zbx_net_backend:\n    driver: bridge\n    driver_opts:\n      com.docker.network.enable_ipv6: "false"\n    internal: true\n    ipam:\n      driver: default\n      config:\n      - subnet: 172.16.239.0/24\n\nsecrets:\n  MYSQL_USER:\n    file: ./.MYSQL_USER\n  MYSQL_PASSWORD:\n    file: ./.MYSQL_PASSWORD\n  MYSQL_ROOT_PASSWORD:\n    file: ./.MYSQL_ROOT_PASSWORD\n  POSTGRES_USER:\n    file: ./.POSTGRES_USER\n  POSTGRES_PASSWORD:\n    file: ./.POSTGRES_PASSWORD\n')))}c.isMDXComponent=!0},89729:(e,n,a)=>{a.d(n,{Z:()=>t});const t=a.p+"assets/images/Zabbix_Instal_00-cfca5a3a4ce1dcde74c3f3670379a55b.png"},29372:(e,n,a)=>{a.d(n,{Z:()=>t});const t=a.p+"assets/images/Zabbix_Instal_01-09b74e9e2315d23e2e4c1e3b62c1f967.png"},6360:(e,n,a)=>{a.d(n,{Z:()=>t});const t=a.p+"assets/images/Zabbix_Instal_02-0ba8d1880361e55c7ef582e2423979e7.png"},5970:(e,n,a)=>{a.d(n,{Z:()=>t});const t=a.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-1f46055e7cbf4637ce163542d5281f2b.jpg"}}]);