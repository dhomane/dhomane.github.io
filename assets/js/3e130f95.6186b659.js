"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[79840],{3905:(e,n,a)=>{a.d(n,{Zo:()=>p,kt:()=>u});var t=a(67294);function i(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function s(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function r(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?s(Object(a),!0).forEach((function(n){i(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function l(e,n){if(null==e)return{};var a,t,i=function(e,n){if(null==e)return{};var a,t,i={},s=Object.keys(e);for(t=0;t<s.length;t++)a=s[t],n.indexOf(a)>=0||(i[a]=e[a]);return i}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(t=0;t<s.length;t++)a=s[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var c=t.createContext({}),o=function(e){var n=t.useContext(c),a=n;return e&&(a="function"==typeof e?e(n):r(r({},n),e)),a},p=function(e){var n=o(e.components);return t.createElement(c.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},m=t.forwardRef((function(e,n){var a=e.components,i=e.mdxType,s=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=o(a),u=i,h=m["".concat(c,".").concat(u)]||m[u]||d[u]||s;return a?t.createElement(h,r(r({ref:n},p),{},{components:a})):t.createElement(h,r({ref:n},p))}));function u(e,n){var a=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var s=a.length,r=new Array(s);r[0]=m;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"==typeof e?e:i,r[1]=l;for(var o=2;o<s;o++)r[o]=a[o];return t.createElement.apply(null,r)}return t.createElement.apply(null,a)}m.displayName="MDXCreateElement"},34769:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>d,frontMatter:()=>s,metadata:()=>l,toc:()=>o});var t=a(87462),i=(a(67294),a(3905));const s={sidebar_position:7060,slug:"2022-02-05",title:"Elasticsearch & Kibana v8 Index Management",authors:"mpolinowski",tags:["LINUX","Elasticsearch"]},r=void 0,l={unversionedId:"DevOps/Elasticsearch/2022-02-05--kibana-v8-index-management/index",id:"DevOps/Elasticsearch/2022-02-05--kibana-v8-index-management/index",title:"Elasticsearch & Kibana v8 Index Management",description:"Shenzhen, China",source:"@site/docs/DevOps/Elasticsearch/2022-02-05--kibana-v8-index-management/index.md",sourceDirName:"DevOps/Elasticsearch/2022-02-05--kibana-v8-index-management",slug:"/DevOps/Elasticsearch/2022-02-05--kibana-v8-index-management/2022-02-05",permalink:"/docs/DevOps/Elasticsearch/2022-02-05--kibana-v8-index-management/2022-02-05",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/DevOps/Elasticsearch/2022-02-05--kibana-v8-index-management/index.md",tags:[{label:"LINUX",permalink:"/docs/tags/linux"},{label:"Elasticsearch",permalink:"/docs/tags/elasticsearch"}],version:"current",sidebarPosition:7060,frontMatter:{sidebar_position:7060,slug:"2022-02-05",title:"Elasticsearch & Kibana v8 Index Management",authors:"mpolinowski",tags:["LINUX","Elasticsearch"]},sidebar:"tutorialSidebar",previous:{title:"Elasticsearch v8, Filebeat (Docker) and Apache",permalink:"/docs/DevOps/Elasticsearch/2022-02-06--elasticsearch-v8-data-ingestion-apache/2022-02-06"},next:{title:"Elasticsearch & Kibana v8 Search Cheat Sheet",permalink:"/docs/DevOps/Elasticsearch/2022-02-04--kibana-v8-search-queries/2022-02-04"}},c={},o=[{value:"Index Lifecycle",id:"index-lifecycle",level:2},{value:"Index Lifecycle Policies",id:"index-lifecycle-policies",level:3},{value:"Index Template",id:"index-template",level:3},{value:"Index Lifecycle Management Service",id:"index-lifecycle-management-service",level:3},{value:"Snapshots",id:"snapshots",level:2},{value:"Prepare Elasticsearch (Docker)",id:"prepare-elasticsearch-docker",level:3},{value:"Register a Repository",id:"register-a-repository",level:3},{value:"Create a Snapshot of all Indices",id:"create-a-snapshot-of-all-indices",level:3},{value:"Create a Snapshot of specific Indices",id:"create-a-snapshot-of-specific-indices",level:3}],p={toc:o};function d(e){let{components:n,...s}=e;return(0,i.kt)("wrapper",(0,t.Z)({},p,s,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Shenzhen, China",src:a(74798).Z,width:"1500",height:"403"})),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#index-lifecycle"},"Index Lifecycle"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#index-lifecycle-policies"},"Index Lifecycle Policies")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#index-template"},"Index Template")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#index-lifecycle-management-service"},"Index Lifecycle Management Service")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#snapshots"},"Snapshots"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#prepare-elasticsearch-docker"},"Prepare Elasticsearch (Docker)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#register-a-repository"},"Register a Repository")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#create-a-snapshot-of-all-indices"},"Create a Snapshot of all Indices")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#create-a-snapshot-of-specific-indices"},"Create a Snapshot of specific Indices"))))),(0,i.kt)("h2",{id:"index-lifecycle"},"Index Lifecycle"),(0,i.kt)("h3",{id:"index-lifecycle-policies"},"Index Lifecycle Policies"),(0,i.kt)("p",null,"I set up Filebeat on serveral servers now and I can see in Kibana that the Filebeat Index is eating up storage quickly. Elasticsearch allows you to set up 3 stages for the lifecycle of your index - from hot to cold. But for now I only need a way to keep the storage requirements in check. Filebeat already has a simple ",(0,i.kt)("strong",{parentName:"p"},"Lifecycle Policy")," in the ",(0,i.kt)("strong",{parentName:"p"},"Index Management")," section of Kibana:"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Elasticsearch &amp; Kibana v8 Index Management",src:a(16384).Z,width:"1396",height:"436"})),(0,i.kt)("p",null,"I can edit this policy and set it up to delete all data older than 30 days while setting a hard limit of 30Gb of storage use:"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Elasticsearch &amp; Kibana v8 Index Management",src:a(41523).Z,width:"1139",height:"616"})),(0,i.kt)("p",null,"This sends the following request to Elasticsearch:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'PUT _ilm/policy/filebeat\n{\n  "policy": {\n    "phases": {\n      "hot": {\n        "min_age": "0ms",\n        "actions": {\n          "rollover": {\n            "max_size": "30gb",\n            "max_age": "30d"\n          }\n        }\n      },\n      "delete": {\n        "min_age": "30d",\n        "actions": {\n          "delete": {}\n        }\n      }\n    }\n  }\n}\n')),(0,i.kt)("h3",{id:"index-template"},"Index Template"),(0,i.kt)("p",null,"Under ",(0,i.kt)("strong",{parentName:"p"},"Index Management")," I can now check that the policy is actually used by the Filebeat template:"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Elasticsearch &amp; Kibana v8 Index Management",src:a(26531).Z,width:"1394",height:"458"})),(0,i.kt)("p",null,"I can also verify that the policy has been applied in the Kibana Console:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'GET filebeat-*/_ilm/explain\n{\n  "indices" : {\n    ".ds-filebeat-8.0.0-2022.02.26-000001" : {\n      "index" : ".ds-filebeat-8.0.0-2022.02.26-000001",\n      "managed" : true,\n      "policy" : "filebeat",\n      "lifecycle_date_millis" : 1645863853744,\n      "age" : "4.07d",\n      "phase" : "hot",\n      "phase_time_millis" : 1645863854249,\n      "action" : "rollover",\n      "action_time_millis" : 1645863855250,\n      "step" : "check-rollover-ready",\n      "step_time_millis" : 1645863855250,\n      "phase_execution" : {\n        "policy" : "filebeat",\n        "phase_definition" : {\n          "min_age" : "0ms",\n          "actions" : {\n            "rollover" : {\n              "max_size" : "30gb",\n              "max_age" : "30d"\n            }\n          }\n        },\n        "version" : 2,\n        "modified_date_in_millis" : 1646215310049\n      }\n    }\n  }\n}\n')),(0,i.kt)("h3",{id:"index-lifecycle-management-service"},"Index Lifecycle Management Service"),(0,i.kt)("p",null,"To pause the lifecycle management run the following commands in Kibana:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'POST _ilm/stop\n{\n  "acknowledged" : true\n}\nGET _ilm/status\n{\n  "operation_mode" : "STOPPED"\n}\nPOST _ilm/start\n{\n  "acknowledged" : true\n}\nGET _ilm/status\n{\n  "operation_mode" : "RUNNING"\n}\n')),(0,i.kt)("h2",{id:"snapshots"},"Snapshots"),(0,i.kt)("h3",{id:"prepare-elasticsearch-docker"},"Prepare Elasticsearch (Docker)"),(0,i.kt)("p",null,"You can use the ",(0,i.kt)("strong",{parentName:"p"},"Snapshot")," function to create backup of your indices. I am going to configure a file path that Elasticsearch should use to store those backups. First I need to mount an additional volume into my Elasticsearch container:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yml"},"volumes:\n      - type: bind\n        source: ./elasticsearch/config/elasticsearch.yml\n        target: /usr/share/elasticsearch/config/elasticsearch.yml\n        read_only: true\n      - type: volume\n        source: elasticsearch\n        target: /usr/share/elasticsearch/data\n      - type: bind\n        source: /opt/wiki_elk/snapshots\n        target: /snapshots\n")),(0,i.kt)("p",null,"And then edit the ",(0,i.kt)("inlineCode",{parentName:"p"},"elasticsearch.yml")," file to use this path for snapshots:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yml"},'## Snapshots\npath.repo: ["/snapshots"]\n')),(0,i.kt)("h3",{id:"register-a-repository"},"Register a Repository"),(0,i.kt)("p",null,"Bring your Elastic Stack back up and create the ",(0,i.kt)("inlineCode",{parentName:"p"},"/opt/wiki_elk/snapshots")," folder on your system. Back in Kibana run the following command to register a repository for your index:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'PUT /_snapshot/wiki_de\n{\n  "type": "fs",\n  "settings": {\n    "location": "/snapshots"\n  }\n}\n')),(0,i.kt)("p",null,"If you run into write permission errors, ",(0,i.kt)("inlineCode",{parentName:"p"},"chown 1000:1000")," ",(0,i.kt)("inlineCode",{parentName:"p"},"/opt/wiki_elk/snapshots")," and give write permissions for the docker user!"),(0,i.kt)("p",null,"Verify that you were successful by running ",(0,i.kt)("inlineCode",{parentName:"p"},"GET /_snapshot")," which should return your settings:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "wiki_de" : {\n    "type" : "fs",\n    "settings" : {\n      "location" : "/snapshots"\n    }\n  }\n}\n')),(0,i.kt)("h3",{id:"create-a-snapshot-of-all-indices"},"Create a Snapshot of all Indices"),(0,i.kt)("p",null,"Now create your snapshot by running:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"PUT /_snapshot/wiki_de/wiki_de_2022_02_03\n")),(0,i.kt)("p",null,"This will create a snapshot of ",(0,i.kt)("strong",{parentName:"p"},"All Indices"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"ls /opt/wiki_elk/snapshots/indices \n\n041lEuh8QQu_aW_-sWoi8g  BSpLqApuTTS_Yci5iAF67Q  hkL1fTnqSR68lsqn0Cgv-g  n9NCIwbUQpaJiHRoWfgRdg\n0z3zxa1ERT6KLTrs8V4N5A  C1fLeboRTa-2esoWAZTCfg  iJgSgZINSryhOvJdmPSrCA  NNi4_pPtQDGXTbchY_3C7A\n1i46fKrySyueZ6WyBgKfwg  C9rflA_jQRmq_wJgZcQYwg  _imL71P-QhKw_hdrFWMYgQ  oM-RCbEcTNKsiXqBYFO0rg\n2So2kNmBSL6F_P-l93UJCQ  CIN03A9hQriXJO646eO-Pw  JWnzSeZDRyCBKWsMRw3v7w  P9IkckqZRMWGInwSqeSC3w\n41ADNSqNRv2N9GrkS-z6DA  cTQbc6wTQgWE1PUYqb_sug  K78LuKaNT0awSpg8a-HHKw  PcphEXXOQc-z5y-6yDe-Dg\n46PZDBnHTJu3vmZEiNRSWQ  cxq6aOE1QH2hNcGDy67c9g  KC0DNKtKTymp9eQ1kZ45xA  Q2MUewYzRByR0wQ4Gbe3Ow\n4A68GgRURD-1vqKSnmbPhg  d4lH5dCoQHOGEtsfzAx0og  KoI3_6IDRDO0xPhVcrjV9g  qwr62LACT0uF1PDhK3pSCQ\n-4uo2hDZTb2UUxQDxTPHPg  D8XVi8LfRrettJk1Xb6pNg  KxySo37lRUeK5tnp9SYbKA  SE25Oe2cTr6AjDvvMTs4UQ\n5ATJjtIYRBiHH5-F5Ia6ig  _Ds-laExQ-a-G8o50xipzA  lbRmT2gcSeGH8KPZUZclsA  tabkxdbkTJ2WSSno0mCNRQ\n6t53QEC7SEeA4z1BgdRJCw  EbBxodtSR1Gy85V8Mod8WA  LipHTP7_QpWuWBWhjOv7zA  U2xc3eC1TDmjfUw4MiUD2w\nAQdC4-3nQc6RGllJEVt3-A  EF1YCooqRRauQtseBQmeIg  lSkbah9JR1OSILG2vtO6NQ  UCT3k_k9TTKCGHL5l7u25A\nAXTDIVZHQQCgEigJsHHjRg  eijD5mVcSRmgt3qmlgZSOw  m2zp0iYVQtWeJTOCV6c1MQ  Uel1oFILTN6MvP2Mvnr5Ug\nb0OktdJsSZaG6-YCKRh7_w  fA22AhPYRnaLkYnc78On3A  m8TKnNyMTHOq8Gp5maZ9Jw  ujLVq7vqTlm-kH2zWsvP4w\nb2peYubmRaKyQR22K71zoQ  FGNdQj9QRjKXDCP7JbXovg  MlWUpb-LSYO-pwGpsu7qug  ulF7-27ISI-Ewk0ydQsazA\nbE0YNZFXTNCQ5UuqKrz25w  G7Lg_g-JSoCN-WhDOPfL3A  N3gx6nmdS9KzOZy3ZfhEUg  ULZ65qqRSmen8IFW9p-m4Q\nbp36fnmiTU-cONB3x6gpGQ  HaWEe2YfQz6dzbUeRgr4YQ  N9bZIRr0T1ashnx6fcsiNQ  -uNT_WwrS-ORmSWjte7peA\n")),(0,i.kt)("p",null,"You can check the current snapshot in Kibana with:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"GET /_snapshot/wiki_de/wiki_de_2022_02_03\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "snapshots" : [\n    {\n      "snapshot" : "wiki_de_2022_02_03",\n      "uuid" : "_dEhyGmsTt2gzMf4yyVsUw",\n      "repository" : "wiki_de",\n      "version_id" : 8000199,\n      "version" : "8.0.1",\n      "indices" : [\n        ".kibana_8.0.1_001",\n        "ilm-history-3-000009",\n        ".monitoring-kibana-7-2022.02.27",\n        ".security-7",\n        "logs-index_pattern_placeholder",\n        \n  ...\n\n  "total" : 1,\n  "remaining" : 0\n}\n')),(0,i.kt)("p",null,"You can delete the snapshot with:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"DELETE /_snapshot/wiki_de/wiki_de_2022_02_03\n")),(0,i.kt)("h3",{id:"create-a-snapshot-of-specific-indices"},"Create a Snapshot of specific Indices"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'PUT /_snapshot/wiki\n{\n  "type": "fs",\n  "settings": {\n    "location": "/snapshots"\n  }\n}\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'PUT /_snapshot/wiki/wiki_2022_02_03\n{\n  "indices": ["wiki_de", "wiki_en", "wiki_fr"]\n}\n')),(0,i.kt)("p",null,"Verify that you were successful:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"GET /_snapshot/wiki/wiki_2022_02_03\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "snapshots" : [\n    {\n      "snapshot" : "wiki_2022_02_03",\n      "uuid" : "AWzAEEwUQAm9S40sdcw0ZQ",\n      "repository" : "wiki",\n      "version_id" : 8000199,\n      "version" : "8.0.1",\n      "indices" : [\n        ".kibana_8.0.1_001",\n        "wiki_fr",\n        ".transform-notifications-000002",\n        ".kibana_task_manager_8.0.1_001",\n        "wiki_de",\n        ".kibana_8.0.0_001",\n        "wiki_en",\n        ".kibana_1",\n        ".geoip_databases",\n        ".kibana_task_manager_8.0.0_001",\n      ],\n      "data_streams" : [ ],\n      "include_global_state" : true,\n      "state" : "SUCCESS",\n      "start_time" : "2022-03-02T12:24:20.048Z",\n      "start_time_in_millis" : 1646223860048,\n      "end_time" : "2022-03-02T12:24:35.265Z",\n      "end_time_in_millis" : 1646223875265,\n      "duration_in_millis" : 15217,\n      "failures" : [ ],\n      "shards" : {\n        "total" : 27,\n        "failed" : 0,\n        "successful" : 27\n      },\n      "feature_states" : [\n        {\n          "feature_name" : "kibana",\n          "indices" : [\n            ".kibana_8.0.0_001",\n            ".kibana_task_manager_8.0.1_001",\n            ".kibana_1",\n            ".kibana_8.0.1_001",\n            ".apm-custom-link",\n            ".kibana_task_manager_1",\n            ".kibana_task_manager_8.0.0_001",\n          ]\n        },\n        {\n          "feature_name" : "geoip",\n          "indices" : [\n            ".geoip_databases"\n          ]\n        },\n        {\n          "feature_name" : "async_search",\n          "indices" : [\n            ".async-search"\n          ]\n        },\n        {\n          "feature_name" : "transform",\n          "indices" : [\n            ".transform-internal-007",\n            ".transform-internal-005"\n          ]\n        },\n        {\n          "feature_name" : "fleet",\n          "indices" : [\n            ".fleet-enrollment-api-keys-7",\n            ".fleet-policies-7"\n          ]\n        },\n        {\n          "feature_name" : "tasks",\n          "indices" : [\n            ".tasks"\n          ]\n        },\n        {\n          "feature_name" : "security",\n          "indices" : [\n            ".security-7"\n          ]\n        }\n      ]\n    }\n  ],\n  "total" : 1,\n  "remaining" : 0\n}\n')),(0,i.kt)("p",null,"Re-running the snapshot will create incremental updates that can be versioned - e.g. Gitlab."))}d.isMDXComponent=!0},16384:(e,n,a)=>{a.d(n,{Z:()=>t});const t=a.p+"assets/images/Elasticsearch_Kibana_Index_Lifecycles_01-0a1f503326cd552780ba28e363b8dcc0.png"},41523:(e,n,a)=>{a.d(n,{Z:()=>t});const t=a.p+"assets/images/Elasticsearch_Kibana_Index_Lifecycles_02-b86f5a6f6406e0a533c660f66e0ba0b4.png"},26531:(e,n,a)=>{a.d(n,{Z:()=>t});const t=a.p+"assets/images/Elasticsearch_Kibana_Index_Lifecycles_03-752ada941748fe3043a40093d5efc359.png"},74798:(e,n,a)=>{a.d(n,{Z:()=>t});const t=a.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-94d62ec3ff079da54fce88aad4901707.jpg"}}]);