"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[87266],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>u});var i=n(67294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,s=function(e,t){if(null==e)return{};var n,i,s={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var o=i.createContext({}),c=function(e){var t=i.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},d=function(e){var t=c(e.components);return i.createElement(o.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},m=i.forwardRef((function(e,t){var n=e.components,s=e.mdxType,a=e.originalType,o=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),m=c(n),u=s,h=m["".concat(o,".").concat(u)]||m[u]||p[u]||a;return n?i.createElement(h,r(r({ref:t},d),{},{components:n})):i.createElement(h,r({ref:t},d))}));function u(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var a=n.length,r=new Array(a);r[0]=m;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l.mdxType="string"==typeof e?e:s,r[1]=l;for(var c=2;c<a;c++)r[c]=n[c];return i.createElement.apply(null,r)}return i.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5149:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>r,default:()=>p,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var i=n(87462),s=(n(67294),n(3905));const a={sidebar_position:5980,slug:"2022-11-04",title:"Check the Filesystem",authors:"mpolinowski",tags:["LINUX"],description:"Check the Filesystem of a mounted SD Card using fsck"},r=void 0,l={unversionedId:"DevOps/Linux/2022-11-04--check-filesystem/index",id:"DevOps/Linux/2022-11-04--check-filesystem/index",title:"Check the Filesystem",description:"Check the Filesystem of a mounted SD Card using fsck",source:"@site/docs/DevOps/Linux/2022-11-04--check-filesystem/index.md",sourceDirName:"DevOps/Linux/2022-11-04--check-filesystem",slug:"/DevOps/Linux/2022-11-04--check-filesystem/2022-11-04",permalink:"/docs/DevOps/Linux/2022-11-04--check-filesystem/2022-11-04",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/DevOps/Linux/2022-11-04--check-filesystem/index.md",tags:[{label:"LINUX",permalink:"/docs/tags/linux"}],version:"current",sidebarPosition:5980,frontMatter:{sidebar_position:5980,slug:"2022-11-04",title:"Check the Filesystem",authors:"mpolinowski",tags:["LINUX"],description:"Check the Filesystem of a mounted SD Card using fsck"},sidebar:"tutorialSidebar",previous:{title:"Resistance is futile - Borg with Docker",permalink:"/docs/DevOps/Linux/2022-11-09--docker-borg-backupserver/2022-11-09"},next:{title:"Build a Chrony NTS Client from Source",permalink:"/docs/DevOps/Linux/2022-09-29--build-an-chrony-nts-client-from-source/2022-09-29"}},o={},c=[{value:"Find the Partition",id:"find-the-partition",level:2},{value:"Check the Filesystem",id:"check-the-filesystem",level:2},{value:"Repair the Filesystem",id:"repair-the-filesystem",level:3},{value:"Benchmarking",id:"benchmarking",level:2}],d={toc:c};function p(e){let{components:t,...a}=e;return(0,s.kt)("wrapper",(0,i.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"TST, Hong Kong",src:n(58895).Z,width:"1500",height:"517"})),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"#find-the-partition"},"Find the Partition")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"#check-the-filesystem"},"Check the Filesystem"),(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"#repair-the-filesystem"},"Repair the Filesystem")))),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"#benchmarking"},"Benchmarking"))),(0,s.kt)("h2",{id:"find-the-partition"},"Find the Partition"),(0,s.kt)("p",null,"First we need to find the partition of the mounted SD card:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"sudo fdisk -l\n")),(0,s.kt)("p",null,"This returns information about all mounted disks - we can identify our SD card by it's capacity:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"Disk /dev/sdb: 29.54 GiB, 31719424000 bytes, 61952000 sectors\nDisk model: STORAGE DEVICE  \nUnits: sectors of 1 * 512 = 512 bytes\nSector size (logical/physical): 512 bytes / 512 bytes\nI/O size (minimum/optimal): 512 bytes / 512 bytes\nDisklabel type: dos\nDisk identifier: 0x00000000\n\nDevice     Boot Start      End  Sectors  Size Id Type\n/dev/sdb1        8192 61951999 61943808 29.5G  c W95 FAT32 (LBA)\n")),(0,s.kt)("h2",{id:"check-the-filesystem"},"Check the Filesystem"),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"fsck")," cannot be used on a mounted partition. If you do so, there is a high chance that it will damage the filesystem. To check our SD card ",(0,s.kt)("inlineCode",{parentName:"p"},"/dev/sdb1"),", find the location it was mounted in:"),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"Check the Filesystem",src:n(98271).Z,width:"1006",height:"576"})),(0,s.kt)("p",null,"And use the following commands:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"umount /run/media/myuser/0012-D687/\nfsck /dev/sdb1\n\nfsck from util-linux 2.38.1\nfsck.fat 4.2 (2021-01-31)\nThere are differences between boot sector and its backup.\nThis is mostly harmless. Differences: (offset:original/backup)\n  65:01/00\n1) Copy original to backup\n2) Copy backup to original\n3) No action\n[123?q]? 1\nDirty bit is set. Fs was not properly unmounted and some data may be corrupt.\n1) Remove dirty bit\n2) No action\n[12?q]? 1\n\n*** Filesystem was changed ***\nThe changes have not yet been written, you can still choose to leave the\nfilesystem unmodified:\n1) Write changes\n2) Leave filesystem unchanged\n[12?q]? 1\n/dev/sdb1: 0 files, 1/967616 clusters\n")),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},(0,s.kt)("inlineCode",{parentName:"p"},"There are differences between boot sector and its backup. This is mostly harmless. Differences: (offset:original/backup) 65:01/00"),": The byte at offset ",(0,s.kt)("inlineCode",{parentName:"p"},"65")," (",(0,s.kt)("inlineCode",{parentName:"p"},"0x41"),") is the ",(0,s.kt)("em",{parentName:"p"},"dirty bit")," that is set when a drive is not unmounted properly. ")),(0,s.kt)("h3",{id:"repair-the-filesystem"},"Repair the Filesystem"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"-A"),": Used for checking all filesystems. The list is taken from /etc/fstab."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"-C"),": Show progress bar."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"-l"),": Locks the device to guarantee no other program will try to use the partition during the check."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"-M"),": Do not check mounted filesystems."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"-N"),": Only show what would be done \u2013 no actual changes are made."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"-P"),": If you want to check filesystems in parallel, including root."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"-R"),": Do not check root filesystem. This is useful only with \u2018-A\u2018."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"-r"),": Provide statistics for each device that is being checked."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"-T"),": Does not show the title."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"-t"),": Exclusively specify the filesystem types to be checked. Types can be comma separated list."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"-V"),": Provide description what is being done.")),(0,s.kt)("p",null,"During the filesystem check, if errors are detected, you can get \u201cfsck\u201d to auto repair the filesystem with the ",(0,s.kt)("inlineCode",{parentName:"p"},"-a")," flag:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"sudo fsck -ar /dev/sdb1\n\nfsck from util-linux 2.38.1\nfsck.fat 4.2 (2021-01-31)\n/dev/sdb1: 0 files, 1/967616 clusters\n/dev/sdb1: status 0, rss 17280, real 0.410190, user 0.028351, sys 0.033435\n")),(0,s.kt)("h2",{id:"benchmarking"},"Benchmarking"),(0,s.kt)("p",null,"Using the ",(0,s.kt)("a",{parentName:"p",href:"https://archlinux.org/packages/extra/x86_64/gnome-disk-utility/"},"gnome-disk-utility"),":"),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"Check the Filesystem",src:n(79107).Z,width:"898",height:"422"})),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"Check the Filesystem",src:n(1968).Z,width:"901",height:"590"})),(0,s.kt)("p",null,"I am using an SD Card reader that - I know - is very slow. So I cannot estimate the max read/write speeds. But I can check if the speeds are constant:"),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"Check the Filesystem",src:n(45964).Z,width:"896",height:"594"})),(0,s.kt)("p",null,"The first card looks OK with reasonable and consistent speeds. But the second card seems to have some issues:"),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"Check the Filesystem",src:n(19573).Z,width:"879",height:"599"})),(0,s.kt)("p",null,"It becomes a little better after re-formatting (over-writing everything with zeros):"),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"Check the Filesystem",src:n(52731).Z,width:"889",height:"592"})))}p.isMDXComponent=!0},98271:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/Filesystem_Linux_01-1355924013eb480134b3502c974051a9.png"},79107:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/Filesystem_Linux_02-d09dbeade36d1abae6640d5a83a01392.png"},1968:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/Filesystem_Linux_03-b2fca5368cf16ae2577ddba1feeddc61.png"},45964:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/Filesystem_Linux_04-7cfb3af3db1331dacd5fe4dff87c37f5.png"},19573:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/Filesystem_Linux_05-bb529892ab07861b5c0adb0bc7989507.png"},52731:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/Filesystem_Linux_06-28340d35437ac6284c00f37be223c25a.png"},58895:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-ec671595d585b88a85b017a7908fb619.jpg"}}]);