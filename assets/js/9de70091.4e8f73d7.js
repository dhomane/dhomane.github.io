"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[90679],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>u});var a=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function m(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),l=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=l(e.components);return a.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},g=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,c=m(e,["components","mdxType","originalType","parentName"]),g=l(t),u=r,d=g["".concat(s,".").concat(u)]||g[u]||p[u]||o;return t?a.createElement(d,i(i({ref:n},c),{},{components:t})):a.createElement(d,i({ref:n},c))}));function u(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=g;var m={};for(var s in n)hasOwnProperty.call(n,s)&&(m[s]=n[s]);m.originalType=e,m.mdxType="string"==typeof e?e:r,i[1]=m;for(var l=2;l<o;l++)i[l]=t[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}g.displayName="MDXCreateElement"},82389:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>m,toc:()=>l});var a=t(87462),r=(t(67294),t(3905));const o={sidebar_position:8080,slug:"2019-09-20",title:"Magento 2 UI Components",authors:"mpolinowski",tags:["Magento"]},i=void 0,m={unversionedId:"Development/Magento/2019-09-20--magento2-ui-components/index",id:"Development/Magento/2019-09-20--magento2-ui-components/index",title:"Magento 2 UI Components",description:"Victoria Harbour, Hongkong",source:"@site/docs/Development/Magento/2019-09-20--magento2-ui-components/index.mdx",sourceDirName:"Development/Magento/2019-09-20--magento2-ui-components",slug:"/Development/Magento/2019-09-20--magento2-ui-components/2019-09-20",permalink:"/docs/Development/Magento/2019-09-20--magento2-ui-components/2019-09-20",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Development/Magento/2019-09-20--magento2-ui-components/index.mdx",tags:[{label:"Magento",permalink:"/docs/tags/magento"}],version:"current",sidebarPosition:8080,frontMatter:{sidebar_position:8080,slug:"2019-09-20",title:"Magento 2 UI Components",authors:"mpolinowski",tags:["Magento"]},sidebar:"tutorialSidebar",previous:{title:"Docker Compose install Magento 2",permalink:"/docs/Development/Magento/2019-09-21--magento2-docker-install/2019-09-21"},next:{title:"Creating Magento 2 Console Commands",permalink:"/docs/Development/Magento/2019-09-19--magento2-console-commands/2019-09-19"}},s={},l=[{value:"Rendering Grids",id:"rendering-grids",level:2}],c={toc:l};function p(e){let{components:n,...o}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,o,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Victoria Harbour, Hongkong",src:t(71791).Z,width:"1500",height:"691"})),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#rendering-grids"},"Rendering Grids"))),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Use Magento UI components only for admin routes (see end of the article)")),(0,r.kt)("h2",{id:"rendering-grids"},"Rendering Grids"),(0,r.kt)("p",null,"We already created a custom view that listed all items that were stored in the database by our custom component. Let's now add some design to it by displaying it in a grid. This view was routed by ",(0,r.kt)("inlineCode",{parentName:"p"},"./Controller/Index/Index.php"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"<?php\n\nnamespace INSTAR\\SampleModule\\Controller\\Index;\n\nuse Magento\\Framework\\Controller\\ResultFactory;\n\nclass Index extends \\Magento\\Framework\\App\\Action\\Action\n{\n    public function execute()\n    {\n        return $this->resultFactory->create(ResultFactory::TYPE_PAGE);\n    }\n}\n")),(0,r.kt)("p",null,"We now need to create a new collection model to populate the grid with data from our database in ",(0,r.kt)("inlineCode",{parentName:"p"},"./Model/ResourceModel/Item/Grid/Collection.php"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"<?php\n\nnamespace INSTAR\\SampleModule\\Model\\ResourceModel\\Item\\Grid;\n\nuse Magento\\Framework\\Data\\Collection\\Db\\FetchStrategyInterface as FetchStrategy;\nuse Magento\\Framework\\Data\\Collection\\EntityFactoryInterface as EntityFactory;\nuse Magento\\Framework\\Event\\ManagerInterface as EventManager;\nuse Psr\\Log\\LoggerInterface as Logger;\n\nclass Collection extends \\Magento\\Framework\\View\\Element\\UiComponent\\DataProvider\\SearchResult\n{\n    public function __construct(\n        EntityFactory $entityFactory,\n        Logger $logger,\n        FetchStrategy $fetchStrategy,\n        EventManager $eventManager,\n        $mainTable = 'instar_sample_item',\n        $resourceModel = 'INSTAR\\SampleModule\\Model\\ResourceModel\\Item'\n    ) {\n        parent::__construct(\n            $entityFactory,\n            $logger,\n            $fetchStrategy,\n            $eventManager,\n            $mainTable,\n            $resourceModel\n        );\n    }\n}\n")),(0,r.kt)("p",null,"We now have to add some additional configuration to dependency injection ",(0,r.kt)("inlineCode",{parentName:"p"},"./etc/di.xml"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},'<?xml version="1.0"?>\n<config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:framework:ObjectManager/etc/config.xsd">\n    <type name="Magento\\Framework\\Console\\CommandList">\n        <arguments>\n           <argument name="commands" xsi:type="array">\n                <item name="instarAddItem" xsi:type="object">INSTAR\\SampleModule\\Console\\Command\\AddItem</item>\n            </argument>\n        </arguments>\n    </type>\n</config>\n')),(0,r.kt)("p",null,"Add the following lines of code to configure the UI grid:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},'<?xml version="1.0"?>\n<config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:framework:ObjectManager/etc/config.xsd">\n    <type name="Magento\\Framework\\Console\\CommandList">\n        <arguments>\n           <argument name="commands" xsi:type="array">\n                <item name="instarAddItem" xsi:type="object">INSTAR\\SampleModule\\Console\\Command\\AddItem</item>\n            </argument>\n        </arguments>\n    </type>\n    <type name="Magento\\Framework\\View\\Element\\UiComponent\\DataProvider\\CollectionFactory">\n        <arguments>\n            <argument name="collections" xsi:type="array">\n                <item name="instar_items_grid_data_source" xsi:type="string">INSTAR\\SampleModule\\Model\\ResourceModel\\Item\\Grid\\Collection</item>\n            </argument>\n        </arguments>\n    </type>\n</config>\n')),(0,r.kt)("p",null,"Now we can modify the layout file that we already created ",(0,r.kt)("inlineCode",{parentName:"p"},"view/frontend/layout/instar_index_index.xml"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},'<?xml version="1.0"?>\n<page xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" layout="1column" xsi:noNamespaceSchemaLocation="urn:magento:framework:View/Layout/etc/page_configuration.xsd">\n    <body>\n        <referenceContainer name="content">\n            <block name="instar_hello" class="INSTAR\\SampleModule\\Block\\Hello" template="hello.phtml"/>\n        </referenceContainer>\n    </body>\n</page>\n')),(0,r.kt)("p",null,"Instead of using a custom ",(0,r.kt)("strong",{parentName:"p"},"Block")," we now can use the ",(0,r.kt)("strong",{parentName:"p"},"UI Component"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},'<?xml version="1.0"?>\n<page xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" layout="1column" xsi:noNamespaceSchemaLocation="urn:magento:framework:View/Layout/etc/page_configuration.xsd">\n    <body>\n        <referenceContainer name="content">\n            <uiComponent name="instar_items_grid" />\n        </referenceContainer>\n    </body>\n</page>\n')),(0,r.kt)("p",null,"The configuration for the here referenced ",(0,r.kt)("inlineCode",{parentName:"p"},"instar_items_grid")," can be done in ",(0,r.kt)("inlineCode",{parentName:"p"},"./view/frontend/ui_component/instar_items_grid.xml"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},'<?xml version="1.0" encoding="UTF-8"?>\n<listing xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:module:Magento_Ui:etc/ui_configuration.xsd">\n    <argument name="data" xsi:type="array">\n        <item name="js_config" xsi:type="array">\n            <item name="provider" xsi:type="string">instar_items_grid.instar_items_grid_data_source</item>\n            <item name="deps" xsi:type="string">instar_items_grid.instar_items_grid_data_source</item>\n        </item>\n        <item name="spinner" xsi:type="string">instar_items_columns</item>\n        <item name="buttons" xsi:type="array">\n            <item name="add" xsi:type="array">\n                <item name="name" xsi:type="string">add</item>\n                <item name="label" xsi:type="string" translate="true">Add Item</item>\n                <item name="class" xsi:type="string">primary</item>\n                <item name="url" xsi:type="string">*/item/new</item>\n            </item>\n        </item>\n    </argument>\n    <dataSource name="instar_items_grid_data_source">\n        <argument name="dataProvider" xsi:type="configurableObject">\n            <argument name="class" xsi:type="string">Magento\\Framework\\View\\Element\\UiComponent\\DataProvider\\DataProvider</argument>\n            <argument name="name" xsi:type="string">instar_items_grid_data_source</argument>\n            <argument name="primaryFieldName" xsi:type="string">id</argument>\n            <argument name="requestFieldName" xsi:type="string">id</argument>\n            <argument name="data" xsi:type="array">\n                <item name="config" xsi:type="array">\n                    <item name="update_url" xsi:type="url" path="mui/index/render"/>\n                    <item name="component" xsi:type="string">Magento_Ui/js/grid/provider</item>\n                </item>\n            </argument>\n        </argument>\n    </dataSource>\n    <listingToolbar name="listing_top">\n        <bookmark name="bookmarks"/>\n        <columnsControls name="columns_controls"/>\n        <exportButton name="export_button"/>\n        <filterSearch name="fulltext"/>\n        <filters name="listing_filters"/>\n        <paging name="listing_paging"/>\n    </listingToolbar>\n    <columns name="instar_items_columns">\n        <argument name="data" xsi:type="array">\n            <item name="config" xsi:type="array">\n                <item name="childDefaults" xsi:type="array">\n                    <item name="fieldAction" xsi:type="array">\n                        <item name="provider" xsi:type="string">instar_items_grid.instar_items_grid.instar_items_columns.actions</item>\n                        <item name="target" xsi:type="string">applyAction</item>\n                        <item name="params" xsi:type="array">\n                            <item name="0" xsi:type="string">view</item>\n                            <item name="1" xsi:type="string">${ $.$data.rowIndex }</item>\n                        </item>\n                    </item>\n                </item>\n            </item>\n        </argument>\n        <selectionsColumn name="ids">\n            <argument name="data" xsi:type="array">\n                <item name="config" xsi:type="array">\n                    <item name="indexField" xsi:type="string">id</item>\n                </item>\n            </argument>\n        </selectionsColumn>\n        <column name="name">\n            <argument name="data" xsi:type="array">\n                <item name="config" xsi:type="array">\n                    <item name="filter" xsi:type="string">text</item>\n                    <item name="label" xsi:type="string" translate="true">Name</item>\n                </item>\n            </argument>\n        </column>\n        <column name="description">\n            <argument name="data" xsi:type="array">\n                <item name="config" xsi:type="array">\n                    <item name="filter" xsi:type="string">text</item>\n                    <item name="label" xsi:type="string" translate="true">Description</item>\n                </item>\n            </argument>\n        </column>\n    </columns>\n</listing>\n')),(0,r.kt)("p",null,"And we end up with a mess:"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Magento UI Component",src:t(25066).Z,width:"1056",height:"650"})),(0,r.kt)("p",null,"Ok, so if we had chosen to use this on our Admin route this would have worked. But there are a couple of things not available for use on the frontend side of Magento - ",(0,r.kt)("a",{parentName:"p",href:"https://belvg.com/blog/ui-grid-component-on-the-front-end-in-magento-2.html"},"see this blog for details"),"."),(0,r.kt)("p",null,"So this can be done - but obviously is not the best way to get started."))}p.isMDXComponent=!0},25066:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/Magento2_Module_Components_01-4a7ebf1b0f994866a6cfd703ce1696b2.png"},71791:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-13c054fff660a07a582f4f91a81c5032.jpg"}}]);