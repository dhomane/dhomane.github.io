"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[49543],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>h});var a=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,a,o=function(e,t){if(null==e)return{};var r,a,o={},n=Object.keys(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=a.createContext({}),p=function(e){var t=a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var r=e.components,o=e.mdxType,n=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=p(r),h=o,m=d["".concat(l,".").concat(h)]||d[h]||c[h]||n;return r?a.createElement(m,i(i({ref:t},u),{},{components:r})):a.createElement(m,i({ref:t},u))}));function h(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var n=r.length,i=new Array(n);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var p=2;p<n;p++)i[p]=r[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},38815:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>n,metadata:()=>s,toc:()=>p});var a=r(87462),o=(r(67294),r(3905));const n={sidebar_position:9010,slug:"2020-10-26",title:"HashiCorp Packer Provisioning",authors:"mpolinowski",tags:["LINUX","Packer"]},i=void 0,s={unversionedId:"DevOps/Hashicorp/2020-10-26--hashicorp-packer-provisioner/index",id:"DevOps/Hashicorp/2020-10-26--hashicorp-packer-provisioner/index",title:"HashiCorp Packer Provisioning",description:"TST, Hong Kong",source:"@site/docs/DevOps/Hashicorp/2020-10-26--hashicorp-packer-provisioner/index.md",sourceDirName:"DevOps/Hashicorp/2020-10-26--hashicorp-packer-provisioner",slug:"/DevOps/Hashicorp/2020-10-26--hashicorp-packer-provisioner/2020-10-26",permalink:"/docs/DevOps/Hashicorp/2020-10-26--hashicorp-packer-provisioner/2020-10-26",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/DevOps/Hashicorp/2020-10-26--hashicorp-packer-provisioner/index.md",tags:[{label:"LINUX",permalink:"/docs/tags/linux"},{label:"Packer",permalink:"/docs/tags/packer"}],version:"current",sidebarPosition:9010,frontMatter:{sidebar_position:9010,slug:"2020-10-26",title:"HashiCorp Packer Provisioning",authors:"mpolinowski",tags:["LINUX","Packer"]},sidebar:"tutorialSidebar",previous:{title:"Hashicorp Nomad Refresher - Installation",permalink:"/docs/DevOps/Hashicorp/2021-08-01--hashicorp-nomad-refresher/2021-08-01"},next:{title:"HashiCorp Packer with Virtualbox (Autoinstall)",permalink:"/docs/DevOps/Hashicorp/2020-10-25--hashicorp-packer-and-virtualbox-autoinstall/2020-10-25"}},l={},p=[{value:"Shell Provisioner",id:"shell-provisioner",level:2},{value:"Virtualbox Builder",id:"virtualbox-builder",level:2},{value:"Create your Source Image",id:"create-your-source-image",level:3}],u={toc:p};function c(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"TST, Hong Kong",src:r(18839).Z,width:"1500",height:"622"})),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#shell-provisioner"},"Shell Provisioner")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#virtualbox-builder"},"Virtualbox Builder"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#create-your-source-image"},"Create your Source Image"))))),(0,o.kt)("p",null,"So far we created a Docker image but did not do much with it. To set up our image we can use a range of so called provisioners that will execute scripts inside our image."),(0,o.kt)("h2",{id:"shell-provisioner"},"Shell Provisioner"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'"provisioners": [\n  {\n    "type": "shell",\n    "script": "init.sh"\n  }\n]\n')),(0,o.kt)("p",null,"The shell provisioner can use a shell script file ",(0,o.kt)("inlineCode",{parentName:"p"},'"script: "init.sh"')," or an ",(0,o.kt)("inlineCode",{parentName:"p"},'"inline": "command"'),". We can use the init script to install a small dockerized Node.js / Express.js app inside our Ubuntu image:"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"init.sh")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'#! /bin/bash\n\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -\nsudo apt-key fingerprint 0EBFCD88\nsudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"\nsudo apt-get update\nsudo apt-get install docker-ce docker-ce-cli containerd.io\nsudo usermod -aG docker ubuntu\ncurl -sL https://deb.nodesource.com/setup_12.x -o nodesource_setup.sh\nsudo apt install nodejs\nrm nodesource_setup.sh\ngit clone https://github.com/linuxacademy/content-devops-monitoring-app.git /home/ubuntu/app\nsudo docker build -t application /home/ubuntu/app\n')),(0,o.kt)("h2",{id:"virtualbox-builder"},"Virtualbox Builder"),(0,o.kt)("p",null,"The VirtualBox Packer builder is able to create VirtualBox virtual machines and export them in the OVA or OVF format."),(0,o.kt)("p",null,"Packer actually comes with multiple builders able to create VirtualBox machines, depending on the strategy you want to use to build the image. Packer supports the following VirtualBox builders:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"virtualbox-iso")," - Starts from an ISO file, creates a brand new VirtualBox VM, installs an OS, provisions software within the OS, then exports that machine to create an image. This is best for people who want to start from scratch.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"virtualbox-ovf")," - This builder imports an existing OVF/OVA file, runs provisioners on top of that VM, and exports that machine to create an image. This is best if you have an existing VirtualBox VM export you want to use as the source. As an additional benefit, you can feed the artifact of this builder back into itself to iterate on a machine.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"virtualbox-vm")," - This builder uses an existing VM to run defined provisioners on top of that VM, and optionally creates a snapshot to save the changes applied from the provisioners. In addition the builder is able to export that machine to create an image. The builder is able to attach to a defined snapshot as a starting point, which could be defined statically or dynamically via a variable."))),(0,o.kt)("h3",{id:"create-your-source-image"},"Create your Source Image"),(0,o.kt)("p",null,"First you need to download the base image you want to start from - I will choose ",(0,o.kt)("a",{parentName:"p",href:"https://ubuntu.com/download/server"},"Ubuntu Server 20.10")," ISO. Create an Ubuntu virtual machine in VirtualBox and install Ubuntu server from the ISO image. Once installed restart the server and and login with your created user. Once verified that everything is set up correctly shutdown the VM. Open the VirtualBox Tools menu and export the VM as an ",(0,o.kt)("inlineCode",{parentName:"p"},".OVA")," file."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("strong",{parentName:"p"},"Alternatively"),", you can also use the ",(0,o.kt)("a",{parentName:"p",href:"https://www.packer.io/docs/builders/virtualbox/iso"},"ISO file directly"))))}c.isMDXComponent=!0},18839:(e,t,r)=>{r.d(t,{Z:()=>a});const a=r.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-d8b333d1f9ddf34ac7392aef86b14c83.jpg"}}]);