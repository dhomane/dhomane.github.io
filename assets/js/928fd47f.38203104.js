"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[18561],{3905:(t,e,a)=>{a.d(e,{Zo:()=>d,kt:()=>g});var n=a(67294);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function l(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?l(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function o(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},l=Object.keys(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var m=n.createContext({}),p=function(t){var e=n.useContext(m),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},d=function(t){var e=p(t.components);return n.createElement(m.Provider,{value:e},t.children)},s={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},u=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,l=t.originalType,m=t.parentName,d=o(t,["components","mdxType","originalType","parentName"]),u=p(a),g=r,k=u["".concat(m,".").concat(g)]||u[g]||s[g]||l;return a?n.createElement(k,i(i({ref:e},d),{},{components:a})):n.createElement(k,i({ref:e},d))}));function g(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=a.length,i=new Array(l);i[0]=u;var o={};for(var m in e)hasOwnProperty.call(e,m)&&(o[m]=e[m]);o.originalType=t,o.mdxType="string"==typeof t?t:r,i[1]=o;for(var p=2;p<l;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},20811:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>m,contentTitle:()=>i,default:()=>s,frontMatter:()=>l,metadata:()=>o,toc:()=>p});var n=a(87462),r=(a(67294),a(3905));const l={sidebar_position:8050,slug:"2019-09-25",title:"Podman Cheat Sheet",authors:"mpolinowski",tags:["LINUX","Docker"]},i=void 0,o={unversionedId:"DevOps/Linux/2019-09-25--podman-cheat-sheet/index",id:"DevOps/Linux/2019-09-25--podman-cheat-sheet/index",title:"Podman Cheat Sheet",description:"Shenzhen, China",source:"@site/docs/DevOps/Linux/2019-09-25--podman-cheat-sheet/index.mdx",sourceDirName:"DevOps/Linux/2019-09-25--podman-cheat-sheet",slug:"/DevOps/Linux/2019-09-25--podman-cheat-sheet/2019-09-25",permalink:"/docs/DevOps/Linux/2019-09-25--podman-cheat-sheet/2019-09-25",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/DevOps/Linux/2019-09-25--podman-cheat-sheet/index.mdx",tags:[{label:"LINUX",permalink:"/docs/tags/linux"},{label:"Docker",permalink:"/docs/tags/docker"}],version:"current",sidebarPosition:8050,frontMatter:{sidebar_position:8050,slug:"2019-09-25",title:"Podman Cheat Sheet",authors:"mpolinowski",tags:["LINUX","Docker"]},sidebar:"tutorialSidebar",previous:{title:"Kali Linux with Docker for Windows",permalink:"/docs/DevOps/Linux/2019-09-26--kali-docker-windows/2019-09-26"},next:{title:"Installing Oh-My-Zsh on Ubuntu 20.04",permalink:"/docs/DevOps/Linux/2019-09-22--zsh-on-ubuntu20/2019-09-22"}},m={},p=[{value:"Finding Images",id:"finding-images",level:2},{value:"Building Images",id:"building-images",level:2},{value:"Running Containers on Images",id:"running-containers-on-images",level:2},{value:"Working with Container Processes",id:"working-with-container-processes",level:2},{value:"Working with the Container Filesystem",id:"working-with-the-container-filesystem",level:2},{value:"Removing Images",id:"removing-images",level:2},{value:"Miscellaneous",id:"miscellaneous",level:2}],d={toc:p};function s(t){let{components:e,...l}=t;return(0,r.kt)("wrapper",(0,n.Z)({},d,l,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Shenzhen, China",src:a(38194).Z,width:"1500",height:"533"})),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#finding-images"},"Finding Images")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#building-images"},"Building Images")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#running-containers-on-images"},"Running Containers on Images")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#working-with-container-processes"},"Working with Container Processes")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#working-with-the-container-filesystem"},"Working with the Container Filesystem")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#removing-images"},"Removing Images")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#miscellaneous"},"Miscellaneous"))),(0,r.kt)("p",null,"For more information about podman, visit the ",(0,r.kt)("a",{parentName:"p",href:"https://developers.redhat.com/"},"Red Hat Developer website"),". This cheat sheet was written by Doug Tidwell, with huge thanks to Dan Walsh and Scott McCarty."),(0,r.kt)("p",null,"In the following ",(0,r.kt)("inlineCode",{parentName:"p"},"container")," is either a container name or a container ID. If ",(0,r.kt)("inlineCode",{parentName:"p"},"tag")," is omitted in image:tag , the default value is latest."),(0,r.kt)("h2",{id:"finding-images"},"Finding Images"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Command"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"podman images"),(0,r.kt)("td",{parentName:"tr",align:null},"List all local images")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"podman history image:tag"),(0,r.kt)("td",{parentName:"tr",align:null},"Display information about how an image was built")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"podman login registryURL -u username ","[-p password]"),(0,r.kt)("td",{parentName:"tr",align:null},"Log in to a remote registry")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"podman pull registry/username/image:tag"),(0,r.kt)("td",{parentName:"tr",align:null},"Pull an image from a remote registry")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"podman search searchString"),(0,r.kt)("td",{parentName:"tr",align:null},"Search local cache and remote registries for images")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"podman logout"),(0,r.kt)("td",{parentName:"tr",align:null},"Log out of the current remote registry")))),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"The list of registries is defined in ",(0,r.kt)("inlineCode",{parentName:"em"},"/etc/containers/registries.conf"))),(0,r.kt)("h2",{id:"building-images"},"Building Images"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Command"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"podman build -t image:tag ."),(0,r.kt)("td",{parentName:"tr",align:null},"Build and tag an image using the instructions in Docker?le in the")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"current directory"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"podman build -t image:tag -f Dockerfile2"),(0,r.kt)("td",{parentName:"tr",align:null},"Same as above, but with a di?erent Docker?le")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"podman tag image:tag image:tag2"),(0,r.kt)("td",{parentName:"tr",align:null},"Add an additional name to a local image")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"podman tag image:tag registry/username/image:tag"),(0,r.kt)("td",{parentName:"tr",align:null},"Same as above, but the additional name includes a remote registry")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"podman push registry/username/image:tag"),(0,r.kt)("td",{parentName:"tr",align:null},"Push an image to a remote registry")))),(0,r.kt)("h2",{id:"running-containers-on-images"},"Running Containers on Images"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Command"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"podman run --rm -it ","[--name name]"," image:tag command"),(0,r.kt)("td",{parentName:"tr",align:null},"Run a container based on a given image.")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"--rm")," Remove the container after it exits"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"-it")," Connect the container to the terminal"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"--name")," name Give the container a name"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"image:tag")," The image used to create the container"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"command")," A command to run (/bin/bash for example)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"-d")," Run the container in the background"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"-p 8080:32000")," Expose container port 8080 as localhost:32000"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"-v /var/lib/mydb:/var/lib/db")," Map the /var/lib/mydb directory on localhost to a volume named /var/lib/db inside the container")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Command"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"podman commit container newImage:tag"),(0,r.kt)("td",{parentName:"tr",align:null},"Create a new image based on the current state of a running container")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"podman create ","[--name name]"," image:tag"),(0,r.kt)("td",{parentName:"tr",align:null},"Create (but don\u2019t start) a container from an image")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"podman start container"),(0,r.kt)("td",{parentName:"tr",align:null},"Start an existing container from an image")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"podman restart container"),(0,r.kt)("td",{parentName:"tr",align:null},"Restart an existing container")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"podman wait container1 ","[container2\u2026 ]"),(0,r.kt)("td",{parentName:"tr",align:null},"Wait on one or more containers to stop")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"podman stop container"),(0,r.kt)("td",{parentName:"tr",align:null},"Stop a running container gracefully")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"podman kill container"),(0,r.kt)("td",{parentName:"tr",align:null},"Send a signal to a running container")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"podman rm ","[-f]"," container"),(0,r.kt)("td",{parentName:"tr",align:null},"Remove a container (use -f if the container is running)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"podman stats container"),(0,r.kt)("td",{parentName:"tr",align:null},"Display a live stream of a container\u2019s resource usage")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"podman inspect container"),(0,r.kt)("td",{parentName:"tr",align:null},"Return metadata (in JSON) about a running container")))),(0,r.kt)("h2",{id:"working-with-container-processes"},"Working with Container Processes"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Command"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"podman ps ","[--all]"),(0,r.kt)("td",{parentName:"tr",align:null},"List the running containers on the system (use --all to include non-")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"running containers)"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"podman attach container"),(0,r.kt)("td",{parentName:"tr",align:null},"Attach to a running container and view its output or control it")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"+ + detaches from the container but leaves it running."),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"podman exec container command"),(0,r.kt)("td",{parentName:"tr",align:null},"Execute a command in a running container")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"podman top container"),(0,r.kt)("td",{parentName:"tr",align:null},"Display the running processes of a container")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"podman logs ","[-tail]"," container"),(0,r.kt)("td",{parentName:"tr",align:null},"Display the logs of a container")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"podman pause container / podman unpause container"),(0,r.kt)("td",{parentName:"tr",align:null},"Pause/unpause all the processes in a container")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"podman port container"),(0,r.kt)("td",{parentName:"tr",align:null},"List the port mappings from a container to localhost")))),(0,r.kt)("h2",{id:"working-with-the-container-filesystem"},"Working with the Container Filesystem"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Command"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"podman diff container"),(0,r.kt)("td",{parentName:"tr",align:null},"Display all the changes to a container\u2019s ?lesystem")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"podman cp source target"),(0,r.kt)("td",{parentName:"tr",align:null},"Copy ?les and folders between a container and localhost")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"podman mount container / podman umount container"),(0,r.kt)("td",{parentName:"tr",align:null},"Mount or unmount a container\u2019s root ?lesystem")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"podman import tarball"),(0,r.kt)("td",{parentName:"tr",align:null},"Import a tarball and save it as a ?lesystem image")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"podman export ","[-o outputFile]"," container"),(0,r.kt)("td",{parentName:"tr",align:null},"Export the container\u2019s ?lesystem to a tar ?le")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"podman save ","[-o archiveFile]","--format docker-archive"),(0,r.kt)("td",{parentName:"tr",align:null},"oci-archive")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"podman load -i archiveFile"),(0,r.kt)("td",{parentName:"tr",align:null},"Load a saved image from docker-archive or another format")))),(0,r.kt)("h2",{id:"removing-images"},"Removing Images"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Command"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"podman rmi ","[-f]"," image:tag"),(0,r.kt)("td",{parentName:"tr",align:null},"Remove a local image from local cache (use -f to force removal)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"podman rmi ","[-f]"," registry/username/image:tag"),(0,r.kt)("td",{parentName:"tr",align:null},"Remove a remote image from local cache (use -f to force removal)")))),(0,r.kt)("h2",{id:"miscellaneous"},"Miscellaneous"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Command"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"podman version"),(0,r.kt)("td",{parentName:"tr",align:null},"Display podman version information")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"podman info"),(0,r.kt)("td",{parentName:"tr",align:null},"Display information about the podman environment")))))}s.isMDXComponent=!0},38194:(t,e,a)=>{a.d(e,{Z:()=>n});const n=a.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-7d0872b1ce8d23fcf5578067f889120c.jpg"}}]);