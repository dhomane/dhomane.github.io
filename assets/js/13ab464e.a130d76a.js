"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[59179],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>d});var n=a(67294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var l=n.createContext({}),c=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},p=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},g=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),g=c(a),d=i,h=g["".concat(l,".").concat(d)]||g[d]||m[d]||r;return a?n.createElement(h,o(o({ref:t},p),{},{components:a})):n.createElement(h,o({ref:t},p))}));function d(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=a.length,o=new Array(r);o[0]=g;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var c=2;c<r;c++)o[c]=a[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}g.displayName="MDXCreateElement"},99482:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>r,metadata:()=>s,toc:()=>c});var n=a(87462),i=(a(67294),a(3905));const r={sidebar_position:4930,slug:"2022-12-12",title:"Breast Histopathology Image Segmentation Part 6",authors:"mpolinowski",tags:["Python","Machine Learning","Tensorflow"],description:"Running Predictions"},o=void 0,s={unversionedId:"IoT-and-Machine-Learning/ML/2022-12-12-tf-breast-cancer-classification-part6/index",id:"IoT-and-Machine-Learning/ML/2022-12-12-tf-breast-cancer-classification-part6/index",title:"Breast Histopathology Image Segmentation Part 6",description:"Running Predictions",source:"@site/docs/IoT-and-Machine-Learning/ML/2022-12-12-tf-breast-cancer-classification-part6/index.md",sourceDirName:"IoT-and-Machine-Learning/ML/2022-12-12-tf-breast-cancer-classification-part6",slug:"/IoT-and-Machine-Learning/ML/2022-12-12-tf-breast-cancer-classification-part6/2022-12-12",permalink:"/docs/IoT-and-Machine-Learning/ML/2022-12-12-tf-breast-cancer-classification-part6/2022-12-12",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/IoT-and-Machine-Learning/ML/2022-12-12-tf-breast-cancer-classification-part6/index.md",tags:[{label:"Python",permalink:"/docs/tags/python"},{label:"Machine Learning",permalink:"/docs/tags/machine-learning"},{label:"Tensorflow",permalink:"/docs/tags/tensorflow"}],version:"current",sidebarPosition:4930,frontMatter:{sidebar_position:4930,slug:"2022-12-12",title:"Breast Histopathology Image Segmentation Part 6",authors:"mpolinowski",tags:["Python","Machine Learning","Tensorflow"],description:"Running Predictions"},sidebar:"tutorialSidebar",previous:{title:"Tensorflow Image Classification",permalink:"/docs/IoT-and-Machine-Learning/ML/2022-12-16-tf-cifar/2022-12-16"},next:{title:"Breast Histopathology Image Segmentation Part 5",permalink:"/docs/IoT-and-Machine-Learning/ML/2022-12-12-tf-breast-cancer-classification-part5/2022-12-12"}},l={},c=[{value:"Loading the Model",id:"loading-the-model",level:2},{value:"Preparing the Test Image File",id:"preparing-the-test-image-file",level:2},{value:"Make Predictions",id:"make-predictions",level:2}],p={toc:c};function m(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Guangzhou, China",src:a(85591).Z,width:"1500",height:"383"})),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/IoT-and-Machine-Learning/ML/2022-12-10-tf-breast-cancer-classification-part1/2022-12-10"},"Part 1: Data Inspection and Pre-processing")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/IoT-and-Machine-Learning/ML/2022-12-11-tf-breast-cancer-classification-part2/2022-12-11"},"Part 2: Weights, Data Augmentations and Generators")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/IoT-and-Machine-Learning/ML/2022-12-11-tf-breast-cancer-classification-part3/2022-12-11"},"Part 3: Model creation based on a pre-trained and a custom model")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/IoT-and-Machine-Learning/ML/2022-12-11-tf-breast-cancer-classification-part4/2022-12-11"},"Part 4: Train our model to fit the dataset")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/IoT-and-Machine-Learning/ML/2022-12-12-tf-breast-cancer-classification-part5/2022-12-12"},"Part 5: Evaluate the performance of your trained model")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/IoT-and-Machine-Learning/ML/2022-12-12-tf-breast-cancer-classification-part6/2022-12-12"},"Part 6: Running Predictions"))),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},(0,i.kt)("a",{parentName:"p",href:"https://github.com/mpolinowski/tf-bc-classification"},"Github"))),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#loading-the-model"},"Loading the Model")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#preparing-the-test-image-file"},"Preparing the Test Image File")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#make-predictions"},"Make Predictions"))),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Based on ",(0,i.kt)("a",{parentName:"p",href:"https://www.kaggle.com/datasets/paultimothymooney/breast-histopathology-images"},"Breast Histopathology Images")," by ",(0,i.kt)("a",{parentName:"p",href:"https://www.kaggle.com/paultimothymooney"},"Paul Mooney"),".\n",(0,i.kt)("inlineCode",{parentName:"p"},"Invasive Ductal Carcinoma (IDC) is the most common subtype of all breast cancers. To assign an aggressiveness grade to a whole mount sample, pathologists typically focus on the regions which contain the IDC. As a result, one of the common pre-processing steps for automatic aggressiveness grading is to delineate the exact regions of IDC inside of a whole mount slide."),"\n",(0,i.kt)("a",{parentName:"p",href:"https://youtu.be/8XsiMQQ-4mM"},"Can recurring breast cancer be spotted with AI tech? - BBC News"))),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Citation: ",(0,i.kt)("a",{parentName:"li",href:"https://pubmed.ncbi.nlm.nih.gov/27563488/"},"Deep learning for digital pathology image analysis: A comprehensive tutorial with selected use cases")),(0,i.kt)("li",{parentName:"ul"},"Dataset: 198,738 IDC(negative) image patches; 78,786 IDC(positive) image patches")),(0,i.kt)("h2",{id:"loading-the-model"},"Loading the Model"),(0,i.kt)("p",null,"After fitting the model to classify our source images into ",(0,i.kt)("inlineCode",{parentName:"p"},"malignant")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"benign")," we can now use this model to make predictions about un-classified images. So load the model we want to use:"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"./RunPrediction.py")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-py"},"# Model you want to use\nmodelName = 'resnet50_weights.hdf5'\n# modelName = 'custom_weights.hdf5'\nmodelPath = config.OUTPUT_PATH + '/' + modelName\nprint(\"Loading Breast Cancer detector model...\")\nmodel = load_model(modelPath)\n")),(0,i.kt)("h2",{id:"preparing-the-test-image-file"},"Preparing the Test Image File"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-py"},'# Test image\n# imagePath ="./sample_pictures/malignant.png"\nimagePath =  "./sample_pictures/benign.png"\n\n# Loading the input image using openCV\nimage = cv2.imread(imagePath)\n\n# Convert it from BGR to RGB and then resize it to 48x48, \n# the same parameter we used for training\nimage1 = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)\nimage1 = cv2.resize(image1, (48, 48))\nimage1 = img_to_array(image1)\n\n# Only for ResNet50\nimage1 = preprocess_input(image1)\n\n# The image is now represented by a NumPy array of shape (48, 48, 3), however \n# we need the dimensions to be (1, 3, 48, 48) so we can pass it\n# through the network and then we\'ll also preprocess the image by subtracting the \n# mean RGB pixel intensity from the ImageNet dataset\nimage1 /=  255.0\n\nimage1 = np.expand_dims(image1, axis=0)\n')),(0,i.kt)("h2",{id:"make-predictions"},"Make Predictions"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-py"},'# Pass the image through the model to determine if the person has malignant\n(benign, malignant) = model.predict(image1)[0]\n\n\n# Adding the probability in the label\nlabel = "benign" if benign > malignant else "malignant"\nlabel = "{}: {:.2f}%".format(label, max(benign, malignant) * 100)\n        \n# Showing the output image\nprint("RESULT :" +label)\n\ncv2.imshow("IDC", image)\nif cv2.waitKey(5000) & 0xFF == ord(\'q\'):\n        cv2.destroyAllWindows()\n')))}m.isMDXComponent=!0},85591:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-918471126c0472aad97358a725e1a399.jpg"}}]);