"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[81558],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>d});var n=a(67294);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var i=n.createContext({}),p=function(e){var t=n.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},u=function(e){var t=p(e.components);return n.createElement(i.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,l=e.mdxType,r=e.originalType,i=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),m=p(a),d=l,h=m["".concat(i,".").concat(d)]||m[d]||c[d]||r;return a?n.createElement(h,s(s({ref:t},u),{},{components:a})):n.createElement(h,s({ref:t},u))}));function d(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=a.length,s=new Array(r);s[0]=m;var o={};for(var i in t)hasOwnProperty.call(t,i)&&(o[i]=t[i]);o.originalType=e,o.mdxType="string"==typeof e?e:l,s[1]=o;for(var p=2;p<r;p++)s[p]=a[p];return n.createElement.apply(null,s)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},38638:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>c,frontMatter:()=>r,metadata:()=>o,toc:()=>p});var n=a(87462),l=(a(67294),a(3905));const r={sidebar_position:9070,slug:"2020-06-17",title:"Salt Pillars & Formulas",authors:"mpolinowski",tags:["LINUX","Salt"]},s=void 0,o={unversionedId:"DevOps/Salt/2020-06-17--salt-pillars-formulas/index",id:"DevOps/Salt/2020-06-17--salt-pillars-formulas/index",title:"Salt Pillars & Formulas",description:"Guangzhou, China",source:"@site/docs/DevOps/Salt/2020-06-17--salt-pillars-formulas/index.mdx",sourceDirName:"DevOps/Salt/2020-06-17--salt-pillars-formulas",slug:"/DevOps/Salt/2020-06-17--salt-pillars-formulas/2020-06-17",permalink:"/docs/DevOps/Salt/2020-06-17--salt-pillars-formulas/2020-06-17",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/DevOps/Salt/2020-06-17--salt-pillars-formulas/index.mdx",tags:[{label:"LINUX",permalink:"/docs/tags/linux"},{label:"Salt",permalink:"/docs/tags/salt"}],version:"current",sidebarPosition:9070,frontMatter:{sidebar_position:9070,slug:"2020-06-17",title:"Salt Pillars & Formulas",authors:"mpolinowski",tags:["LINUX","Salt"]},sidebar:"tutorialSidebar",previous:{title:"Salt Execution Order",permalink:"/docs/DevOps/Salt/2020-06-18--salt-execution-order/2020-06-18"},next:{title:"Salt State",permalink:"/docs/DevOps/Salt/2020-06-16--salt-state/2020-06-16"}},i={},p=[{value:"Working with Pillars",id:"working-with-pillars",level:2},{value:"Working with Formulas",id:"working-with-formulas",level:2}],u={toc:p};function c(e){let{components:t,...r}=e;return(0,l.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"Guangzhou, China",src:a(56019).Z,width:"1500",height:"623"})),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#working-with-secure-data"},"Working with Secure Data")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#working-with-formulas"},"Working with Formulas"))),(0,l.kt)("h2",{id:"working-with-pillars"},"Working with Pillars"),(0,l.kt)("p",null,"Pillars in Salt is arbitrary, minion-specific data. There is a large volume of ",(0,l.kt)("a",{parentName:"p",href:"https://docs.saltstack.com/en/master/ref/pillar/all/index.html"},"Pillar Modules")," available to pull this data into Salt from external sources."),(0,l.kt)("p",null,"Instructions on how to pull this data in is stored in ",(0,l.kt)("inlineCode",{parentName:"p"},"*.sls")," files. Start by creating the directory ",(0,l.kt)("inlineCode",{parentName:"p"},"/srv/pillar")," and add the following files:"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"top.sls")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"base:\n  '*':\n    - name\n")),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"Top File")," sets the permission - what minions have access to a specific file. In this case all minions will have access to the file ",(0,l.kt)("inlineCode",{parentName:"p"},"name.sls"),":"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"name.sls")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"{% if grains.os == 'Ubuntu' %}\nname: Ubuntu Rocks\n{% elif grains.os == 'Centos' %}\nname: CentOS Rocks\n{% endif %}\n")),(0,l.kt)("p",null,"We can clean this up by using a dictionary:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"{% set lookup = {\n  'Ubuntu': 'Ubuntu Rocks',\n  'Centos': 'Centos Rocks'\n} %}\n\n{% set name = lookup[grains.os] %}\n\nname: {{ name | json() }}\n")),(0,l.kt)("p",null,"Or:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"{% set os = salt.grains.filter_by({\n    'Ubuntu': {\n        'name': 'Ubuntu Rocks'\n    },\n    'Centos': {\n        'name': 'Centos Rocks'\n    }\n}) %}\n\nname: {{ os.name }}\n")),(0,l.kt)("p",null,"Run the following command to update all minions:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"sudo salt '*' saltutil.refresh_pillar\n\nubuntuAsus:\n    True\n")),(0,l.kt)("p",null,"We can use this data for example in our Apache landing page (see previous tutorial):"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"welcome.sls")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"# Adding a blank front page\n{% set name = salt.pillar.get('name') %}\n\ncheck_pillar_values:\n  test.check_pillar:\n    - present:\n      - name\n    - failhard: True\n\nwelcome_page:\n  file.managed:\n    - name: /var/www/html/index.html\n    - contents: |\n        <!doctype html>\n        <body>\n            <h1>{{ name }}.</h1>\n        </body>\n")),(0,l.kt)("p",null,"You should be able to see that you Minions have access to your pillars:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"sudo salt '*' pillar.items\n")),(0,l.kt)("p",null,"And check that your front page was updated:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"sudo salt '*' state.sls apache.welcome\n")),(0,l.kt)("p",null,"You can also manually set the value of ",(0,l.kt)("inlineCode",{parentName:"p"},"name")," - but this data will be send to all minions and is NOT PRIVATE:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"sudo salt '*' state.sls apache.welcome pillar='{name: Override}'\n")),(0,l.kt)("h2",{id:"working-with-formulas"},"Working with Formulas"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://docs.saltstack.com/en/latest/topics/development/conventions/formulas.html"},"Formulas are pre-written Salt States"),". They are as open-ended as Salt States themselves and can be used for tasks such as installing a package, configuring, and starting a service, setting up users or permissions, and many other common tasks."),(0,l.kt)("p",null,"All official Salt Formulas are found as separate Git repositories in the ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/saltstack-formulas"},"'saltstack-formulas' organization on GitHub"),". They can be downloaded using the ",(0,l.kt)("a",{parentName:"p",href:"https://docs.saltstack.com/en/master/ref/file_server/all/salt.fileserver.gitfs.html#module-salt.fileserver.gitfs"},"GIT Fileserver Backend"),". To be able to use Git you first have to uncomment it in your ",(0,l.kt)("inlineCode",{parentName:"p"},"/etc/salt/master")," config. Or use a ",(0,l.kt)("inlineCode",{parentName:"p"},"local.conf")," in ",(0,l.kt)("inlineCode",{parentName:"p"},"/etc/salt/master.d/local.conf"),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"fileserver_backend:\n  - git\n  - roots\n\ngitfs_remotes:\n  - https://github.com/saltstack-formulas/memcached-formula\n")),(0,l.kt)("p",null,"After adding your ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/saltstack-formulas"},"desired Formulas")," restart the Salt master and use the ",(0,l.kt)("inlineCode",{parentName:"p"},"cp.list_master")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"cp.list_states")," command to get a list of all available configuration files to make sure that ",(0,l.kt)("inlineCode",{parentName:"p"},"memcached")," was successfully cloned from Github:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"sudo systemctl restart salt-master\n\nsudo salt ubuntuAsus cp.list_states\nubuntuAsus:\n    - apache\n    - apache.map\n    - apache.mods\n    - apache.welcome\n    - memcached\n    - memcached.config\n    - memcached.libmemcached\n    - memcached.macros\n    - memcached.python_memcached\n    - memcached.uninstall\n")),(0,l.kt)("p",null,"Continue installing the following package: "),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"on CentOS")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"yum install https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm\nyum install GitPython\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"on Ubuntu")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"sudo apt install python-git-doc\n")))}c.isMDXComponent=!0},56019:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-a9b30aa80e5cdc115144c7d8a07f3c41.jpg"}}]);