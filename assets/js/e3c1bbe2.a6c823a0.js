"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[34945],{3905:(e,n,a)=>{a.d(n,{Zo:()=>c,kt:()=>u});var t=a(67294);function r(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function o(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function s(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?o(Object(a),!0).forEach((function(n){r(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function i(e,n){if(null==e)return{};var a,t,r=function(e,n){if(null==e)return{};var a,t,r={},o=Object.keys(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||(r[a]=e[a]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=t.createContext({}),p=function(e){var n=t.useContext(l),a=n;return e&&(a="function"==typeof e?e(n):s(s({},n),e)),a},c=function(e){var n=p(e.components);return t.createElement(l.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},g=t.forwardRef((function(e,n){var a=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),g=p(a),u=r,m=g["".concat(l,".").concat(u)]||g[u]||d[u]||o;return a?t.createElement(m,s(s({ref:n},c),{},{components:a})):t.createElement(m,s({ref:n},c))}));function u(e,n){var a=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=a.length,s=new Array(o);s[0]=g;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i.mdxType="string"==typeof e?e:r,s[1]=i;for(var p=2;p<o;p++)s[p]=a[p];return t.createElement.apply(null,s)}return t.createElement.apply(null,a)}g.displayName="MDXCreateElement"},192:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var t=a(87462),r=(a(67294),a(3905));const o={sidebar_position:7020,slug:"2021-05-12",title:"Carbon Design System in React.js - Part III",authors:"mpolinowski",tags:["Javascript","Electron","React"]},s=void 0,i={unversionedId:"Development/Javascript/2021-05-12-carbon-design-react-part3/index",id:"Development/Javascript/2021-05-12-carbon-design-react-part3/index",title:"Carbon Design System in React.js - Part III",description:"Guangzhou, China",source:"@site/docs/Development/Javascript/2021-05-12-carbon-design-react-part3/index.md",sourceDirName:"Development/Javascript/2021-05-12-carbon-design-react-part3",slug:"/Development/Javascript/2021-05-12-carbon-design-react-part3/2021-05-12",permalink:"/docs/Development/Javascript/2021-05-12-carbon-design-react-part3/2021-05-12",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Development/Javascript/2021-05-12-carbon-design-react-part3/index.md",tags:[{label:"Javascript",permalink:"/docs/tags/javascript"},{label:"Electron",permalink:"/docs/tags/electron"},{label:"React",permalink:"/docs/tags/react"}],version:"current",sidebarPosition:7020,frontMatter:{sidebar_position:7020,slug:"2021-05-12",title:"Carbon Design System in React.js - Part III",authors:"mpolinowski",tags:["Javascript","Electron","React"]},sidebar:"tutorialSidebar",previous:{title:"MQTT Webfrontend with React.js",permalink:"/docs/Development/Javascript/2021-06-01--mqtt-with-reactjs/2021-06-01"},next:{title:"Carbon Design System in React.js - Part II",permalink:"/docs/Development/Javascript/2021-05-11-carbon-design-react-part2/2021-05-11"}},l={},p=[{value:"Landing Page Styles",id:"landing-page-styles",level:2},{value:"Banner",id:"banner",level:3},{value:"Introduction Block",id:"introduction-block",level:3},{value:"About Page Styles",id:"about-page-styles",level:2},{value:"Adding the Page Grid",id:"adding-the-page-grid",level:3}],c={toc:p};function d(e){let{components:n,...o}=e;return(0,r.kt)("wrapper",(0,t.Z)({},c,o,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Guangzhou, China",src:a(22546).Z,width:"1500",height:"543"})),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#landing-page-styles"},"Landing Page Styles"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#banner"},"Banner")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#introduction-block"},"Introduction Block")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#about-page-styles"},"About Page Styles"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#adding-the-page-grid"},"Adding the Page Grid"))))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/mpolinowski/electron-react-app"},"Github Resourcesitory")),(0,r.kt)("p",null,"Continuation of ",(0,r.kt)("a",{parentName:"p",href:"/docs/Development/Javascript/2021-05-11-carbon-design-react-part2/2021-05-11"},"Part II")," - Using the ",(0,r.kt)("a",{parentName:"p",href:"https://www.carbondesignsystem.com/"},"IBM Carbon Design System")," in a ",(0,r.kt)("a",{parentName:"p",href:"https://reactjs.org/docs/create-a-new-react-app.html"},"React App"),"."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Carbon Design System",src:a(70309).Z,width:"1281",height:"642"})),(0,r.kt)("h2",{id:"landing-page-styles"},"Landing Page Styles"),(0,r.kt)("p",null,"I\u2019ll be using the ",(0,r.kt)("a",{parentName:"p",href:"https://www.carbondesignsystem.com/guidelines/spacing/overview"},"Carbon Design spacing tokens")," in ",(0,r.kt)("inlineCode",{parentName:"p"},"src/app.scss"),", add these imports at the top of the file so we can use Carbon breakpoints, tokens, and typography Sass mixins and functions:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scss"},"@import 'carbon-components/scss/globals/scss/vendor/@carbon/type/scss/font-family.scss';\n@import 'carbon-components/scss/globals/scss/vendor/@carbon/layout/scss/breakpoint.scss';\n@import 'carbon-components/scss/globals/scss/typography.scss';\n@import 'carbon-components/scss/globals/scss/vars.scss';\n")),(0,r.kt)("h3",{id:"banner"},"Banner"),(0,r.kt)("p",null,"We are now able to use the spacing tokens in ",(0,r.kt)("inlineCode",{parentName:"p"},"src/content/LandingPage/_landing-page.scss")," to add ",(0,r.kt)("a",{parentName:"p",href:"https://www.carbondesignsystem.com/guidelines/spacing/overview#spacing-scale"},"some space")," above the breadcrumb and below the heading:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scss"},".landing-page__banner {\n  padding-top: $spacing-05;\n  padding-bottom: $spacing-07 * 4;\n}\n")),(0,r.kt)("p",null,"The banner should have a light gray background colour which we can define in a SASS mixin in ",(0,r.kt)("inlineCode",{parentName:"p"},"src/content/LandingPage/_mixins.scss")," using a ",(0,r.kt)("a",{parentName:"p",href:"https://www.carbondesignsystem.com/guidelines/color/usage"},"Carbon Colour Token")," ",(0,r.kt)("inlineCode",{parentName:"p"},"$ui-01"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scss"},"@mixin landing-page-background() {\n  background-color: $ui-01;\n  position: relative;\n  &::before {\n    content: '';\n    position: absolute;\n    left: -$spacing-06;\n    top: 0;\n    right: -$spacing-06;\n    bottom: 0;\n    background: $ui-01;\n    z-index: -1;\n  }\n}\n")),(0,r.kt)("p",null,"For this to take effect we need to import our mixin into ",(0,r.kt)("inlineCode",{parentName:"p"},"src/content/LandingPage/_landing-page.scss"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scss"},"@import './mixins.scss';\n@import './overrides.scss';\n")),(0,r.kt)("p",null,"And update the ",(0,r.kt)("inlineCode",{parentName:"p"},".landing-page__banner")," declaration block ",(0,r.kt)("inlineCode",{parentName:"p"},"src/content/LandingPage/_landing-page.scss"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scss"},".landing-page__banner {\n  padding-top: $spacing-05;\n  padding-bottom: $spacing-07 * 4;\n  @include landing-page-background;\n}\n")),(0,r.kt)("p",null,"And while we are at it - let's handle the heading type using ",(0,r.kt)("a",{parentName:"p",href:"https://www.carbondesignsystem.com/guidelines/typography/productive"},"Carbon Type Tokens")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scss"},".landing-page__heading {\n  @include carbon--type-style('productive-heading-05');\n}\n")),(0,r.kt)("h3",{id:"introduction-block"},"Introduction Block"),(0,r.kt)("p",null,"Again, we need to take care of the spacing and types to make this block on the landing page fit into our design - ",(0,r.kt)("inlineCode",{parentName:"p"},"src/content/LandingPage/_landing-page.scss"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scss"},".landing-page__r2 {\n  margin-top: rem(-40px);\n}\n\n.landing-page__tab-content {\n  padding-top: $layout-05;\n  padding-bottom: $layout-05;\n}\n\n.landing-page__subheading {\n  @include carbon--type-style('productive-heading-03');\n  @include carbon--font-weight('semibold');\n}\n\n.landing-page__r3 {\n  padding-top: $spacing-09;\n  padding-bottom: $spacing-09;\n  @include landing-page-background;\n}\n\n.landing-page__label {\n  @include carbon--type-style('heading-01');\n}\n")),(0,r.kt)("h2",{id:"about-page-styles"},"About Page Styles"),(0,r.kt)("h3",{id:"adding-the-page-grid"},"Adding the Page Grid"),(0,r.kt)("p",null,"Now in our ",(0,r.kt)("inlineCode",{parentName:"p"},"AboutPage.js")," we\u2019ll add our grid containers in the return section - ",(0,r.kt)("inlineCode",{parentName:"p"},"src/content/AboutPage/AboutPage.js"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'return (\n  <div className="bx--grid bx--grid--full-width bx--grid--no-gutter repo-page">\n    <div className="bx--row repo-page__r1">\n      <div className="bx--col-lg-16">Data table will go here</div>\n    </div>\n  </div>\n);\n')),(0,r.kt)("p",null,"The About page should contain a table with links to further information. Let's create this table in ",(0,r.kt)("inlineCode",{parentName:"p"},"src/content/AboutPage/AboutTable.js"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"import React from 'react';\nimport {\n  DataTable,\n  TableContainer,\n  Table,\n  TableHead,\n  TableRow,\n  TableExpandHeader,\n  TableHeader,\n  TableBody,\n  TableExpandRow,\n  TableCell,\n  TableExpandedRow,\n} from 'carbon-components-react';\n")),(0,r.kt)("p",null,"This component uses two props, rows and headers, and returns a ",(0,r.kt)("a",{parentName:"p",href:"http://react.carbondesignsystem.com/?selectedKind=DataTable&selectedStory=with%20expansion"},"Carbon DataTable"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'const AboutTable = ({ rows, headers }) => {\n  return (\n    <DataTable\n      rows={rows}\n      headers={headers}\n      render={({\n        rows,\n        headers,\n        getHeaderProps,\n        getRowProps,\n        getTableProps,\n      }) => (\n        <TableContainer\n          title="Carbon Resources"\n          description="A collection of public Carbon info material.">\n          <Table {...getTableProps()}>\n            <TableHead>\n              <TableRow>\n                <TableExpandHeader />\n                {headers.map(header => (\n                  <TableHeader {...getHeaderProps({ header })}>\n                    {header.header}\n                  </TableHeader>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {rows.map(row => (\n                <React.Fragment key={row.id}>\n                  <TableExpandRow {...getRowProps({ row })}>\n                    {row.cells.map(cell => (\n                      <TableCell key={cell.id}>{cell.value}</TableCell>\n                    ))}\n                  </TableExpandRow>\n                  <TableExpandedRow colSpan={headers.length + 1}>\n                    <p>Row description</p>\n                  </TableExpandedRow>\n                </React.Fragment>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      )}\n    />\n  );\n};\n\nexport default AboutTable;\n')),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"getTableProps"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"getHeaderProps"),", and ",(0,r.kt)("inlineCode",{parentName:"p"},"getRowProps")," functions each tell the ",(0,r.kt)("inlineCode",{parentName:"p"},"DataTable")," component to process and return the necessary props that are needed by the ",(0,r.kt)("inlineCode",{parentName:"p"},"Table"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"Header")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"Row")," components respectively. We take the return of that function (an object containing the props) and ",(0,r.kt)("a",{parentName:"p",href:"https://reactjs.org/docs/jsx-in-depth.html#spread-attributes"},"spread it out")," into the component."),(0,r.kt)("p",null,"To render the table we now need to import it into ",(0,r.kt)("inlineCode",{parentName:"p"},"src/content/AboutPage/AboutPage.js"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"import AboutTable from './AboutTable';\n")),(0,r.kt)("p",null,"Then below the imports, include the following arrays to pass into the ResourceTable component:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const headers = [\n  {\n    key: 'name',\n    header: 'Name',\n  },\n  {\n    key: 'createdAt',\n    header: 'Created',\n  },\n  {\n    key: 'updatedAt',\n    header: 'Updated',\n  },\n  {\n    key: 'issueCount',\n    header: 'Open Issues',\n  },\n  {\n    key: 'stars',\n    header: 'Stars',\n  },\n  {\n    key: 'links',\n    header: 'Links',\n  },\n];\nconst rows = [\n  {\n    id: '1',\n    name: 'Resource 1',\n    createdAt: 'Date',\n    updatedAt: 'Date',\n    issueCount: '123',\n    stars: '456',\n    links: 'Links',\n  },\n  {\n    id: '2',\n    name: 'Resource 2',\n    createdAt: 'Date',\n    updatedAt: 'Date',\n    issueCount: '123',\n    stars: '456',\n    links: 'Links',\n  },\n  {\n    id: '3',\n    name: 'Resource 3',\n    createdAt: 'Date',\n    updatedAt: 'Date',\n    issueCount: '123',\n    stars: '456',\n    links: 'Links',\n  },\n];\n")),(0,r.kt)("p",null,"Lastly in ",(0,r.kt)("inlineCode",{parentName:"p"},"AboutPage.js"),", we need to simply replace ",(0,r.kt)("strong",{parentName:"p"},"Data table will go here")," with:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"<AboutTable headers={headers} rows={rows} />\n")),(0,r.kt)("p",null,"Now we just need to add some spacing around our table - ",(0,r.kt)("inlineCode",{parentName:"p"},"src/content/AboutPage/_about-page.scss"),": "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scss"},".repo-page .bx--row {\n  padding-top: $spacing-05;\n  padding-bottom: $spacing-05;\n}\n")))}d.isMDXComponent=!0},70309:(e,n,a)=>{a.d(n,{Z:()=>t});const t=a.p+"assets/images/Carbon_Design_System_01-764b195227b283d83cf76fa855da9a65.png"},22546:(e,n,a)=>{a.d(n,{Z:()=>t});const t=a.p+"assets/images/photo-456tdsfggd_67gfh6dgdf4_d-3e0da3e4b757265a38041198744da6f5.jpg"}}]);