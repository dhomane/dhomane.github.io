"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[82917],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),m=a,k=u["".concat(s,".").concat(m)]||u[m]||d[m]||o;return n?r.createElement(k,i(i({ref:t},c),{},{components:n})):r.createElement(k,i({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},32014:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var r=n(87462),a=(n(67294),n(3905));const o={sidebar_position:4040,slug:"2022-10-23",title:"Hashicorp Nomad - Working with Consul Connect",authors:"mpolinowski",tags:["Nomad","Consul","LINUX"],description:"CNI Error message with Consul Connect"},i=void 0,l={unversionedId:"DevOps/Hashicorp/2022-10-23-hashicorp-consul-connect/index",id:"DevOps/Hashicorp/2022-10-23-hashicorp-consul-connect/index",title:"Hashicorp Nomad - Working with Consul Connect",description:"CNI Error message with Consul Connect",source:"@site/docs/DevOps/Hashicorp/2022-10-23-hashicorp-consul-connect/index.md",sourceDirName:"DevOps/Hashicorp/2022-10-23-hashicorp-consul-connect",slug:"/DevOps/Hashicorp/2022-10-23-hashicorp-consul-connect/2022-10-23",permalink:"/docs/DevOps/Hashicorp/2022-10-23-hashicorp-consul-connect/2022-10-23",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/DevOps/Hashicorp/2022-10-23-hashicorp-consul-connect/index.md",tags:[{label:"Nomad",permalink:"/docs/tags/nomad"},{label:"Consul",permalink:"/docs/tags/consul"},{label:"LINUX",permalink:"/docs/tags/linux"}],version:"current",sidebarPosition:4040,frontMatter:{sidebar_position:4040,slug:"2022-10-23",title:"Hashicorp Nomad - Working with Consul Connect",authors:"mpolinowski",tags:["Nomad","Consul","LINUX"],description:"CNI Error message with Consul Connect"},sidebar:"tutorialSidebar",previous:{title:"Hashicorp Nomad - Working with Ports",permalink:"/docs/DevOps/Hashicorp/2022-10-23-hashicorp-nomad-ports/2022-10-23"},next:{title:"Hashicorp Nomad Sidecar Pattern",permalink:"/docs/DevOps/Hashicorp/2022-10-22-hashicorp-nomad-sidecar-pattern/2022-10-22"}},s={},p=[{value:"Setup Failure",id:"setup-failure",level:2},{value:"CNI Plugins",id:"cni-plugins",level:3},{value:"Sidecar Required Ports",id:"sidecar-required-ports",level:3}],c={toc:p};function d(e){let{components:t,...o}=e;return(0,a.kt)("wrapper",(0,r.Z)({},c,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Shen Zhen, China",src:n(12214).Z,width:"2230",height:"839"})),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#setup-failure"},"Setup Failure"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#cni-plugins"},"CNI Plugins")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#sidecar-required-ports"},"Sidecar Required Ports"))))),(0,a.kt)("h2",{id:"setup-failure"},"Setup Failure"),(0,a.kt)("p",null,"Trying to use ",(0,a.kt)("strong",{parentName:"p"},"Consul Connect")," in a Nomad job file:"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("inlineCode",{parentName:"p"},'failed to setup alloc: pre-run hook "network" failed: failed to configure networking for alloc: failed to configure network: plugin type="loopback" failed (add): failed to find plugin "loopback" in path [/opt/cni/bin]'))),(0,a.kt)("h3",{id:"cni-plugins"},"CNI Plugins"),(0,a.kt)("p",null,"Nomad uses CNI plugins to configure the network namespace used to secure the Consul service mesh sidecar proxy. All Nomad client nodes using network namespaces must have CNI plugins installed:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'curl -L -o cni-plugins.tgz "https://github.com/containernetworking/plugins/releases/download/v1.0.0/cni-plugins-linux-$( [ $(uname -m) = aarch64 ] && echo arm64 || echo amd64)"-v1.0.0.tgz\nsudo mkdir -p /opt/cni/bin\nsudo tar -C /opt/cni/bin -xzf cni-plugins.tgz\n')),(0,a.kt)("p",null,"Ensure the your Linux operating system distribution has been configured to allow container traffic through the bridge network to be routed via iptables. These tunables can be set as follows:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"echo 1 | tee /proc/sys/net/bridge/bridge-nf-call-arptables\necho 1 | tee /proc/sys/net/bridge/bridge-nf-call-ip6tables\necho 1 | tee /proc/sys/net/bridge/bridge-nf-call-iptables\n")),(0,a.kt)("p",null,"To preserve these settings on startup of a client node, add a file including the following to /etc/sysctl.d/ or remove the file your Linux distribution puts in that directory."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"net.bridge.bridge-nf-call-arptables = 1\nnet.bridge.bridge-nf-call-ip6tables = 1\nnet.bridge.bridge-nf-call-iptables = 1\n")),(0,a.kt)("h3",{id:"sidecar-required-ports"},"Sidecar Required Ports"),(0,a.kt)("p",null,"Before running Consul, you should ensure the following bind ports are accessible. Below is a complete list of ports that need to be opened inside your Consul cluster:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Use"),(0,a.kt)("th",{parentName:"tr",align:null},"Default Ports"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"td"},"DNS"),": The DNS server (",(0,a.kt)("em",{parentName:"td"},"TCP and UDP"),")"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"8600"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"td"},"HTTP"),": The HTTP API (",(0,a.kt)("em",{parentName:"td"},"TCP Only"),")"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"8500"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"td"},"HTTPS"),": The HTTPs API\t",(0,a.kt)("em",{parentName:"td"},"disabled")),(0,a.kt)("td",{parentName:"tr",align:null},"(",(0,a.kt)("inlineCode",{parentName:"td"},"8501"),")*")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"td"},"gRPC"),": The gRPC API ",(0,a.kt)("em",{parentName:"td"},"disabled")),(0,a.kt)("td",{parentName:"tr",align:null},"(",(0,a.kt)("inlineCode",{parentName:"td"},"8502"),")*")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"td"},"LAN Serf"),": The Serf LAN port (",(0,a.kt)("em",{parentName:"td"},"TCP and UDP"),")"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"8301"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"td"},"Wan Serf"),": The Serf WAN port (",(0,a.kt)("em",{parentName:"td"},"TCP and UDP"),")"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"8302"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"td"},"server"),": Server RPC address (",(0,a.kt)("em",{parentName:"td"},"TCP Only"),")"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"8300"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"td"},"Sidecar")," Proxy Min: Inclusive min port number to use for automatically assigned sidecar service registrations."),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"21000"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("strong",{parentName:"td"},"Sidecar")," Proxy Max: Inclusive max port number to use for automatically assigned sidecar service registrations."),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"21255"))))),(0,a.kt)("p",null,"*"," ",(0,a.kt)("em",{parentName:"p"},"For HTTPS and gRPC the ports specified in the table are recommendations.")),(0,a.kt)("p",null,"E.g. ",(0,a.kt)("em",{parentName:"p"},"Uncomplicated Firewall"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"ufw allow 8300,8301,8302,8500,8502,8600/tcp\nufw allow 8301,8302,8502,8600/udp\nufw allow 21000:21255/tcp\n")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Continues here  ",(0,a.kt)("a",{parentName:"p",href:"/docs/DevOps/Hashicorp/2022-11-24-hashicorp-consul-connect/2022-11-24"},"Hashicorp Nomad - Working with Consul Connect Part II"))))}d.isMDXComponent=!0},12214:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-6c1edb088dfea3a7d39f8eebb8e9dc23.jpg"}}]);