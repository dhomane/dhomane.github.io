"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[6881],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var a=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(n),h=o,m=u["".concat(s,".").concat(h)]||u[h]||d[h]||i;return n?a.createElement(m,r(r({ref:t},p),{},{components:n})):a.createElement(m,r({ref:t},p))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,r=new Array(i);r[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,r[1]=l;for(var c=2;c<i;c++)r[c]=n[c];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},53470:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var a=n(87462),o=(n(67294),n(3905));const i={sidebar_position:9030,slug:"2021-11-05",title:"License Plate Recognition with YOLOv4, OpenCV and Tesseract",authors:"mpolinowski",tags:["Machine Learning","Python","YOLO"]},r=void 0,l={unversionedId:"IoT-and-Machine-Learning/ML/2021-11-05--license-plates-yolov4-opencv-tesseract/index",id:"IoT-and-Machine-Learning/ML/2021-11-05--license-plates-yolov4-opencv-tesseract/index",title:"License Plate Recognition with YOLOv4, OpenCV and Tesseract",description:"Shenzhen, China",source:"@site/docs/IoT-and-Machine-Learning/ML/2021-11-05--license-plates-yolov4-opencv-tesseract/index.md",sourceDirName:"IoT-and-Machine-Learning/ML/2021-11-05--license-plates-yolov4-opencv-tesseract",slug:"/IoT-and-Machine-Learning/ML/2021-11-05--license-plates-yolov4-opencv-tesseract/2021-11-05",permalink:"/docs/IoT-and-Machine-Learning/ML/2021-11-05--license-plates-yolov4-opencv-tesseract/2021-11-05",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/IoT-and-Machine-Learning/ML/2021-11-05--license-plates-yolov4-opencv-tesseract/index.md",tags:[{label:"Machine Learning",permalink:"/docs/tags/machine-learning"},{label:"Python",permalink:"/docs/tags/python"},{label:"YOLO",permalink:"/docs/tags/yolo"}],version:"current",sidebarPosition:9030,frontMatter:{sidebar_position:9030,slug:"2021-11-05",title:"License Plate Recognition with YOLOv4, OpenCV and Tesseract",authors:"mpolinowski",tags:["Machine Learning","Python","YOLO"]},sidebar:"tutorialSidebar",previous:{title:"OpenCV Crash Course Part I",permalink:"/docs/IoT-and-Machine-Learning/ML/2021-11-06--opencv-crash-course-part-i/2021-11-06"},next:{title:"Installing YOLOv4 with Anaconda",permalink:"/docs/IoT-and-Machine-Learning/ML/2021-11-04--installing-yolov4/2021-11-04"}},s={},c=[{value:"Activating the Virtual Environment",id:"activating-the-virtual-environment",level:2},{value:"Setting up YOLOv4",id:"setting-up-yolov4",level:2},{value:"Tesseract OCR",id:"tesseract-ocr",level:2},{value:"Run License Plate Recognition",id:"run-license-plate-recognition",level:2},{value:"Count Instances",id:"count-instances",level:3},{value:"Crop Instances",id:"crop-instances",level:3}],p={toc:c};function d(e){let{components:t,...i}=e;return(0,o.kt)("wrapper",(0,a.Z)({},p,i,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Shenzhen, China",src:n(57224).Z,width:"1500",height:"688"})),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#activating-the-virtual-environment"},"Activating the Virtual Environment")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#setting-up-yolov4"},"Setting up YOLOv4")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#tesseract-ocr"},"Tesseract OCR")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#run-license-plate-recognition"},"Run License Plate Recognition"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#count-instances"},"Count Instances")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#crop-instances"},"Crop Instances"))))),(0,o.kt)("p",null,"This project uses the ",(0,o.kt)("a",{parentName:"p",href:"/docs/IoT-and-Machine-Learning/ML/2021-11-04--installing-yolov4/2021-11-04"},"YOLOv4/Anaconda Setup")," by ",(0,o.kt)("a",{parentName:"p",href:"https://www.youtube.com/channel/UCrydcKaojc44XnuXrfhlV8Q"},"The AI Guy"),":"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/mpolinowski/yolov4-custom-functions#license"},"Github Repository")),(0,o.kt)("p",null,"In this repository you can find a custom function to feed Tesseract OCR the bounding box regions of license plates found by my custom YOLOv4 model in order to read and extract the license plate numbers. Thorough preprocessing is done on the license plate in order to correctly extract the license plate number from the image. The function that is in charge of doing the preprocessing and text extraction is called ",(0,o.kt)("inlineCode",{parentName:"p"},"recognize_plate")," and can be found in the file ",(0,o.kt)("inlineCode",{parentName:"p"},"core/utils.py"),"."),(0,o.kt)("h2",{id:"activating-the-virtual-environment"},"Activating the Virtual Environment"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"conda env create -f conda-gpu.yml\nconda activate yolov4-gpu\n")),(0,o.kt)("h2",{id:"setting-up-yolov4"},"Setting up YOLOv4"),(0,o.kt)("p",null,"Download the License Plate Trained Custom Weight:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"https://drive.google.com/file/d/1EUPtbtdF0bjRtNjGv436vDY28EN5DXDH/view?usp=sharing\n")),(0,o.kt)("p",null,"Copy and paste the ",(0,o.kt)("inlineCode",{parentName:"p"},"custom.weights")," file into the ",(0,o.kt)("inlineCode",{parentName:"p"},"data")," folder and create a ",(0,o.kt)("inlineCode",{parentName:"p"},"custom.names")," in the ",(0,o.kt)("inlineCode",{parentName:"p"},"data/classes/")," folder with the following line:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"license_plate\n")),(0,o.kt)("p",null,"To make YOLO use this file, you need to edit the following line in ",(0,o.kt)("inlineCode",{parentName:"p"},"core/config.py")," to point to your ",(0,o.kt)("inlineCode",{parentName:"p"},"custom.names")," file:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'__C.YOLO.CLASSES              = "./data/classes/custom.names"\n')),(0,o.kt)("p",null,"We now need to convert this model into the Tensorflow format for YOLOv4:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"python save_model.py --weights ./data/custom.weights --output ./checkpoints/custom-416 --input_size 416 --model yolov4 \n")),(0,o.kt)("h2",{id:"tesseract-ocr"},"Tesseract OCR"),(0,o.kt)("p",null,"YOLO helps us to identify license plates in the image and gives us a boundary box that we can cut out with OpenCV. The character recognition is then done by Tesseract."),(0,o.kt)("p",null,"In order to run Tesseract OCR you must first ",(0,o.kt)("a",{parentName:"p",href:"/docs/IoT-and-Machine-Learning/ML/2021-10-31--tesseract_ocr_arch_linux/2021-10-31"},"download the binary files and set them up on your local machine"),". Please do so before proceeding or commands will not run as expected!"),(0,o.kt)("h2",{id:"run-license-plate-recognition"},"Run License Plate Recognition"),(0,o.kt)("p",null,"All you need to do is add the --plate flag on top of the command to run the custom YOLOv4 model:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"python detect.py --weights ./checkpoints/custom-416 --size 416 --model yolov4 --images ./data/images/HK_Taxi.jpg --plate\n\nLicense Plate #:  W0BZK295\nLicense Plate #:  HH07194\n")),(0,o.kt)("p",null,"The command will return the recognized license plates and save the following image to the ",(0,o.kt)("inlineCode",{parentName:"p"},"detections")," folder:"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"YOLOv4 License Plate Detection",src:n(67194).Z,width:"1300",height:"867"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"The model did not cooperate with the local license plate format and I had to Photoshop EU license plates in to get it to work. And the resolution is important - the original image was too large which resulted in incorrect results (Resizing it to 50% resolved the issue).")),(0,o.kt)("h3",{id:"count-instances"},"Count Instances"),(0,o.kt)("p",null,"Run ",(0,o.kt)("inlineCode",{parentName:"p"},"detect.py")," (for images) or ",(0,o.kt)("inlineCode",{parentName:"p"},"detect_video.py")," (for videos) with the ",(0,o.kt)("inlineCode",{parentName:"p"},"--count")," flag to get the number of detected objects:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"python detect_video.py --weights ./checkpoints/custom-416 --size 416 --model yolov4 --video ./data/video/license_plate.mp4 --count\n")),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"YOLOv4 License Plate Detection",src:n(8732).Z,width:"1274",height:"622"})),(0,o.kt)("h3",{id:"crop-instances"},"Crop Instances"),(0,o.kt)("p",null,"The Crop function within the file ",(0,o.kt)("inlineCode",{parentName:"p"},"core/functions.py")," can be applied to any ",(0,o.kt)("inlineCode",{parentName:"p"},"detect.py")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"detect_video.py")," commands in order to crop the YOLOv4 detections and save them each as their own new image. To crop detections all you need to do is add the --crop flag to any command: "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"python detect_video.py --weights ./checkpoints/custom-416 --size 416 --model yolov4 --video ./data/video/cars.mp4 --crop\n")),(0,o.kt)("p",null,"Set the frame interval in ",(0,o.kt)("inlineCode",{parentName:"p"},"detect_video.py"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"crop_rate = 150 # capture images every so many frames (ex. crop photos every 150 frames)\n")),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"YOLOv4 License Plate Detection",src:n(40640).Z,width:"1900",height:"724"})),(0,o.kt)("p",null,"The resulting cropped images will be saved within the ",(0,o.kt)("inlineCode",{parentName:"p"},"detections/crop/")," folder:"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"YOLOv4 License Plate Detection",src:n(84092).Z,width:"134",height:"51"})),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"YOLOv4 License Plate Detection",src:n(72127).Z,width:"273",height:"83"})))}d.isMDXComponent=!0},8732:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/count1-cf306e6377cc0a69aa0ee74cf801d121.png"},40640:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/crop1-d3b2a30871b0917f971c4e8cfebaf8b3.png"},67194:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/detection1-54b32dde8f5d674e797b8ec08970841f.png"},84092:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/license_plate_1-a96052432fc4bada2e1ed68063d43d2c.png"},72127:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/license_plate_2-e9b3bdd1bb9be265624eee33c03b1682.png"},57224:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-ffe80356d19fb4b090a3bef79b45aab3.jpg"}}]);