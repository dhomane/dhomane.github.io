"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[40065],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),l=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=l(e.components);return a.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),d=l(n),m=r,b=d["".concat(p,".").concat(m)]||d[m]||c[m]||i;return n?a.createElement(b,s(s({ref:t},u),{},{components:n})):a.createElement(b,s({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,s=new Array(i);s[0]=d;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:r,s[1]=o;for(var l=2;l<i;l++)s[l]=n[l];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},59186:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>c,frontMatter:()=>i,metadata:()=>o,toc:()=>l});var a=n(87462),r=(n(67294),n(3905));const i={sidebar_position:8080,slug:"2022-01-13",title:"Testing the Zabbix API with Postman",authors:"mpolinowski",tags:["Zabbix","Linux"]},s=void 0,o={unversionedId:"DevOps/Zabbix/2022-01-13--zabbix-api-testing/index",id:"DevOps/Zabbix/2022-01-13--zabbix-api-testing/index",title:"Testing the Zabbix API with Postman",description:"Guangzhou, China",source:"@site/docs/DevOps/Zabbix/2022-01-13--zabbix-api-testing/index.md",sourceDirName:"DevOps/Zabbix/2022-01-13--zabbix-api-testing",slug:"/DevOps/Zabbix/2022-01-13--zabbix-api-testing/2022-01-13",permalink:"/docs/DevOps/Zabbix/2022-01-13--zabbix-api-testing/2022-01-13",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/DevOps/Zabbix/2022-01-13--zabbix-api-testing/index.md",tags:[{label:"Zabbix",permalink:"/docs/tags/zabbix"},{label:"Linux",permalink:"/docs/tags/linux"}],version:"current",sidebarPosition:8080,frontMatter:{sidebar_position:8080,slug:"2022-01-13",title:"Testing the Zabbix API with Postman",authors:"mpolinowski",tags:["Zabbix","Linux"]},sidebar:"tutorialSidebar",previous:{title:"Zabbix v6 Docker-Compose Setup",permalink:"/docs/DevOps/Zabbix/2022-01-13--zabbix-server-v6/2022-01-13"},next:{title:"Zabbix Docker-Compose Setup",permalink:"/docs/DevOps/Zabbix/2021-10-13--zabbix-compose-setup/2021-10-13"}},p={},l=[{value:"Postman",id:"postman",level:2},{value:"Authentication",id:"authentication",level:3},{value:"Retrieving Data",id:"retrieving-data",level:3},{value:"host.get",id:"hostget",level:4},{value:"trend.get",id:"trendget",level:4}],u={toc:l};function c(e){let{components:t,...i}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Guangzhou, China",src:n(58515).Z,width:"1500",height:"467"})),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#postman"},"Postman"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#authentication"},"Authentication")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#retrieving-data"},"Retrieving Data"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#hostget"},"host.get")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#trendget"},"trend.get"))))))),(0,r.kt)("p",null,"I am using the ",(0,r.kt)("strong",{parentName:"p"},"Zabbix Version 6.0rc")," set up ",(0,r.kt)("a",{parentName:"p",href:"/docs/DevOps/Zabbix/2022-01-13--zabbix-server-v6/2022-01-13"},"using Docker Compose")," on a server with the IP address ",(0,r.kt)("inlineCode",{parentName:"p"},"192.168.2.111"),". The Zabbix frontend is running on port ",(0,r.kt)("inlineCode",{parentName:"p"},"8080"),". I am testing because I ran into issues trying to ",(0,r.kt)("a",{parentName:"p",href:"/docs/DevOps/Zabbix/2022-01-15--zabbix-grafana-dashboard/2022-01-15"},"connect a Grafana instance"),"."),(0,r.kt)("h2",{id:"postman"},"Postman"),(0,r.kt)("p",null,"The Zabbix API is available on ",(0,r.kt)("inlineCode",{parentName:"p"},"http://192.168.2.111:8080/api_jsonrpc.php")," via POST requests using the ",(0,r.kt)("strong",{parentName:"p"},"Content-Type")," ",(0,r.kt)("inlineCode",{parentName:"p"},"application/json-rpc"),":"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Zabbix API Test",src:n(62373).Z,width:"1196",height:"338"})),(0,r.kt)("p",null,"Adding the following ",(0,r.kt)("strong",{parentName:"p"},"JSON Body")," returns the API version:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{"jsonrpc":"2.0","method":"apiinfo.version","id":1,"auth":null,"params":{}}\n')),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Zabbix API Test",src:n(46885).Z,width:"1192",height:"517"})),(0,r.kt)("p",null,"Which is in my case ",(0,r.kt)("strong",{parentName:"p"},"Version 6.0.0"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "result": "6.0.0",\n    "id": 1\n}\n')),(0,r.kt)("h3",{id:"authentication"},"Authentication"),(0,r.kt)("p",null,"All other request require a user login. I am going to use a user I created for Grafana that has the necessary ",(0,r.kt)("strong",{parentName:"p"},"API Access Rights"),":"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Zabbix API Test",src:n(52992).Z,width:"1199",height:"532"})),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "method": "user.login",\n    "params": {\n        "user": "Grafana",\n        "password": "admin"\n    },\n    "id": 1,\n    "auth": null\n}\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc")," : the version of the JSON-RPC protocol used by the API; the Zabbix API implements JSON-RPC version 2.0;"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"method")," : the API method being called;"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"params")," : parameters that will be passed to the API method;"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"id")," : an arbitrary identifier of the request;"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"auth")," : a user authentication token; since we don't have one yet, it's set to null.")),(0,r.kt)("p",null,"This returns our ",(0,r.kt)("strong",{parentName:"p"},"User Authentication Token")," ",(0,r.kt)("inlineCode",{parentName:"p"},"6a92e979419baa5903a4794914770db5")," that we can use for future requests:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "result": "6a92e979419baa5903a4794914770db5",\n    "id": 1\n}\n')),(0,r.kt)("h3",{id:"retrieving-data"},"Retrieving Data"),(0,r.kt)("p",null,"Equipped with the auth token I can now ",(0,r.kt)("a",{parentName:"p",href:"https://www.zabbix.com/documentation/devel/en/manual/api/reference/"},"start querying my Zabbix hosts"),":"),(0,r.kt)("h4",{id:"hostget"},"host.get"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "method": "host.get",\n    "params": {\n        "output": [\n            "hostid",\n            "host"\n        ],\n        "selectInterfaces": [\n            "interfaceid",\n            "ip"\n        ]\n    },\n    "id": 2,\n    "auth": "6a92e979419baa5903a4794914770db5"\n}\n')),(0,r.kt)("p",null,"My test system only has the main Zabbix server added and this is reflected in the response:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "result": [\n        {\n            "hostid": "10084",\n            "host": "Zabbix server",\n            "interfaces": [\n                {\n                    "interfaceid": "1",\n                    "ip": "172.16.239.103"\n                }\n            ]\n        }\n    ],\n    "id": 2\n}\n')),(0,r.kt)("h4",{id:"trendget"},"trend.get"),(0,r.kt)("p",null,"The Trend endpoint requires you to specify an ",(0,r.kt)("strong",{parentName:"p"},"itemid"),". You can find the item ID by opening any graph from your host and take a look at the URL - e.g. the CPU idle time:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"http://192.168.2.111:8080/history.php?action=showgraph&itemids%5B%5D=42264\n")),(0,r.kt)("p",null,"Here the item ID is ",(0,r.kt)("inlineCode",{parentName:"p"},"42264"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "method": "trend.get",\n    "params": {\n        "output": [\n            "itemid",\n            "clock",\n            "num",\n            "value_min",\n            "value_avg",\n            "value_max"\n        ],\n        "itemids": [\n            "42264"\n        ],\n        "limit": "1"\n    },\n    "id": 2,\n    "auth": "6a92e979419baa5903a4794914770db5"\n}\n')),(0,r.kt)("p",null,"And this returns the following response:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "result": [\n        {\n            "itemid": "42264",\n            "clock": "1643439600",\n            "num": "55",\n            "value_min": "86.672412",\n            "value_avg": "97.39452778181823",\n            "value_max": "98.332146"\n        }\n    ],\n    "id": 2\n}\n')))}c.isMDXComponent=!0},62373:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/Zabbix_API_Test_01-ef939809da8849a05dc0440b2cbe75f2.png"},46885:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/Zabbix_API_Test_02-4ecd5106f039a0906ca2e5d21af2e344.png"},52992:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/Zabbix_API_Test_03-5a00f5682b4bdf7c8448c8297b9d40ea.png"},58515:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-539dc0d90c8fd4caf3d5cd5162b8ded5.jpg"}}]);