"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[69944],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>u});var a=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=a.createContext({}),m=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=m(e.components);return a.createElement(s.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=m(t),u=o,h=d["".concat(s,".").concat(u)]||d[u]||c[u]||r;return t?a.createElement(h,i(i({ref:n},p),{},{components:t})):a.createElement(h,i({ref:n},p))}));function u(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=t.length,i=new Array(r);i[0]=d;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var m=2;m<r;m++)i[m]=t[m];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},74744:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>c,frontMatter:()=>r,metadata:()=>l,toc:()=>m});var a=t(87462),o=(t(67294),t(3905));const r={sidebar_position:5070,slug:"2022-01-24",title:"Getting to know the BIND9 DNS Server with Docker",authors:"mpolinowski",tags:["LINUX"]},i=void 0,l={unversionedId:"DevOps/Provisioning/2022-01-24--getting-to-know-bind9-docker/index",id:"DevOps/Provisioning/2022-01-24--getting-to-know-bind9-docker/index",title:"Getting to know the BIND9 DNS Server with Docker",description:"Shenzhen, China",source:"@site/docs/DevOps/Provisioning/2022-01-24--getting-to-know-bind9-docker/index.md",sourceDirName:"DevOps/Provisioning/2022-01-24--getting-to-know-bind9-docker",slug:"/DevOps/Provisioning/2022-01-24--getting-to-know-bind9-docker/2022-01-24",permalink:"/docs/DevOps/Provisioning/2022-01-24--getting-to-know-bind9-docker/2022-01-24",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/DevOps/Provisioning/2022-01-24--getting-to-know-bind9-docker/index.md",tags:[{label:"LINUX",permalink:"/docs/tags/linux"}],version:"current",sidebarPosition:5070,frontMatter:{sidebar_position:5070,slug:"2022-01-24",title:"Getting to know the BIND9 DNS Server with Docker",authors:"mpolinowski",tags:["LINUX"]},sidebar:"tutorialSidebar",previous:{title:"Running a DNS Server with Docker",permalink:"/docs/DevOps/Provisioning/2022-01-25--installing-bind9-docker/2022-01-25"},next:{title:"Installing a Discourse Forum on Debian Bullseye with Docker",permalink:"/docs/DevOps/Provisioning/2022-01-23--installing-discourse-docker/2022-01-23"}},s={},m=[{value:"Test Run",id:"test-run",level:2},{value:"BIND 9 Configuration",id:"bind-9-configuration",level:3}],p={toc:m};function c(e){let{components:n,...r}=e;return(0,o.kt)("wrapper",(0,a.Z)({},p,r,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Shenzhen, China",src:t(91388).Z,width:"1500",height:"671"})),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#test-run"},"Test Run"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#bind-9-configuration"},"BIND 9 Configuration"))))),(0,o.kt)("p",null,"BIND is open source software that implements the Domain Name System (DNS) protocols for the Internet. It is a reference implementation of those protocols, but it is also production-grade software, suitable for use in high-volume and high-reliability applications. ",(0,o.kt)("a",{parentName:"p",href:"https://www.isc.org/bind/"},"BIND 9")," has evolved to be a very flexible, full-featured DNS system. You can download a current version from the ",(0,o.kt)("a",{parentName:"p",href:"https://www.isc.org/download"},"ISC website"),". Or, install our updated ISC packages for Ubuntu, CentOS/Fedora, and the standard Debian package. I want to take a look at the ",(0,o.kt)("a",{parentName:"p",href:"https://hub.docker.com/r/internetsystemsconsortium/bind9"},"official Docker Image"),"."),(0,o.kt)("h2",{id:"test-run"},"Test Run"),(0,o.kt)("p",null,"Download the ",(0,o.kt)("a",{parentName:"p",href:"https://hub.docker.com/r/internetsystemsconsortium/bind9"},"official Docker Image")," and test run it with:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"docker run \\\n    --name=bind9 \\\n    --publish 53:53/udp \\\n    --publish 53:53/tcp \\\n    --publish 127.0.0.1:953:953/tcp \\\n    internetsystemsconsortium/bind9:9.18\n")),(0,o.kt)("p",null,"The container can be accessed with:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"docker exec -ti bind9 /bin/bash\n")),(0,o.kt)("p",null,"Now run the following command to check whether BIND is running:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"named -v\nBIND 9.18.0-2+ubuntu20.04.1+isc+1-Ubuntu (Stable Release)\n")),(0,o.kt)("h3",{id:"bind-9-configuration"},"BIND 9 Configuration"),(0,o.kt)("p",null,"All the configuration files of BIND 9 is in ",(0,o.kt)("inlineCode",{parentName:"p"},"/etc/bind")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"/var/cache/bind")," directory. The main configuration files are ",(0,o.kt)("inlineCode",{parentName:"p"},"named.conf"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"named.conf.default-zones"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"named.conf.local"),", and ",(0,o.kt)("inlineCode",{parentName:"p"},"named.conf.options"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"ls -la /etc/bind\n\n-rw-r--r-- 1 root root 2403 Jan 28 07:53 bind.keys\n-rw-r--r-- 1 root root  237 Jan 27 12:16 db.0\n-rw-r--r-- 1 root root  271 Jan 27 12:16 db.127\n-rw-r--r-- 1 root root  237 Jan 27 12:16 db.255\n-rw-r--r-- 1 root root  353 Jan 27 12:16 db.empty\n-rw-r--r-- 1 root root  270 Jan 27 12:16 db.local\n-rw-r--r-- 1 root bind  463 Jan 27 12:16 named.conf\n-rw-r--r-- 1 root bind  498 Jan 27 12:16 named.conf.default-zones\n-rw-r--r-- 1 root bind  165 Jan 27 12:16 named.conf.local\n-rw-r--r-- 1 root bind  846 Jan 27 12:16 named.conf.options\n-rw-r----- 1 bind bind  100 Jan 28 08:25 rndc.key\n-rw-r--r-- 1 root root 1317 Jan 27 12:16 zones.rfc1918\n")),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"/var/cache/bind")," directory contains all zone files. A zone file holds information about a certain domain name and its subdomains:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"nano /var/cache/bind/hello.example.com\n")),(0,o.kt)("p",null,"The zone file ",(0,o.kt)("inlineCode",{parentName:"p"},"hello.example.com")," defines how a domain name is resolved and what IP it is resolved to. ",(0,o.kt)("inlineCode",{parentName:"p"},"$ORIGIN")," defines a value for the @ symbol. Don\u2019t forget the dot(.) after example.com as it is required for the FQDN (Fully Qualified Domain Name)."),(0,o.kt)("p",null,"If you don\u2019t put a FQDN in BIND zone file, then the value of ",(0,o.kt)("inlineCode",{parentName:"p"},"$ORIGIN")," will be appended to the name. For example, ns1 is not a FQDN. So ns1 will be ",(0,o.kt)("inlineCode",{parentName:"p"},"ns1.example.com"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"$TTL 1d\n$ORIGIN example.com.\n\n@ IN  SOA   ns1 root (\n      1     ;Serial\n      1d    ;Refresh\n      1h    ;Retry\n      1w    ;Expire\n      1h    ;Minimum\n  )\n\n@      IN     A       172.17.0.2\n\n@      IN     NS      ns1\nns1    IN     A       172.17.0.2\n\n@       IN    NS      ns2.example.com.\nns2     IN    A       172.17.0.3\n\n@       IN    MX      10    mail\nmail    IN    A       172.17.0.4\nwww     IN    CNAME   example.com.\nftp     IN    CNAME   example.com.\n")),(0,o.kt)("p",null,"Here, ",(0,o.kt)("inlineCode",{parentName:"p"},"example.com")," is the domain name and ",(0,o.kt)("inlineCode",{parentName:"p"},"hello.example.com")," is the zone file for the domain name ",(0,o.kt)("inlineCode",{parentName:"p"},"example.com"),"."),(0,o.kt)("p",null,"Now I have to edit ",(0,o.kt)("inlineCode",{parentName:"p"},"/etc/bind/named.conf.local")," to tell bind to load the data file ",(0,o.kt)("inlineCode",{parentName:"p"},"hello.example.com")," for the zone ",(0,o.kt)("inlineCode",{parentName:"p"},"example.com"),":"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"172.17.0.2")," is the IP of the ",(0,o.kt)("inlineCode",{parentName:"p"},"bind9")," docker container:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"ip a\n\n13: eth0@if14: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP group default \n    link/ether 02:42:ac:11:00:02 brd ff:ff:ff:ff:ff:ff link-netnsid 0\n    inet 172.17.0.2/16 brd 172.17.255.255 scope global eth0\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"SOA Record"),": nameserver authoritative for a zone example.com is ns1.example.com and admin.example.com is an email address of a person responsible for this DNS zone."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"NS Records"),": two nameservers for the example.com zone are ns","[1,2]",".example.com"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"MX (")," Mail Exchange): example.com mail exachange record. Number 10 means a preference for discarding a records A \u2013 A simply means address or in other words in example.com\u2019s zone a ns1 would have an A ( address ) 192.168.0.10."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"CNAME Record")," ( Canonical Name record ): restart the query using the canonical name instead of the original name")),(0,o.kt)("p",null,"Run the following command to check the configuration:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"named-checkconf\n")),(0,o.kt)("p",null,"With this named-checkconf command no news is good news. If no output has been produced, your config files are ",(0,o.kt)("strong",{parentName:"p"},"OK"),". To check the DNS zone files we can use ",(0,o.kt)("inlineCode",{parentName:"p"},"named-checkzone")," command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"named-checkzone example.com /var/cache/bind/hello.example.com\nzone example.com/IN: loaded serial 1\nOK\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"nano /etc/bind/named.conf.local\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'zone "example.com" {\n        type master;\n        file "hello.example.com";\n};\n')),(0,o.kt)("p",null,"To restart Bind I now have to stop/start the container and reconnect. I can now use my DNS service to resolve the ",(0,o.kt)("inlineCode",{parentName:"p"},"example.com")," domain using ",(0,o.kt)("inlineCode",{parentName:"p"},"dig")," (",(0,o.kt)("inlineCode",{parentName:"p"},"apt install dnsutils"),"). ",(0,o.kt)("inlineCode",{parentName:"p"},"@172.17.0.2")," is used to tell dig to use the nameserver ",(0,o.kt)("inlineCode",{parentName:"p"},"172.17.0.2"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"dig @172.17.0.2 hello.example.com any\n\n; <<>> DiG 9.18.0-2+ubuntu20.04.1+isc+1-Ubuntu <<>> @172.17.0.2 example.com any\n; (1 server found)\n;; global options: +cmd\n;; Got answer:\n;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 9397\n;; flags: qr aa rd ra; QUERY: 1, ANSWER: 5, AUTHORITY: 0, ADDITIONAL: 4\n\n;; OPT PSEUDOSECTION:\n; EDNS: version: 0, flags:; udp: 1232\n; COOKIE: f8ea8c503c5bc7d501000000622096e24e69af6e56bf8a80 (good)\n;; QUESTION SECTION:\n;example.com.                   IN      ANY\n\n;; ANSWER SECTION:\nexample.com.            86400   IN      SOA     ns1.example.com. root.example.com. 1 86400 600 259200 86400\nexample.com.            86400   IN      A       172.17.0.2\nexample.com.            86400   IN      NS      ns1.example.com.\nexample.com.            86400   IN      NS      ns2.example.com.\nexample.com.            86400   IN      MX      10 mail.example.com.\n\n;; ADDITIONAL SECTION:\nns1.example.com.        86400   IN      A       172.17.0.2\nns2.example.com.        86400   IN      A       172.17.0.3\nmail.example.com.       86400   IN      A       172.17.0.2\n\n;; Query time: 0 msec\n;; SERVER: 172.17.0.2#53(172.17.0.2) (TCP)\n;; WHEN: Thu Mar 03 10:22:26 UTC 2022\n;; MSG SIZE  rcvd: 230\n")),(0,o.kt)("p",null,"I can use the server to resolve the ",(0,o.kt)("inlineCode",{parentName:"p"},"*.example.com")," domains using my own DNS server:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"dig @172.17.0.2 www.example.com any +noall +answer\nwww.example.com.        86400   IN      CNAME   example.com.\n\ndig @172.17.0.2 ftp.example.com any +noall +answer\nftp.example.com.        86400   IN      CNAME   example.com.\n\ndig @172.17.0.2 mail.example.com any +noall +answer\nmail.example.com.       86400   IN      A       172.17.0.4\n\ndig @172.17.0.2 ns1.example.com any +noall +answer\nns1.example.com.        86400   IN      A       172.17.0.2\n\ndig @172.17.0.2 ns2.example.com any +noall +answer\nns2.example.com.        86400   IN      A       172.17.0.3\n")))}c.isMDXComponent=!0},91388:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-bac99ee9472bf0354e396ff811a46d92.jpg"}}]);