"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[65281],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>u});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function p(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?p(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):p(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},p=Object.keys(e);for(a=0;a<p.length;a++)n=p[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(a=0;a<p.length;a++)n=p[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),s=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=s(e.components);return a.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},y=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,p=e.originalType,l=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),y=s(n),u=r,h=y["".concat(l,".").concat(u)]||y[u]||c[u]||p;return n?a.createElement(h,i(i({ref:t},d),{},{components:n})):a.createElement(h,i({ref:t},d))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var p=n.length,i=new Array(p);i[0]=y;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var s=2;s<p;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}y.displayName="MDXCreateElement"},43822:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>p,metadata:()=>o,toc:()=>s});var a=n(87462),r=(n(67294),n(3905));const p={sidebar_position:9080,slug:"2022-06-01",title:"Introduction to PyScript",authors:"mpolinowski",tags:["Python"]},i=void 0,o={unversionedId:"Development/Python/2022-06-01-python-pyscript/index",id:"Development/Python/2022-06-01-python-pyscript/index",title:"Introduction to PyScript",description:"Shen Zhen, China",source:"@site/docs/Development/Python/2022-06-01-python-pyscript/index.md",sourceDirName:"Development/Python/2022-06-01-python-pyscript",slug:"/Development/Python/2022-06-01-python-pyscript/2022-06-01",permalink:"/docs/Development/Python/2022-06-01-python-pyscript/2022-06-01",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Development/Python/2022-06-01-python-pyscript/index.md",tags:[{label:"Python",permalink:"/docs/tags/python"}],version:"current",sidebarPosition:9080,frontMatter:{sidebar_position:9080,slug:"2022-06-01",title:"Introduction to PyScript",authors:"mpolinowski",tags:["Python"]},sidebar:"tutorialSidebar",previous:{title:"Web Scraping Essentials with Python",permalink:"/docs/Development/Python/2022-06-27-python-web-scraping/2022-06-27"},next:{title:"Getting started with Python Part II",permalink:"/docs/Development/Python/2017-12-13--getting-started-with-python-part-ii/2017-12-13"}},l={},s=[{value:"Hello World",id:"hello-world",level:2},{value:"PyScript Tags",id:"pyscript-tags",level:2},{value:"Py-Script",id:"py-script",level:3},{value:"Py-Env",id:"py-env",level:3},{value:"Py-REPL",id:"py-repl",level:3},{value:"Working with Forms",id:"working-with-forms",level:2}],d={toc:s};function c(e){let{components:t,...p}=e;return(0,r.kt)("wrapper",(0,a.Z)({},d,p,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Shen Zhen, China",src:n(5636).Z,width:"1500",height:"598"})),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#hello-world"},"Hello World")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#pyscript-tags"},"PyScript Tags"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#py-script"},"Py-Script")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#py-env"},"Py-Env")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#py-repl"},"Py-REPL")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#working-with-forms"},"Working with Forms"))),(0,r.kt)("h2",{id:"hello-world"},"Hello World"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://pyscript.net/"},"PyScript")," allows you to run Python in HTML. To use PyScript you can either ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/pyscript/pyscript/archive/refs/heads/main.zip"},"download")," it and follow the instructions, or add the following lines to your page:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},'<link rel="stylesheet" href="https://pyscript.net/alpha/pyscript.css" />\n<script defer src="https://pyscript.net/alpha/pyscript.js"><\/script>\n')),(0,r.kt)("p",null,"I downloaded them and placed them inside a folder I called ",(0,r.kt)("inlineCode",{parentName:"p"},"alpha")," next to my HTML file. The ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/pyscript/pyscript/blob/main/docs/tutorials/getting-started.md"},"official Hello World")," example - modified to work offline - then looks like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},'<!DOCTYPE html>\n<html lang="en">\n  <head>\n    <meta charset="utf-8">\n    <title>PyScript Hello World</title>\n    <link rel="stylesheet" href="/alpha/pyscript.css" />\n    <script defer src="/alpha/pyscript.js"><\/script>\n  </head>\n  <body> <py-script> print(\'Hello, World!\') </py-script> </body>\n</html>\n')),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"I found that PyScript downloaded the JS map from the CDN ",(0,r.kt)("inlineCode",{parentName:"p"},"pyscript.js.map"),". This has to be placed next to the ",(0,r.kt)("inlineCode",{parentName:"p"},"pyscript.js")," file. And I also received a 404 from my browser when PyScript tried to download a file called ",(0,r.kt)("inlineCode",{parentName:"p"},"pyscript.py"),". This does not seem to be present on the CDN link (?). But I found it inside the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/pyscript/pyscript/blob/main/pyscriptjs/src/pyscript.py"},"PyScript Repo on Github")," and placed it next to the ",(0,r.kt)("inlineCode",{parentName:"p"},"pyscript.js")," file.")),(0,r.kt)("p",null,"Notice the use of the ",(0,r.kt)("inlineCode",{parentName:"p"},"<py-script>")," tag in the HTML body. This is where you'll write your Python code. In the following sections, we'll introduce the eight tags provided by PyScript."),(0,r.kt)("p",null,"When you take a look into the ",(0,r.kt)("inlineCode",{parentName:"p"},"pyscript.js")," file you will find out that it is using ",(0,r.kt)("a",{parentName:"p",href:"https://pyodide.org/en/stable/"},"Pyoide.js"),". A quick look at the homepage tells us:"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Pyodide is a port of CPython to WebAssembly/Emscripten."),(0,r.kt)("p",{parentName:"blockquote"},"Pyodide makes it possible to install and run Python packages in the browser with micropip. Any pure Python package with a wheel available on PyPI is supported. Many packages with C extensions have also been ported for use with Pyodide. These include many general-purpose packages such as regex, pyyaml, lxml and scientific Python packages including numpy, pandas, scipy, matplotlib, and scikit-learn."),(0,r.kt)("p",{parentName:"blockquote"},"Pyodide comes with a robust Javascript \u27fa Python foreign function interface so that you can freely mix these two languages in your code with minimal friction. This includes full support for error handling (throw an error in one language, catch it in the other), async/await, and much more.")),(0,r.kt)("p",null,"The CDN that is used here is, unfortunately blocked in China:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const DEFAULT_RUNTIME = {\n        src: 'https://cdn.jsdelivr.net/pyodide/v0.20.0/full/pyodide.js',\n        name: 'pyodide-default',\n        lang: 'python',\n    };\n")),(0,r.kt)("p",null,"So let me ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/pyodide/pyodide/releases"},"download the entire build")," from Github instead (151 MB which expands to ~260MB) and place it inside a folder ",(0,r.kt)("inlineCode",{parentName:"p"},"Pyodide")," next to my ",(0,r.kt)("inlineCode",{parentName:"p"},"index.html")," file. ",(0,r.kt)("a",{parentName:"p",href:"https://pyodide.org/en/stable/usage/downloading-and-deploying.html#serving-locally"},"Following the development guide")," I need to spin up a Python web server that is configured to set the correct headers from inside this folder:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"python -m http.server\n")),(0,r.kt)("p",null,"This will serve all necessary Pyodide files on ",(0,r.kt)("inlineCode",{parentName:"p"},"localhost:8000"),". So all I need to do is to change the CDN link inside the ",(0,r.kt)("inlineCode",{parentName:"p"},"pyodide.js")," file to:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const DEFAULT_RUNTIME = {\n        src: 'http://localhost:8000/pyodide.js',\n        name: 'pyodide-default',\n        lang: 'python',\n    };\n")),(0,r.kt)("p",null,"Now running two web servers - the Python server for Pyodide on port ",(0,r.kt)("inlineCode",{parentName:"p"},"8000")," and a Node.js one for my html file on port ",(0,r.kt)("inlineCode",{parentName:"p"},"3000")," I am finally able to execute the ",(0,r.kt)("strong",{parentName:"p"},"Hello World")," PyScript!"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"PyScript",src:n(31145).Z,width:"1554",height:"691"})),(0,r.kt)("h2",{id:"pyscript-tags"},"PyScript Tags"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"<py-script>"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("inlineCode",{parentName:"li"},"<py-script>")," tag allows you to write your Python code directly into your HTML page. Anything in between those tags is going to be interpreted as Python."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"<py-env>"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("inlineCode",{parentName:"li"},"<py-env>")," tag allows you to import additional Python modules and packages outside of the Python Standard Library."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"<py-repl>"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("inlineCode",{parentName:"li"},"<py-repl>")," tag starts a ",(0,r.kt)("strong",{parentName:"li"},"REPL")," (",(0,r.kt)("em",{parentName:"li"},"Read-Evaluate-Print-Loop"),") session that allows you to live execute python commands and code.")))),(0,r.kt)("h3",{id:"py-script"},"Py-Script"),(0,r.kt)("p",null,"We already saw a first example of the ",(0,r.kt)("inlineCode",{parentName:"p"},"<py-script>")," tag in the Hello World above:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},"<body> <py-script> print('Hello, World!') </py-script> </body>\n")),(0,r.kt)("p",null,"But the tag can also direct it's output to an HTML tag ID somewhere in your page:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},"<py-script output=\"output-div\"> print('Hello, World!') <py-script>\n")),(0,r.kt)("p",null,"Or it can load a Python script file from somewhere else:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},'<py-script src="/my-python-script.py"><py-script>\n')),(0,r.kt)("p",null,"You can make use of all the Standard Libraries that come with Python, e.g. ",(0,r.kt)("inlineCode",{parentName:"p"},"datetime"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},"<body>\n  <h2>Date & Time Example</h2>\n  <py-script>\n      import datetime as dt\n      Element('date').write(dt.date.today().strftime('%A %B %d, %Y'))\n  </py-script>\n  <p>Today is: <label id=\"date\"></label></p>\n</body>\n")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"PyScript",src:n(76440).Z,width:"1269",height:"702"})),(0,r.kt)("h3",{id:"py-env"},"Py-Env"),(0,r.kt)("p",null,"Use the ",(0,r.kt)("inlineCode",{parentName:"p"},"<py-env>")," tag to define your Python dependencies:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},"<py-env>\n    - numpy\n    - matplotlib=3.5.2\n    - paths:\n      - /utils.py\n</py-env>\n")),(0,r.kt)("p",null,"For example add a scatter plot to your web page with:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},'<head>\n  <py-env>\n      - numpy\n      - matplotlib\n   </py-env>\n</head>\n\n<body>\n  <py-script output="scatter">\n    import matplotlib.pyplot as plt\n    import numpy as np\n    x = np.random.randn(1000)\n    y = np.random.randn(1000)\n    fig, ax = plt.subplots()\n    ax.scatter(x,y)\n    fig\n  </py-script>\n  <div id="scatter"></div>\n</body>\n')),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"PyScript",src:n(11331).Z,width:"1265",height:"774"})),(0,r.kt)("h3",{id:"py-repl"},"Py-REPL"),(0,r.kt)("p",null,"Use the ",(0,r.kt)("inlineCode",{parentName:"p"},"<py-repl>")," tag to generate a REPL widget and place it on the page:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},'<py-repl id="interface" auto-generate="true"> </py-repl>\n')),(0,r.kt)("p",null,"This widget can also be used to output system messages to the user:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},'<py-repl id="log" auto-generate="true" std-out="output" std-err="err-div"> </py-repl>\n')),(0,r.kt)("p",null,"The REPL command interface has to be wrapped inside a ",(0,r.kt)("inlineCode",{parentName:"p"},"<pybox>")," tag to automatically add some styles - like:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},'<py-box widths="2/3;1/3">\n  <py-repl id="py-repl" auto-generate="true" std-out="repl-output" std-err="err-out"> </py-repl>\n  <div id="repl-output"></div>\n</py-box>\n<footer id="err-out"></footer>\n')),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"PyScript",src:n(31455).Z,width:"1267",height:"251"})),(0,r.kt)("h2",{id:"working-with-forms"},"Working with Forms"),(0,r.kt)("p",null,"Creating a form that takes user input and displays it on the page:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},'<py-script>\n  from js import console\n\n  def send(*args, **kwargs):\n    text = Element(\'input\').element.value\n    Element(\'output\').element.innerText = text\n</py-script>\n<input type="text" id="input" placeholder="Type something..." style="border: 2px; border: black; border-style: outset;" />\n<button id="submit" type="submit" pys-onClick="send">OK</button>\n<div id="output"></div>\n')),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"PyScript",src:n(81511).Z,width:"1264",height:"730"})))}c.isMDXComponent=!0},31145:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/PyScript_01-3e9a8a7cf2293271f3ba813ad066e75b.png"},76440:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/PyScript_02-38109fe1c5a103214ee5e475fdece476.png"},11331:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/PyScript_03-45b68895d5da2e9339c0079018baf0eb.png"},31455:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/PyScript_04-5623f31bff5d4f4ae39512a514503810.png"},81511:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/PyScript_05-3d5e2b368c226116d2ed00d2f244190c.png"},5636:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-0829cb95dd693c790a8ca59f3f351274.jpg"}}]);