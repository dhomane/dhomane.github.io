"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[37710],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>u});var o=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,i=function(e,t){if(null==e)return{};var n,o,i={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=o.createContext({}),m=function(e){var t=o.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},p=function(e){var t=m(e.components);return o.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},h=o.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),h=m(n),u=i,l=h["".concat(c,".").concat(u)]||h[u]||d[u]||a;return n?o.createElement(l,r(r({ref:t},p),{},{components:n})):o.createElement(l,r({ref:t},p))}));function u(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,r=new Array(a);r[0]=h;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:i,r[1]=s;for(var m=2;m<a;m++)r[m]=n[m];return o.createElement.apply(null,r)}return o.createElement.apply(null,n)}h.displayName="MDXCreateElement"},38303:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>m});var o=n(87462),i=(n(67294),n(3905));const a={sidebar_position:7e3,slug:"2022-07-16",title:"OpenHab - MQTT Homie Convention",authors:"mpolinowski",tags:["IoT"],image:"https://mpolinowski.github.io/img/search/mqtt.png",description:"I want to use OpenHab 3 to explore how to configure devices using the Homie Convention with the goal of adding this feature to INSTAR MQTT cameras. I already set-up the OpenHab MQTT Binding which supports the convention. So all I have to do is to add a few configuration topics to register a Homie Device with our MQTT broker using the MQTT Explorer."},r=void 0,s={unversionedId:"IoT-and-Machine-Learning/Home_Automation/2022-07-16-openhab-mqtt-homie/index",id:"IoT-and-Machine-Learning/Home_Automation/2022-07-16-openhab-mqtt-homie/index",title:"OpenHab - MQTT Homie Convention",description:"I want to use OpenHab 3 to explore how to configure devices using the Homie Convention with the goal of adding this feature to INSTAR MQTT cameras. I already set-up the OpenHab MQTT Binding which supports the convention. So all I have to do is to add a few configuration topics to register a Homie Device with our MQTT broker using the MQTT Explorer.",source:"@site/docs/IoT-and-Machine-Learning/Home_Automation/2022-07-16-openhab-mqtt-homie/index.md",sourceDirName:"IoT-and-Machine-Learning/Home_Automation/2022-07-16-openhab-mqtt-homie",slug:"/IoT-and-Machine-Learning/Home_Automation/2022-07-16-openhab-mqtt-homie/2022-07-16",permalink:"/docs/IoT-and-Machine-Learning/Home_Automation/2022-07-16-openhab-mqtt-homie/2022-07-16",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/IoT-and-Machine-Learning/Home_Automation/2022-07-16-openhab-mqtt-homie/index.md",tags:[{label:"IoT",permalink:"/docs/tags/io-t"}],version:"current",sidebarPosition:7e3,frontMatter:{sidebar_position:7e3,slug:"2022-07-16",title:"OpenHab - MQTT Homie Convention",authors:"mpolinowski",tags:["IoT"],image:"https://mpolinowski.github.io/img/search/mqtt.png",description:"I want to use OpenHab 3 to explore how to configure devices using the Homie Convention with the goal of adding this feature to INSTAR MQTT cameras. I already set-up the OpenHab MQTT Binding which supports the convention. So all I have to do is to add a few configuration topics to register a Homie Device with our MQTT broker using the MQTT Explorer."},sidebar:"tutorialSidebar",previous:{title:"MQTT Auto-Discovery - Use Node-RED to register Smarthome Devices",permalink:"/docs/IoT-and-Machine-Learning/Home_Automation/2022-07-17-node-red-for-mqtt-autodiscovery/2022-07-17"},next:{title:"Node-RED - MQTT Homie Convention",permalink:"/docs/IoT-and-Machine-Learning/Home_Automation/2022-07-15-node-red-mqtt-homie/2022-07-15"}},c={},m=[{value:"Communication according to the MQTT HOMIE Convention",id:"communication-according-to-the-mqtt-homie-convention",level:2},{value:"Adding a Thing",id:"adding-a-thing",level:2}],p={toc:m};function d(e){let{components:t,...a}=e;return(0,i.kt)("wrapper",(0,o.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Abashiri, Japan",src:n(21056).Z,width:"1500",height:"594"})),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#communication-according-to-the-mqtt-homie-convention"},"Communication according to the MQTT HOMIE Convention")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#adding-a-thing"},"Adding a Thing"))),(0,i.kt)("h2",{id:"communication-according-to-the-mqtt-homie-convention"},"Communication according to the MQTT HOMIE Convention"),(0,i.kt)("p",null,"The Homie convention defines a standardized way of how IoT devices and services announce themselves and their data on the MQTT broker. It is thereby a crucial aspect on top of the MQTT protocol for automatic discovery, configuration and usage of devices and services."),(0,i.kt)("p",null,"Devices that follow the Homie convention ",(0,i.kt)("strong",{parentName:"p"},"3.x")," and better are auto-discovered and represented by this binding and the Homie Thing."),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Details of the homie convention are available here ",(0,i.kt)("a",{parentName:"p",href:"https://homieiot.github.io/"},"Homie IoT"),".")),(0,i.kt)("p",null,"I want to use OpenHab 3 to explore how to configure devices using the ",(0,i.kt)("strong",{parentName:"p"},"Homie Convention")," with the goal of adding this feature to INSTAR MQTT cameras. I already set-up the ",(0,i.kt)("a",{parentName:"p",href:"/docs/IoT-and-Machine-Learning/Home_Automation/2020-12-02--openhab3-mqtt-binding/2020-12-02"},"OpenHab MQTT Binding")," which supports the convention. So all I have to do is to add a few configuration topics to register a ",(0,i.kt)("strong",{parentName:"p"},"Homie Device")," with our MQTT broker using the MQTT Explorer:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"# Thing Definition\nhomie/TestDevices/$homie \u2192 4.0.0\nhomie/TestDevices/$name \u2192 This is a Test\nhomie/TestDevices/$state \u2192 ready # init,ready,disconnected,sleeping,lost,alert\nhomie/TestDevices/$extensions \u2192 ''\nhomie/TestDevices/$nodes \u2192 my_thermostat\n# Channel Definition\nhomie/TestDevices/my_thermostat/$name \u2192 My Thermostat\nhomie/TestDevices/my_thermostat/$properties \u2192 temperature\n# Channel Properties\nhomie/TestDevices/my_thermostat/temperature \u2192 22 \nhomie/TestDevices/my_thermostat/temperature/$name \u2192 Temperature\nhomie/TestDevices/my_thermostat/temperature/$unit \u2192 \xb0C\nhomie/TestDevices/my_thermostat/temperature/$datatype \u2192 integer  # integer, float, boolean, string, enum, color\nhomie/TestDevices/my_thermostat/temperature/$settable \u2192 true\n")),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"OpenHab for MQTT communication according to the MQTT HOMIE convention",src:n(26378).Z,width:"1019",height:"598"})),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"It is important to add the ",(0,i.kt)("strong",{parentName:"p"},"retain")," flag to all topics. Otherwise the device will not be picked up by the Homie service!")),(0,i.kt)("h2",{id:"adding-a-thing"},"Adding a Thing"),(0,i.kt)("p",null,"Starting up OpenHab I already see that a new ",(0,i.kt)("strong",{parentName:"p"},"Thing")," was discovered and only needs to be added:"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"OpenHab for MQTT communication according to the MQTT HOMIE convention",src:n(50105).Z,width:"1052",height:"674"})),(0,i.kt)("p",null,"As configured, the ",(0,i.kt)("strong",{parentName:"p"},"Thing")," comes with temperature ",(0,i.kt)("strong",{parentName:"p"},"Channel")," configured that we just have to assign to an ",(0,i.kt)("strong",{parentName:"p"},"Item"),":"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"OpenHab for MQTT communication according to the MQTT HOMIE convention",src:n(10602).Z,width:"1071",height:"459"})),(0,i.kt)("p",null,"Create a new Item for the temperature channel:"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"OpenHab for MQTT communication according to the MQTT HOMIE convention",src:n(3272).Z,width:"1073",height:"548"})),(0,i.kt)("p",null,"And just like this, our ",(0,i.kt)("strong",{parentName:"p"},"Item")," is receiving updates from the auto-configured Homie device:"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"OpenHab for MQTT communication according to the MQTT HOMIE convention",src:n(51179).Z,width:"1339",height:"737"})),(0,i.kt)("p",null,"Navigate to ",(0,i.kt)("strong",{parentName:"p"},"Pages")," and click on the block where you would like to add the sensor read-out:"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"OpenHab for MQTT communication according to the MQTT HOMIE convention",src:n(52932).Z,width:"1032",height:"783"})),(0,i.kt)("p",null,"We can add the ",(0,i.kt)("strong",{parentName:"p"},"Item")," to a page as a ",(0,i.kt)("strong",{parentName:"p"},"Cell")," with a ",(0,i.kt)("strong",{parentName:"p"},"Trend Line Item"),":"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"OpenHab for MQTT communication according to the MQTT HOMIE convention",src:n(28527).Z,width:"1020",height:"574"})))}d.isMDXComponent=!0},26378:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/OpenHab--Homie-MQTT-Auto-Discovery_01-9197a8a6df1a548612c2257023080be6.png"},50105:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/OpenHab--Homie-MQTT-Auto-Discovery_02-20cd8cdcaed5a5edb84c20e4e19b143c.png"},10602:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/OpenHab--Homie-MQTT-Auto-Discovery_03-bfbe63908b0cfce075e6f5b6e60db081.png"},3272:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/OpenHab--Homie-MQTT-Auto-Discovery_04-50309a166570d52ebe40bf2a5d231617.png"},51179:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/OpenHab--Homie-MQTT-Auto-Discovery_05-fb9e5fb490ddfe39dd78f2e8116edd3b.png"},52932:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/OpenHab--Homie-MQTT-Auto-Discovery_06-d4b036e8d4ad599541d802e74177a865.png"},28527:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/OpenHab--Homie-MQTT-Auto-Discovery_07-58a53f0de9dfa5988c50f47937317df5.png"},21056:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-877ed54046c637e78f96cc6a07569d43.jpg"}}]);