"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[86736],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>m});var a=t(67294);function s(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){s(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function r(e,n){if(null==e)return{};var t,a,s=function(e,n){if(null==e)return{};var t,a,s={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(s[t]=e[t]);return s}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var o=a.createContext({}),p=function(e){var n=a.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=p(e.components);return a.createElement(o.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,s=e.mdxType,l=e.originalType,o=e.parentName,u=r(e,["components","mdxType","originalType","parentName"]),d=p(t),m=s,b=d["".concat(o,".").concat(m)]||d[m]||c[m]||l;return t?a.createElement(b,i(i({ref:n},u),{},{components:t})):a.createElement(b,i({ref:n},u))}));function m(e,n){var t=arguments,s=n&&n.mdxType;if("string"==typeof e||s){var l=t.length,i=new Array(l);i[0]=d;var r={};for(var o in n)hasOwnProperty.call(n,o)&&(r[o]=n[o]);r.originalType=e,r.mdxType="string"==typeof e?e:s,i[1]=r;for(var p=2;p<l;p++)i[p]=t[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},99447:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>i,default:()=>c,frontMatter:()=>l,metadata:()=>r,toc:()=>p});var a=t(87462),s=(t(67294),t(3905));const l={sidebar_position:1e4,slug:"2020-11-18",title:"Setting up a Ansible on Debian Buster",authors:"mpolinowski",tags:["LINUX","Ansible"]},i=void 0,r={unversionedId:"DevOps/Ansible/2020-11-18--ansible-on-debian-buster/index",id:"DevOps/Ansible/2020-11-18--ansible-on-debian-buster/index",title:"Setting up a Ansible on Debian Buster",description:"Shenzhen, China",source:"@site/docs/DevOps/Ansible/2020-11-18--ansible-on-debian-buster/index.md",sourceDirName:"DevOps/Ansible/2020-11-18--ansible-on-debian-buster",slug:"/DevOps/Ansible/2020-11-18--ansible-on-debian-buster/2020-11-18",permalink:"/docs/DevOps/Ansible/2020-11-18--ansible-on-debian-buster/2020-11-18",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/DevOps/Ansible/2020-11-18--ansible-on-debian-buster/index.md",tags:[{label:"LINUX",permalink:"/docs/tags/linux"},{label:"Ansible",permalink:"/docs/tags/ansible"}],version:"current",sidebarPosition:1e4,frontMatter:{sidebar_position:1e4,slug:"2020-11-18",title:"Setting up a Ansible on Debian Buster",authors:"mpolinowski",tags:["LINUX","Ansible"]},sidebar:"tutorialSidebar",previous:{title:"Ansible Playbooks",permalink:"/docs/DevOps/Ansible/2020-11-19--ansible-playbooks/2020-11-19"},next:{title:"Server Security",permalink:"/docs/category/server-security"}},o={},p=[{value:"Installing Ansible",id:"installing-ansible",level:2},{value:"Using APT Packages",id:"using-apt-packages",level:3},{value:"Via Ubuntu PPA",id:"via-ubuntu-ppa",level:3},{value:"Configuration",id:"configuration",level:2},{value:"Inventory",id:"inventory",level:2},{value:"Adding SSH Public Keys",id:"adding-ssh-public-keys",level:3},{value:"Ansible Commands",id:"ansible-commands",level:2},{value:"Ansible Facts",id:"ansible-facts",level:2},{value:"Ansible Variables",id:"ansible-variables",level:2}],u={toc:p};function c(e){let{components:n,...l}=e;return(0,s.kt)("wrapper",(0,a.Z)({},u,l,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"Shenzhen, China",src:t(78884).Z,width:"1500",height:"520"})),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"#installing-ansible"},"Installing Ansible"),(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"#using-apt-packages"},"Using APT Packages")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"#via-ubuntu-ppa"},"Via Ubuntu PPA")))),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"#configuration"},"Configuration")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"#inventory"},"Inventory"),(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"#adding-ssh-public-keys"},"Adding SSH Public Keys")))),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"#ansible-commands"},"Ansible Commands")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"#ansible-facts"},"Ansible Facts")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"#ansible-variables"},"Ansible Variables"))),(0,s.kt)("h2",{id:"installing-ansible"},"Installing Ansible"),(0,s.kt)("p",null,"You install Ansible on a control node, which then uses SSH (by default) to communicate with your managed nodes (those end devices you want to automate)."),(0,s.kt)("h3",{id:"using-apt-packages"},"Using APT Packages"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"apt install -y ansible\n")),(0,s.kt)("h3",{id:"via-ubuntu-ppa"},"Via Ubuntu PPA"),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},"Why ? EDIT: ",(0,s.kt)("strong",{parentName:"p"},"apt")," installed version ",(0,s.kt)("inlineCode",{parentName:"p"},"ansible 2.7.7"),". Via ",(0,s.kt)("strong",{parentName:"p"},"Ubuntu PPA")," I received the version ",(0,s.kt)("inlineCode",{parentName:"p"},"ansible/trusty 2.9.15"),".")),(0,s.kt)("p",null,"Add the following line to ",(0,s.kt)("inlineCode",{parentName:"p"},"/etc/apt/sources.list"),":"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"deb http://ppa.launchpad.net/ansible/ansible/ubuntu trusty main\n")),(0,s.kt)("p",null,"Then run these commands:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 93C4A3FD7BB9C367\napt update\napt install ansible\n")),(0,s.kt)("h2",{id:"configuration"},"Configuration"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"/etc/ansible\n\u251c\u2500\u2500 ansible.cfg\n\u2514\u2500\u2500 hosts\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cfg"},"[defaults]\n\ninventory      = /etc/ansible/hosts\nlibrary        = /usr/share/my_modules/\nmodule_utils   = /usr/share/my_module_utils/\nremote_tmp     = ~/.ansible/tmp\nlocal_tmp      = ~/.ansible/tmp\nplugin_filters_cfg = /etc/ansible/plugin_filters.yml\nforks          = 5\npoll_interval  = 15\nsudo_user      = root\nask_sudo_pass = True\nask_pass      = True\ntransport      = smart\nremote_port    = 22\nmodule_lang    = C\nmodule_set_locale = False\n")),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},"Ansible facts ~ Salt grains. Can be limited to speed up playbook executions")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cfg"},"# plays will gather facts by default, which contain information about\n# the remote system.\n#\n# smart - gather by default, but don't regather if already gathered\n# implicit - gather by default, turn off with gather_facts: False\n# explicit - do not gather by default, must say gather_facts: True\ngathering = implicit\n\n# This only affects the gathering done by a play's gather_facts directive,\n# by default gathering retrieves all facts subsets\n# all - gather all subsets\n# network - gather min and network facts\n# hardware - gather hardware facts (longest facts to retrieve)\n# virtual - gather min and virtual facts\n# facter - import facts from facter\n# ohai - import facts from ohai\n# You can combine them using comma (ex: network,virtual)\n# You can negate them using ! (ex: !hardware,!facter,!ohai)\n# A minimal set of facts is always gathered.\ngather_subset = all\n")),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},"Accept all SSH hosts without prompts")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cfg"},"# uncomment this to disable SSH key host checking\nhost_key_checking = False\n")),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},"Increase timeout for high latency Environments")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cfg"},"# SSH timeout\ntimeout = 10\n")),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},"Log path for debugging")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cfg"},"# logging is off by default unless this path is defined\n# if so defined, consider logrotate\nlog_path = /var/log/ansible.log\n")),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},(0,s.kt)("a",{parentName:"p",href:"https://docs.ansible.com/ansible/latest/user_guide/vault.html#vault"},"Vault")," for passwords/secrets")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cfg"},"# If set, configures the path to the Vault password file as an alternative to\n# specifying --vault-password-file on the command line.\nvault_password_file = /path/to/vault_password_file\n")),(0,s.kt)("h2",{id:"inventory"},"Inventory"),(0,s.kt)("p",null,"This is the default ansible ",(0,s.kt)("strong",{parentName:"p"},"hosts")," file It should live in ",(0,s.kt)("inlineCode",{parentName:"p"},"/etc/ansible/hosts"),":"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ini"},"# Ex 1: Ungrouped hosts, specify before any group headers.\n\ngreen.example.com\nblue.example.com\n192.168.100.1\n192.168.100.10\n\n# Ex 2: A collection of hosts belonging to the 'webservers' group\n\n[webservers]\nalpha.example.org\nbeta.example.org\n192.168.1.100\n192.168.1.110\n\n# If you have multiple hosts following a pattern you can specify\n# them like this:\n\nwww[001:006].example.com\ndb-[99:101]-node.example.com\n")),(0,s.kt)("p",null,"I am going delete this templates data and add the server I am running Ansible on as my test node:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ini"},"[test]\n192.168.2.111 ansible_user=root\n")),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},"I am specifying the user that I want to be used for the SSH login. I don't have to do this in my case as the default user is set to ",(0,s.kt)("inlineCode",{parentName:"p"},"root")," anyhow - see configuration file above.")),(0,s.kt)("h3",{id:"adding-ssh-public-keys"},"Adding SSH Public Keys"),(0,s.kt)("p",null,"We can try to verify that everything is set up correctly by pinging all hosts inside our inventory:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},'ansible -m ping all\n\n192.168.2.111 | UNREACHABLE! => {\n    "changed": false,\n    "msg": "Failed to connect to the host via ssh: root@192.168.2.111: Permission denied (publickey,password).",\n    "unreachable": true\n}\n')),(0,s.kt)("p",null,"This fails, since I did not specify the SSH password anywhere. You can now use ",(0,s.kt)("a",{parentName:"p",href:"https://docs.ansible.com/ansible/latest/user_guide/vault.html#vault"},"Vault")," to add your password. Or generate a RSA key pair to have Ansible use the public key to login:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"ssh-keygen -t rsa -b 2048\n\nGenerating public/private rsa key pair.\nEnter file in which to save the key (/root/.ssh/id_rsa):\nEnter passphrase (empty for no passphrase):\nEnter same passphrase again:\nYour identification has been saved in /root/.ssh/id_rsa\nYour public key has been saved in /root/.ssh/id_rsa.pub\n")),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},"I left the passphrase empty")),(0,s.kt)("p",null,"I set the permissions for both the pub key and the ",(0,s.kt)("inlineCode",{parentName:"p"},".ssh")," folder:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"chmod 0400 $HOME/.ssh/id_rsa.pub\nchmod 600 ~/.ssh/authorized_keys\nchmod 0700 $HOME/.ssh/\n")),(0,s.kt)("p",null,"I can now copy the generated ID to my host server (in my case they just happen to be the same PC):"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"ssh-copy-id root@192.168.2.111\n\n/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: \"/root/.ssh/id_rsa.pub\"\nThe authenticity of host '192.168.2.111 (192.168.2.111)' can't be established.\nECDSA key fingerprint is SHA256:6bWFxW4mJV/KVpdBFf8N0grugHHNqttF3jyX3cmVI9s.\nAre you sure you want to continue connecting (yes/no/[fingerprint])? yes\n\n/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys\nroot@192.168.2.111's password:\n\nNumber of key(s) added: 1\n\nNow try logging into the machine, with:   \"ssh 'root@192.168.2.111'\"\nand check to make sure that only the key(s) you wanted were added.\n")),(0,s.kt)("p",null,"This will add the key of my Ansible minion to the Ansible master. You can verify that the key was added by executing:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"cat ~/.ssh/authorized_keys\n")),(0,s.kt)("p",null,"Running the ping again should now give us the desired result - ",(0,s.kt)("strong",{parentName:"p"},"SUCCESS"),":"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},'ansible all -m ping\n\n192.168.2.111 | SUCCESS => {\n    "ansible_facts": {\n        "discovered_interpreter_python": "/usr/bin/python3"\n    },\n    "changed": false,\n    "ping": "pong"\n}\n')),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},"We can also ping our generated host group ",(0,s.kt)("inlineCode",{parentName:"p"},"ansible test -m ping")," or a single host with ",(0,s.kt)("inlineCode",{parentName:"p"},"ansible 192.168.2.111 -m ping"),". Since I only have this one host all of those give me the identical result.")),(0,s.kt)("h2",{id:"ansible-commands"},"Ansible Commands"),(0,s.kt)("p",null,"An example for an ad-hoc Ansible command is the ping command we used above - they all follow the same format:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"ansible <target> -m <module> -a <arguments>\n")),(0,s.kt)("p",null,"As an example, we can copy a file to the remote location using the ",(0,s.kt)("strong",{parentName:"p"},"Copy")," module (you can check all available modules with ",(0,s.kt)("inlineCode",{parentName:"p"},"ansible-doc -l")," - or get information about the specific module ",(0,s.kt)("inlineCode",{parentName:"p"},"ansible-doc copy"),"):"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},'ansible 192.168.2.111 -m copy -a "src=/tmp/test1 dest=/tmp/test2"\n\n192.168.2.111 | CHANGED => {\n    "ansible_facts": {\n        "discovered_interpreter_python": "/usr/bin/python3"\n    },\n    "changed": true,\n    "checksum": "da39a3ee5e6b4b0d3255bfef95601890afd80709",\n    "dest": "/tmp/test2",\n    "gid": 0,\n    "group": "root",\n    "md5sum": "d41d8cd98f00b204e9800998ecf8427e",\n    "mode": "0644",\n    "owner": "root",\n    "size": 0,\n    "src": "/root/.ansible/tmp/ansible-tmp-1605901636.6985757-12382-77236351905118/source",\n    "state": "file",\n    "uid": 0\n}\n')),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},"Make sure that the ",(0,s.kt)("inlineCode",{parentName:"p"},"test1")," file exist on your Ansible master - ",(0,s.kt)("inlineCode",{parentName:"p"},"touch /tmp/test1"),". After running the Copy command you should see both a ",(0,s.kt)("inlineCode",{parentName:"p"},"test1")," and ",(0,s.kt)("inlineCode",{parentName:"p"},"test2")," file inside the ",(0,s.kt)("inlineCode",{parentName:"p"},"/tmp")," directory (as minion and master are on the same host).")),(0,s.kt)("h2",{id:"ansible-facts"},"Ansible Facts"),(0,s.kt)("p",null,"Just like Salt with ",(0,s.kt)("strong",{parentName:"p"},"Grains")," Ansible collects system information as ",(0,s.kt)("strong",{parentName:"p"},"Facts"),":"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'ansible 192.168.2.111 -m setup\n\n192.168.2.111 | SUCCESS => {\n    "ansible_facts": {\n        "ansible_all_ipv4_addresses": [\n            "172.17.0.1",\n            "172.18.0.1",\n            "192.168.2.111"\n        ],\n        "ansible_all_ipv6_addresses": [\n            "fe80::e020:79ff:fed8:34a4",\n        ],\n        "ansible_apparmor": {\n            "status": "enabled"\n        }\n        "module_setup": true\n    },\n\n\n    ...\n\n    "changed": false\n}\n')),(0,s.kt)("h2",{id:"ansible-variables"},"Ansible Variables"),(0,s.kt)("p",null,"Variables naming convention - alphanumeric, cannot start with a number and contain ",(0,s.kt)("inlineCode",{parentName:"p"},"-"),", ",(0,s.kt)("inlineCode",{parentName:"p"},"&"),", ",(0,s.kt)("inlineCode",{parentName:"p"},"%")," or SPACES."),(0,s.kt)("p",null,"Variables can be used to hold configurations that you might have to change over time or are different between different hosts - a global variable that is than used by playbook, e.g. a port for a service. The variables can be defined in the Ansible Inventory, inside a playbook or inside a separate file that can be included into a playbook."),(0,s.kt)("p",null,"I already defined a variable inside the host inventory by setting the ansible user to ",(0,s.kt)("inlineCode",{parentName:"p"},"root"),":"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ini"},"[test]\n192.168.2.111 ansible_user=root\n")))}c.isMDXComponent=!0},78884:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-2215e4912b7f3d1beed1d8b83bac94aa.jpg"}}]);