"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[87647],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=c(n),d=a,f=u["".concat(l,".").concat(d)]||u[d]||h[d]||o;return n?r.createElement(f,s(s({ref:t},p),{},{components:n})):r.createElement(f,s({ref:t},p))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=u;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var c=2;c<o;c++)s[c]=n[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},14196:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var r=n(87462),a=(n(67294),n(3905));const o={sidebar_position:9010,slug:"2022-10-09",title:"Python - Flask Frontend to generate Elasticsearch Docs from Sitemaps",authors:"mpolinowski",tags:["Python","Elasticsearch"],description:"Use Flask to build a web frontend for your Python App."},s=void 0,i={unversionedId:"Development/Python/2022-10-09-python-flask-elasticsearch/index",id:"Development/Python/2022-10-09-python-flask-elasticsearch/index",title:"Python - Flask Frontend to generate Elasticsearch Docs from Sitemaps",description:"Use Flask to build a web frontend for your Python App.",source:"@site/docs/Development/Python/2022-10-09-python-flask-elasticsearch/index.md",sourceDirName:"Development/Python/2022-10-09-python-flask-elasticsearch",slug:"/Development/Python/2022-10-09-python-flask-elasticsearch/2022-10-09",permalink:"/docs/Development/Python/2022-10-09-python-flask-elasticsearch/2022-10-09",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Development/Python/2022-10-09-python-flask-elasticsearch/index.md",tags:[{label:"Python",permalink:"/docs/tags/python"},{label:"Elasticsearch",permalink:"/docs/tags/elasticsearch"}],version:"current",sidebarPosition:9010,frontMatter:{sidebar_position:9010,slug:"2022-10-09",title:"Python - Flask Frontend to generate Elasticsearch Docs from Sitemaps",authors:"mpolinowski",tags:["Python","Elasticsearch"],description:"Use Flask to build a web frontend for your Python App."},sidebar:"tutorialSidebar",previous:{title:"Python - The Filesystem",permalink:"/docs/Development/Python/2022-10-10-python-filesystem/2022-10-10"},next:{title:"Python - PyQt Desktop App",permalink:"/docs/Development/Python/2022-10-08-python-desktop-app/2022-10-08"}},l={},c=[{value:"Generate a Single Entry",id:"generate-a-single-entry",level:2},{value:"Process Sitemaps to retrieve all URLS",id:"process-sitemaps-to-retrieve-all-urls",level:2},{value:"Generate Entries for an List of URLs",id:"generate-entries-for-an-list-of-urls",level:2}],p={toc:c};function h(e){let{components:t,...o}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Sham Sui Po, Hong Kong",src:n(52070).Z,width:"1500",height:"548"})),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#generate-a-single-entry"},"Generate a Single Entry")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#process-sitemaps-to-retrieve-all-urls"},"Process Sitemaps to retrieve all URLS")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#generate-entries-for-an-list-of-urls"},"Generate Entries for an List of URLs"))),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/mpolinowski/py-flask-app/tree/master/elastic_index_generator"},"Github Repository")),(0,a.kt)("p",null,"I ",(0,a.kt)("a",{parentName:"p",href:"/docs/Development/Python/2022-10-07-python-docusaurus-elasticsearch/2022-10-07"},"wrote a small Python script")," that helps me to generate Elasticsearch docs from web urls. Here I am adding an web frontend to it using Flask."),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"To use this script you have to ",(0,a.kt)("a",{parentName:"p",href:"/docs/Development/Python/2022-10-07-python-docusaurus-elasticsearch/2022-10-07"},"adjust it according to your own Elasticsearch mapping and page elements"),".")),(0,a.kt)("h2",{id:"generate-a-single-entry"},"Generate a Single Entry"),(0,a.kt)("p",null,"Paste in a URL and generate an JSON object from it that you can use with Kibana to add the page to Elasticsearch:"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Python - Deploying a Web Frontends with Flask",src:n(433).Z,width:"1220",height:"744"})),(0,a.kt)("h2",{id:"process-sitemaps-to-retrieve-all-urls"},"Process Sitemaps to retrieve all URLS"),(0,a.kt)("p",null,"Process a pages XML Sitemap and extract all URLs:"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Python - Deploying a Web Frontends with Flask",src:n(19631).Z,width:"1215",height:"455"})),(0,a.kt)("h2",{id:"generate-entries-for-an-list-of-urls"},"Generate Entries for an List of URLs"),(0,a.kt)("p",null,"Use the generated file from above and generated Elasticsearch entries for every page in your website:"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Python - Deploying a Web Frontends with Flask",src:n(47527).Z,width:"1216",height:"444"})))}h.isMDXComponent=!0},433:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/Python-Flask-Elasticsearch_01-3d02ab1f7df5a58f10ff6254ef43d1be.png"},19631:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/Python-Flask-Elasticsearch_02-ef9ba1c2bc9872fbba1ca888c8b5ec1d.png"},47527:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/Python-Flask-Elasticsearch_03-a2000e465f0c37589d3af2d97407fe75.png"},52070:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-5f44d483789c3ce79f05418f930f5cd2.jpg"}}]);