"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[79672],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>h});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=n.createContext({}),c=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},u=function(e){var t=c(e.components);return n.createElement(o.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),m=c(a),h=r,d=m["".concat(o,".").concat(h)]||m[h]||p[h]||i;return a?n.createElement(d,l(l({ref:t},u),{},{components:a})):n.createElement(d,l({ref:t},u))}));function h(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=m;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s.mdxType="string"==typeof e?e:r,l[1]=s;for(var c=2;c<i;c++)l[c]=a[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},34366:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var n=a(87462),r=(a(67294),a(3905));const i={sidebar_position:3920,slug:"2022-12-04",title:"Hashicorp Consul - Vault Cert Management Part 1",authors:"mpolinowski",tags:["Consul","Vault","LINUX"],description:"Set-up Vault to be the Certificate Authority"},l=void 0,s={unversionedId:"DevOps/Hashicorp/2022-12-04-hashicorp-consul-vault-certificates-part1/index",id:"DevOps/Hashicorp/2022-12-04-hashicorp-consul-vault-certificates-part1/index",title:"Hashicorp Consul - Vault Cert Management Part 1",description:"Set-up Vault to be the Certificate Authority",source:"@site/docs/DevOps/Hashicorp/2022-12-04-hashicorp-consul-vault-certificates-part1/index.md",sourceDirName:"DevOps/Hashicorp/2022-12-04-hashicorp-consul-vault-certificates-part1",slug:"/DevOps/Hashicorp/2022-12-04-hashicorp-consul-vault-certificates-part1/2022-12-04",permalink:"/docs/DevOps/Hashicorp/2022-12-04-hashicorp-consul-vault-certificates-part1/2022-12-04",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/DevOps/Hashicorp/2022-12-04-hashicorp-consul-vault-certificates-part1/index.md",tags:[{label:"Consul",permalink:"/docs/tags/consul"},{label:"Vault",permalink:"/docs/tags/vault"},{label:"LINUX",permalink:"/docs/tags/linux"}],version:"current",sidebarPosition:3920,frontMatter:{sidebar_position:3920,slug:"2022-12-04",title:"Hashicorp Consul - Vault Cert Management Part 1",authors:"mpolinowski",tags:["Consul","Vault","LINUX"],description:"Set-up Vault to be the Certificate Authority"},sidebar:"tutorialSidebar",previous:{title:"Hashicorp Consul - Vault Cert Management Part 2",permalink:"/docs/DevOps/Hashicorp/2022-12-05-hashicorp-consul-vault-certificates-part2/2022-12-05"},next:{title:"Hashicorp Vault - Installation 2023",permalink:"/docs/DevOps/Hashicorp/2022-12-03-hashicorp-vault-installation/2022-12-03"}},o={},c=[{value:"Generate mTLS Certificates using Vault",id:"generate-mtls-certificates-using-vault",level:2},{value:"Prerequisites",id:"prerequisites",level:3},{value:"Configure Vault&#39;s PKI secrets engine",id:"configure-vaults-pki-secrets-engine",level:2},{value:"Configure Vault as Consul&#39;s CA",id:"configure-vault-as-consuls-ca",level:2},{value:"Generate a Server Certificate",id:"generate-a-server-certificate",level:2},{value:"Configure Consul",id:"configure-consul",level:2}],u={toc:c};function p(e){let{components:t,...i}=e;return(0,r.kt)("wrapper",(0,n.Z)({},u,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Shen Zhen, China",src:a(62988).Z,width:"2230",height:"839"})),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#generate-mtls-certificates-using-vault"},"Generate mTLS Certificates using Vault"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#prerequisites"},"Prerequisites")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#configure-vaults-pki-secrets-engine"},"Configure Vault's PKI secrets engine")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#configure-vault-as-consuls-ca"},"Configure Vault as Consul's CA")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#generate-a-server-certificate"},"Generate a Server Certificate")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#configure-consul"},"Configure Consul"))),(0,r.kt)("h2",{id:"generate-mtls-certificates-using-vault"},"Generate mTLS Certificates using Vault"),(0,r.kt)("p",null,"You can use Vault's PKI Secrets Engine to generate and renew dynamic X.509 certificates with consul-template to rotate your certificates. This method enables each agent in the Consul datacenter to have a unique certificate with a relatively short time-to-live (ttl) that is automatically rotated, which allows you to safely and securely scale your datacenter while using mutual TLS (mTLS)."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Generate mTLS Certificates using Vault",src:a(35255).Z,width:"992",height:"442"})),(0,r.kt)("h3",{id:"prerequisites"},"Prerequisites"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Consul")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Vault")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"consul-template")," (",(0,r.kt)("a",{parentName:"li",href:"https://developer.hashicorp.com/consul/tutorials/developer-configuration/consul-template"},"installation"),")")),(0,r.kt)("h2",{id:"configure-vaults-pki-secrets-engine"},"Configure Vault's PKI secrets engine"),(0,r.kt)("p",null,"In order to communicate with the Vault server, you will need to set the address and token:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'export VAULT_ADDR="http://127.0.0.1:8200"\nexport VAULT_TOKEN="root"\n')),(0,r.kt)("p",null,"Enable Vault's PKI secrets engine at the pki path:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"vault secrets enable pki\n")),(0,r.kt)("p",null,"Tune the PKI secrets engine to issue certificates with a maximum time-to-live (TTL) of 87600 hours:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"vault secrets tune -max-lease-ttl=87600h pki\n")),(0,r.kt)("h2",{id:"configure-vault-as-consuls-ca"},"Configure Vault as Consul's CA"),(0,r.kt)("p",null,"Generate the root certificate and save the certificate in ",(0,r.kt)("inlineCode",{parentName:"p"},"CA_cert.crt"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'vault write -field=certificate pki/root/generate/internal \\\n        common_name="consul.consul" \\\n        ttl=87600h > CA_cert.crt\n')),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"Careful"),": The official documentation uses the ",(0,r.kt)("inlineCode",{parentName:"p"},"common_name")," for the default datacenter ",(0,r.kt)("inlineCode",{parentName:"p"},"consul.dc1"),". I use the name ",(0,r.kt)("inlineCode",{parentName:"p"},"consul")," here and have to change the variable ",(0,r.kt)("inlineCode",{parentName:"p"},"consul.consul")," accordingly. Otherwise the cert verification will fail. This name will be used a couple of times in the following commands - you need to change all of them according to your setup.")),(0,r.kt)("p",null,"This generates a new self-signed CA certificate and private key. Vault will automatically revoke the generated root at the end of its lease period (TTL); the CA certificate will sign its own Certificate Revocation List (CRL):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"openssl x509 -text -noout -in CA_cert.crt\n\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number:\n            74:...\n        Signature Algorithm: sha256WithRSAEncryption\n        Issuer: CN = consul.consul\n        Validity\n            Not Before: Dec  4 10:57:22 2022 GMT\n            Not After : Dec  1 10:57:52 2032 GMT\n        Subject: CN = consul.consul\n        Subject Public Key Info:\n            Public Key Algorithm: rsaEncryption\n                RSA Public-Key: (2048 bit)\n                Modulus:\n                    00:...\n                Exponent: 65537 (0x10001)\n        X509v3 extensions:\n            X509v3 Key Usage: critical\n                Certificate Sign, CRL Sign\n            X509v3 Basic Constraints: critical\n                CA:TRUE\n            X509v3 Subject Key Identifier: \n                59:...\n            X509v3 Authority Key Identifier: \n                keyid:59:...\n\n            X509v3 Subject Alternative Name: \n                DNS:consul.consul\n    Signature Algorithm: sha256WithRSAEncryption\n         1a:...\n")),(0,r.kt)("p",null,"Configure the CA and CRL URLs:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'vault write pki/config/urls \\\n        issuing_certificates="http://127.0.0.1:8200/v1/pki/ca" \\\n        crl_distribution_points="http://127.0.0.1:8200/v1/pki/crl"\n')),(0,r.kt)("p",null,"Enable the PKI secrets engine at the ",(0,r.kt)("inlineCode",{parentName:"p"},"pki_int")," path:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"vault secrets enable -path=pki_int pki\n")),(0,r.kt)("p",null,"Tune the ",(0,r.kt)("inlineCode",{parentName:"p"},"pki_int")," secrets engine to issue certificates with a maximum time-to-live (TTL) of 43800 hours:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"vault secrets tune -max-lease-ttl=43800h pki_int\n")),(0,r.kt)("p",null,"Request an intermediate certificate signing request (CSR) and save request as ",(0,r.kt)("inlineCode",{parentName:"p"},"pki_intermediate.csr"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"vault write -format=json pki_int/intermediate/generate/internal common_name=\"consul.consul Intermediate Authority\" | jq -r '.data.csr' > pki_intermediate.csr\n")),(0,r.kt)("p",null,"Sign the CSR and import the certificate into Vault:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"vault write -format=json pki/root/sign-intermediate csr=@pki_intermediate.csr format=pem_bundle ttl=\"43800h\" | jq -r '.data.certificate' > intermediate.cert.pem\n")),(0,r.kt)("p",null,"Once the CSR is signed, and the root CA returns a certificate, it can be imported back into Vault:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"vault write pki_int/intermediate/set-signed certificate=@intermediate.cert.pem\n")),(0,r.kt)("p",null,"Create a Vault role - a logical name that maps to a policy used to generate credentials:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'vault write pki_int/roles/consul-consul allowed_domains="consul.consul" allow_subdomains=true generate_lease=true max_ttl="720h"\n')),(0,r.kt)("h2",{id:"generate-a-server-certificate"},"Generate a Server Certificate"),(0,r.kt)("p",null,"You can test the pki engine is configured correctly by generating your first certificate:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'vault write pki_int/issue/consul-consul common_name="server.consul.consul" ttl="24h" | tee consul_certs.txt\n')),(0,r.kt)("p",null,"The TTL for this certificate is being set to 24 hours, meaning that this certificate will be valid only for 24 hours. "),(0,r.kt)("h2",{id:"configure-consul"},"Configure Consul"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/DevOps/Hashicorp/2022-12-05-hashicorp-consul-vault-certificates-part2/2022-12-05"},"Hashicorp Consul - Vault Cert Management Part 2"))))}p.isMDXComponent=!0},35255:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/Hashicorp_Vault_for_Consul_01-224fb17ac00e984cf047c7a49984c389.png"},62988:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-6c1edb088dfea3a7d39f8eebb8e9dc23.jpg"}}]);