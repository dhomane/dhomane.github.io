"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[83840],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>u});var o=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=o.createContext({}),c=function(e){var t=o.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=c(e.components);return o.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,p=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),m=c(n),u=r,h=m["".concat(p,".").concat(u)]||m[u]||d[u]||a;return n?o.createElement(h,i(i({ref:t},l),{},{components:n})):o.createElement(h,i({ref:t},l))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=m;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var c=2;c<a;c++)i[c]=n[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},32987:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var o=n(87462),r=(n(67294),n(3905));const a={sidebar_position:4030,slug:"2022-10-23",title:"Hashicorp Nomad - Working with Ports",authors:"mpolinowski",tags:["Nomad","Consul","LINUX"],description:"How to declare Ports to be used in Nomad Job files"},i=void 0,s={unversionedId:"DevOps/Hashicorp/2022-10-23-hashicorp-nomad-ports/index",id:"DevOps/Hashicorp/2022-10-23-hashicorp-nomad-ports/index",title:"Hashicorp Nomad - Working with Ports",description:"How to declare Ports to be used in Nomad Job files",source:"@site/docs/DevOps/Hashicorp/2022-10-23-hashicorp-nomad-ports/index.md",sourceDirName:"DevOps/Hashicorp/2022-10-23-hashicorp-nomad-ports",slug:"/DevOps/Hashicorp/2022-10-23-hashicorp-nomad-ports/2022-10-23",permalink:"/docs/DevOps/Hashicorp/2022-10-23-hashicorp-nomad-ports/2022-10-23",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/DevOps/Hashicorp/2022-10-23-hashicorp-nomad-ports/index.md",tags:[{label:"Nomad",permalink:"/docs/tags/nomad"},{label:"Consul",permalink:"/docs/tags/consul"},{label:"LINUX",permalink:"/docs/tags/linux"}],version:"current",sidebarPosition:4030,frontMatter:{sidebar_position:4030,slug:"2022-10-23",title:"Hashicorp Nomad - Working with Ports",authors:"mpolinowski",tags:["Nomad","Consul","LINUX"],description:"How to declare Ports to be used in Nomad Job files"},sidebar:"tutorialSidebar",previous:{title:"Hashicorp Nomad to set up an OSTicket Helpdesk - Part II",permalink:"/docs/DevOps/Hashicorp/2022-10-25-hashicorp-nomad-for-osticket-part-ii/2022-10-25"},next:{title:"Hashicorp Nomad - Working with Consul Connect",permalink:"/docs/DevOps/Hashicorp/2022-10-23-hashicorp-consul-connect/2022-10-23"}},p={},c=[{value:"Ports in Nomad Job Files",id:"ports-in-nomad-job-files",level:2},{value:"Dynamic, Mapped, Static",id:"dynamic-mapped-static",level:3}],l={toc:c};function d(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,o.Z)({},l,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Shen Zhen, China",src:n(14186).Z,width:"2230",height:"839"})),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#ports-in-nomad-job-files"},"Ports in Nomad Job Files"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#dynamic-mapped-static"},"Dynamic, Mapped, Static"))))),(0,r.kt)("h2",{id:"ports-in-nomad-job-files"},"Ports in Nomad Job Files"),(0,r.kt)("h3",{id:"dynamic-mapped-static"},"Dynamic, Mapped, Static"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'job "example" {\n  group "example-group" {\n    network {\n      # Dynamic ports\n      port "foo" {}\n      port "bar" {}\n      # Mapped ports\n      port "http"  { to = 80 }\n      port "https" { to = 443 }\n      # Static ports\n      port "lb" { static = 8080 }\n    }\n\n    task "task-1" {\n      driver = "docker"\n      config {\n\n        ...\n \n        ports = [\n          "foo",\n          "http",\n        ]\n      }\n    }\n\n    task "task-2" {\n      driver = "docker"\n      config {\n\n        ...\n \n        ports = [\n          "bar",\n          "https",\n        ]\n      }\n    }\n\n    task "task-3" {\n      driver = "docker"\n      config {\n\n        ...\n \n        ports = [\n          "lb",\n        ]\n      }\n    }\n  }\n}\n')))}d.isMDXComponent=!0},14186:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-6c1edb088dfea3a7d39f8eebb8e9dc23.jpg"}}]);