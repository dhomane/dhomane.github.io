"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[50828],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>d});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),g=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=g(e.components);return a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=g(r),d=n,m=u["".concat(s,".").concat(d)]||u[d]||p[d]||i;return r?a.createElement(m,o(o({ref:t},c),{},{components:r})):a.createElement(m,o({ref:t},c))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,o=new Array(i);o[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:n,o[1]=l;for(var g=2;g<i;g++)o[g]=r[g];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}u.displayName="MDXCreateElement"},56938:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>g});var a=r(87462),n=(r(67294),r(3905));const i={sidebar_position:9990,slug:"2020-02-02",title:"Running Gitlab as Docker Registry",authors:"mpolinowski",tags:["LINUX","Docker","Gitlab"]},o=void 0,l={unversionedId:"DevOps/GitOps/2020-02-02--docker-images-in-gitlab/index",id:"DevOps/GitOps/2020-02-02--docker-images-in-gitlab/index",title:"Running Gitlab as Docker Registry",description:"Siem Reap, Cambodia",source:"@site/docs/DevOps/GitOps/2020-02-02--docker-images-in-gitlab/index.mdx",sourceDirName:"DevOps/GitOps/2020-02-02--docker-images-in-gitlab",slug:"/DevOps/GitOps/2020-02-02--docker-images-in-gitlab/2020-02-02",permalink:"/docs/DevOps/GitOps/2020-02-02--docker-images-in-gitlab/2020-02-02",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/DevOps/GitOps/2020-02-02--docker-images-in-gitlab/index.mdx",tags:[{label:"LINUX",permalink:"/docs/tags/linux"},{label:"Docker",permalink:"/docs/tags/docker"},{label:"Gitlab",permalink:"/docs/tags/gitlab"}],version:"current",sidebarPosition:9990,frontMatter:{sidebar_position:9990,slug:"2020-02-02",title:"Running Gitlab as Docker Registry",authors:"mpolinowski",tags:["LINUX","Docker","Gitlab"]},sidebar:"tutorialSidebar",previous:{title:"Installing Gitlab on Ubuntu Server 20.04",permalink:"/docs/DevOps/GitOps/2020-08-01--gitlab-install-on-ubuntu-server/2020-08-01"},next:{title:"Running Gitlab in Podman on CentOS8",permalink:"/docs/DevOps/GitOps/2020-02-01--gitlab-in-podman-on-centos8/2020-02-01"}},s={},g=[{value:"Install the Local Docker Registry",id:"install-the-local-docker-registry",level:2},{value:"Copy an image from Docker Hub to your Registry",id:"copy-an-image-from-docker-hub-to-your-registry",level:3},{value:"Podman and insecure Registries",id:"podman-and-insecure-registries",level:3},{value:"Pushing Images into your local Registry",id:"pushing-images-into-your-local-registry",level:3},{value:"Pulling Images from your local Registry",id:"pulling-images-from-your-local-registry",level:3},{value:"Enable the Container Registry in Gitlab",id:"enable-the-container-registry-in-gitlab",level:2}],c={toc:g};function p(e){let{components:t,...i}=e;return(0,n.kt)("wrapper",(0,a.Z)({},c,i,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"Siem Reap, Cambodia",src:r(28502).Z,width:"1500",height:"593"})),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#install-the-local-docker-registry"},"Install the Local Docker Registry"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#copy-an-image-from-docker-hub-to-your-registry"},"Copy an image from Docker Hub to your Registry")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#podman-and-insecure-registries"},"Podman and insecure Registries")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#pushing-images-into-your-local-registry"},"Pushing Images into your local Registry")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#pulling-images-from-your-local-registry"},"Pulling Images from your local Registry")))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#enable-the-container-registry-in-gitlab"},"Enable the Container Registry in Gitlab"))),(0,n.kt)("h2",{id:"install-the-local-docker-registry"},"Install the Local Docker Registry"),(0,n.kt)("p",null,"Use a command like the following to start the ",(0,n.kt)("a",{parentName:"p",href:"https://docs.docker.com/registry/deploying/"},"registry container"),":"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"podman run -d -p 5000:5000 --restart=always --name registry registry:2\n\npodman ps -a\n\nCONTAINER ID  IMAGE                         STATUS             PORTS                   NAMES\n1a14df139a2f  docker.io/library/registry:2  Up 28 seconds ago  0.0.0.0:5000->5000/tcp  registry\n")),(0,n.kt)("h3",{id:"copy-an-image-from-docker-hub-to-your-registry"},"Copy an image from Docker Hub to your Registry"),(0,n.kt)("p",null,"Pull the ubuntu:16.04 image from Docker Hub:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"podman pull hello-world:latest\n")),(0,n.kt)("p",null,"Tag the image as ",(0,n.kt)("inlineCode",{parentName:"p"},"localhost:5000/my-world"),". This creates an additional tag for the existing image. When the first part of the tag is a hostname and port, Docker interprets this as the location of a registry, when pushing."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"podman tag hello-world:latest localhost:5000/my-world\n\npodman images\n\nREPOSITORY\ndocker.io/gitlab/gitlab-ce     latest            8065f4b39790   4 days ago     2.06 GB\ndocker.io/library/registry     2                 708bc6af7e5e   3 months ago   26.3 MB\nlocalhost:5000/my-world        latest            bf756fb1ae65   4 months ago   20 kB\n")),(0,n.kt)("h3",{id:"podman-and-insecure-registries"},"Podman and insecure Registries"),(0,n.kt)("p",null,"We can add our local and non-TLS protected Docker Registry through the system-wide registries configuration file. On CentOS 8, that file resides at ",(0,n.kt)("inlineCode",{parentName:"p"},"/etc/containers/registries.conf"),":"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-cfg"},"# The only valid categories are: 'registries.search', 'registries.insecure',\n# and 'registries.block'.\n\n[registries.search]\nregistries = ['docker.io', 'quay.io']\n\n# If you need to access insecure registries, add the registry's fully-qualified name.\n# An insecure registry is one that does not have a valid SSL certificate or only does HTTP.\n[registries.insecure]\nregistries = ['localhost:5000']\n")),(0,n.kt)("p",null,"Here you can see I have two registries defined under the search header and a single registry defined as an insecure registry - our local registry on port ",(0,n.kt)("inlineCode",{parentName:"p"},"5000"),". The registries under the search header are registries that Podman will search when you try to find an image that is not fully-qualified."),(0,n.kt)("h3",{id:"pushing-images-into-your-local-registry"},"Pushing Images into your local Registry"),(0,n.kt)("p",null,"Push the image to the local registry running at ",(0,n.kt)("inlineCode",{parentName:"p"},"localhost:5000"),":"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"podman push localhost:5000/my-world\n\nGetting image source signatures\nCopying blob 9c27e219663c done\nCopying config bf756fb1ae done\nWriting manifest to image destination\nStoring signatures\n")),(0,n.kt)("h3",{id:"pulling-images-from-your-local-registry"},"Pulling Images from your local Registry"),(0,n.kt)("p",null,"Remove the locally-cached ",(0,n.kt)("inlineCode",{parentName:"p"},"hello-world:latest")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"localhost:5000/my-world")," images, so that you can test pulling the image from your registry. This does not remove the ",(0,n.kt)("inlineCode",{parentName:"p"},"localhost:5000/my-world")," image from your registry."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"podman rmi hello-world:latest\npodman rmi localhost:5000/my-world\n\npodman images\n")),(0,n.kt)("p",null,"Pull the ",(0,n.kt)("inlineCode",{parentName:"p"},"localhost:5000/my-world")," image from your local registry:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"podman pull localhost:5000/my-world\n\npodman run localhost:5000/my-world\n")),(0,n.kt)("h2",{id:"enable-the-container-registry-in-gitlab"},"Enable the Container Registry in Gitlab"),(0,n.kt)("p",null,"After the installation is complete, you will have to configure the Registry\u2019s settings in gitlab.yml in order to enable it."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"nano /srv/gitlab/data/gitlab-rails/etc/gitlab.yml\n")),(0,n.kt)("p",null,"Scroll down to the ",(0,n.kt)("strong",{parentName:"p"},"Container Registry")," section and add the following information:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-yml"},"## Container Registry\nregistry:\n  enabled: true\n  host: centos8.fritz.box\n  port: 5005\n  api_url: http://localhost:5000/\n  key: /var/opt/gitlab/gitlab-rails/etc/gitlab-registry.key\n  path: shared/registry\n  issuer: omnibus-gitlab-issuer\n")),(0,n.kt)("p",null,"Your ",(0,n.kt)("inlineCode",{parentName:"p"},"nano /srv/gitlab/config/gitlab.rb")," should contain the Registry URL as well as the path to the existing TLS certificate and key used by GitLab:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ruby"},"##########################################################################\n## Container Registry settings\n##! Docs: https://docs.gitlab.com/ee/administration/container_registry.html\n###########################################################################\n\nregistry_external_url 'http://centos8.fritz.box:5005'\n")),(0,n.kt)("p",null,"Your local registry is now available from inside your repository:"),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"Running Gitlab as Docker Registry",src:r(36e3).Z,width:"1050",height:"474"})))}p.isMDXComponent=!0},36e3:(e,t,r)=>{r.d(t,{Z:()=>a});const a=r.p+"assets/images/Gitlab_Docker_Registry_01-b11e20bf228506ca73fc95a57a52d844.png"},28502:(e,t,r)=>{r.d(t,{Z:()=>a});const a=r.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-dcf82d0887cf51644642c20d8ed1b9ba.jpg"}}]);