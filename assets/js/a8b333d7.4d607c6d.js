"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[4046],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>m});var a=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=a.createContext({}),s=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=s(e.components);return a.createElement(l.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},h=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),h=s(t),m=o,d=h["".concat(l,".").concat(m)]||h[m]||u[m]||r;return t?a.createElement(d,i(i({ref:n},c),{},{components:t})):a.createElement(d,i({ref:n},c))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=t.length,i=new Array(r);i[0]=h;var p={};for(var l in n)hasOwnProperty.call(n,l)&&(p[l]=n[l]);p.originalType=e,p.mdxType="string"==typeof e?e:o,i[1]=p;for(var s=2;s<r;s++)i[s]=t[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}h.displayName="MDXCreateElement"},39951:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>p,toc:()=>s});var a=t(87462),o=(t(67294),t(3905));const r={sidebar_position:7060,slug:"2020-12-01",title:"Trying out OpenHAB 3 in Docker",authors:"mpolinowski",tags:["LINUX","Smarthome","IoT"]},i=void 0,p={unversionedId:"IoT-and-Machine-Learning/Home_Automation/2020-12-01--openhab3-in-docker/index",id:"IoT-and-Machine-Learning/Home_Automation/2020-12-01--openhab3-in-docker/index",title:"Trying out OpenHAB 3 in Docker",description:"Shenzhen, China",source:"@site/docs/IoT-and-Machine-Learning/Home_Automation/2020-12-01--openhab3-in-docker/index.md",sourceDirName:"IoT-and-Machine-Learning/Home_Automation/2020-12-01--openhab3-in-docker",slug:"/IoT-and-Machine-Learning/Home_Automation/2020-12-01--openhab3-in-docker/2020-12-01",permalink:"/docs/IoT-and-Machine-Learning/Home_Automation/2020-12-01--openhab3-in-docker/2020-12-01",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/IoT-and-Machine-Learning/Home_Automation/2020-12-01--openhab3-in-docker/index.md",tags:[{label:"LINUX",permalink:"/docs/tags/linux"},{label:"Smarthome",permalink:"/docs/tags/smarthome"},{label:"IoT",permalink:"/docs/tags/io-t"}],version:"current",sidebarPosition:7060,frontMatter:{sidebar_position:7060,slug:"2020-12-01",title:"Trying out OpenHAB 3 in Docker",authors:"mpolinowski",tags:["LINUX","Smarthome","IoT"]},sidebar:"tutorialSidebar",previous:{title:"OpenHAB 3 MQTT Binding",permalink:"/docs/IoT-and-Machine-Learning/Home_Automation/2020-12-02--openhab3-mqtt-binding/2020-12-02"},next:{title:"Testing a new REST API in Node-RED",permalink:"/docs/IoT-and-Machine-Learning/Home_Automation/2020-09-16--testing-new-rest-api-with-nodered/2020-09-16"}},l={},s=[{value:"Pulling the Docker Image",id:"pulling-the-docker-image",level:2},{value:"Preparing the System",id:"preparing-the-system",level:2},{value:"Running the Container",id:"running-the-container",level:2},{value:"Automating Docker setup using Ansible",id:"automating-docker-setup-using-ansible",level:2},{value:"Maintenance",id:"maintenance",level:2},{value:"Clean Up when things go wrong",id:"clean-up-when-things-go-wrong",level:3},{value:"OpenHAB CLI",id:"openhab-cli",level:3}],c={toc:s};function u(e){let{components:n,...r}=e;return(0,o.kt)("wrapper",(0,a.Z)({},c,r,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Shenzhen, China",src:t(20252).Z,width:"1500",height:"676"})),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#pulling-the-docker-image"},"Pulling the Docker Image")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#preparing-the-system"},"Preparing the System")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#running-the-container"},"Running the Container")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#automating-docker-setup-using-ansible"},"Automating Docker setup using Ansible")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#maintenance"},"Maintenance"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#clean-up-when-things-go-wrong"},"Clean Up when things go wrong")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#openhab-cli"},"OpenHAB CLI"))))),(0,o.kt)("h2",{id:"pulling-the-docker-image"},"Pulling the Docker Image"),(0,o.kt)("p",null,"The OpenHAB 3 image is available on ",(0,o.kt)("a",{parentName:"p",href:"https://hub.docker.com/r/openhab/openhab/tags?page=1&ordering=last_updated"},"Docker Hub"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"docker pull openhab/openhab:3.1.0-snapshot-alpine\n")),(0,o.kt)("h2",{id:"preparing-the-system"},"Preparing the System"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"groupadd -g 9001 openhab\nuseradd -g 9001 openhab\nusermod -a -G openhab myownuser\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"mkdir -p /opt/openhab/{openhab_addons,openhab_conf,openhab_userdata}\nchmod -R 775 /opt/openhab\n")),(0,o.kt)("h2",{id:"running-the-container"},"Running the Container"),(0,o.kt)("p",null,"From your commandline:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"docker run \\\n        --name openhab \\\n        --net=host \\\n        --privileged \\\n         --rm \\\n        -v /etc/localtime:/etc/localtime:ro \\\n        -v /opt/openhab/openhab_addons:/openhab/addons \\\n        -v /opt/openhab/openhab_conf:/openhab/conf \\\n        -v /opt/openhab/openhab_userdata:/openhab/userdata \\\n        -d \\\n        openhab/openhab:3.1.0-snapshot-alpine\n")),(0,o.kt)("p",null,"In ",(0,o.kt)("strong",{parentName:"p"},"docker-compose"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'version: "3.8"\n\nservices:\n  openhab:\n    image: "openhab/openhab:3.1.0-snapshot-alpine"\n    restart: always\n    network_mode: host\n    volumes:\n      - "/etc/localtime:/etc/localtime:ro"\n      - "/etc/timezone:/etc/timezone:ro"\n      - "/opt/openhab/openhab_addons:/openhab/addons"\n      - "/opt/openhab/openhab_conf:/openhab/conf"\n      - "/opt/openhab/openhab_userdata:/openhab/userdata"\n    environment:\n      OPENHAB_HTTP_PORT: "8181"\n      OPENHAB_HTTPS_PORT: "8443"\n      EXTRA_JAVA_OPTS: "-Duser.timezone=Europe/Berlin"\n')),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"I changed the HTTP port to 8181 - as I am already using the default port 8080 for a different service. Make sure the port is accessible from your LAN: ",(0,o.kt)("inlineCode",{parentName:"p"},"ufw allow 8181/tcp"))),(0,o.kt)("h2",{id:"automating-docker-setup-using-ansible"},"Automating Docker setup using Ansible"),(0,o.kt)("p",null,"You can test it by running:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"ansible-playbook -i mycontainerhost, -t openhab run-containers.yml\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yml"},'- name: OpenHAB v3 Container\n  hosts: test\n  gather_facts: no\n  \n  tasks:\n\n  - name: Run OpenHab Container\n    tags: openhab\n    docker_container:\n      name: openhab\n      image: openhab/openhab:3.1.0-snapshot-alpine\n      state: started\n      detach: yes\n      interactive: yes\n      tty: yes\n      ports:\n        - 8181:8080\n        - 8101:8101\n        - 5007:5007\n      volumes:\n        - /etc/localtime:/etc/localtime:ro\n        - /etc/timezone:/etc/timezone:ro\n        - /opt/openhab/addons:/openhab/addons\n        - /opt/openhab/conf:/openhab/conf\n        - /opt/openhab/userdata:/openhab/userdata\n      keep_volumes: yes\n      hostname: openhab.localnet\n      memory: 512m\n      pull: true\n      restart_policy: unless-stopped\n      env:\n        EXTRA_JAVA_OPTS="-Duser.timezone=Europe/Berlin"\n')),(0,o.kt)("p",null,"Run the playbook and visit the IP address of your server on port ",(0,o.kt)("strong",{parentName:"p"},"8181"),":"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Trying out OpenHAB 3 in Docker",src:t(25128).Z,width:"790",height:"479"})),(0,o.kt)("p",null,"Choose the bindings that you will need to be installed:"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Trying out OpenHAB 3 in Docker",src:t(25051).Z,width:"886",height:"636"})),(0,o.kt)("h2",{id:"maintenance"},"Maintenance"),(0,o.kt)("h3",{id:"clean-up-when-things-go-wrong"},"Clean Up when things go wrong"),(0,o.kt)("p",null,"Delete the contents of ",(0,o.kt)("inlineCode",{parentName:"p"},"/opt/openhab/userdata/cache")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"/opt/openhab/userdata/tmp")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"rm -rf /opt/openhab/userdata/cache\nrm -rf /opt/openhab/userdata/tmp\n")),(0,o.kt)("h3",{id:"openhab-cli"},"OpenHAB CLI"),(0,o.kt)("p",null,"Access the OpenHAB command line tool inside the Docker container from your host system:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"docker exec -it openhab /openhab/runtime/bin/client\n\nLogging in as openhab\nPassword:  PASSWORD IS habopen\n\n                           _   _     _     ____  \n   ___   ___   ___   ___  | | | |   / \\   | __ ) \n  / _ \\ / _ \\ / _ \\ / _ \\ | |_| |  / _ \\  |  _ \\ \n | (_) | (_) |  __/| | | ||  _  | / ___ \\ | |_) )\n  \\___/|  __/ \\___/|_| |_||_| |_|/_/   \\_\\|____/ \n       |_|       3.1.0-SNAPSHOT - Build #2099\n\nUse '<tab>' for a list of available commands\nand '[cmd] --help' for help on a specific command.\nTo exit, use '<ctrl-d>' or 'logout'.\n\nopenhab> \n")),(0,o.kt)("p",null,"Accessing the OpenHab logs from the CLI:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"openhab> log:tail\n")))}u.isMDXComponent=!0},25128:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/OpenHAB3_Docker_01-eacbf07e983b3d58e74a26449f6afbc5.png"},25051:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/OpenHAB3_Docker_02-d776f724f95a081184d64c9f5a412374.png"},20252:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-e12a28f9c35f9ae6e3540843545ced7e.jpg"}}]);