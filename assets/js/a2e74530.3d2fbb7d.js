"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[23883],{3905:(e,o,t)=>{t.d(o,{Zo:()=>c,kt:()=>m});var n=t(67294);function a(e,o,t){return o in e?Object.defineProperty(e,o,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[o]=t,e}function r(e,o){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);o&&(n=n.filter((function(o){return Object.getOwnPropertyDescriptor(e,o).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var o=1;o<arguments.length;o++){var t=null!=arguments[o]?arguments[o]:{};o%2?r(Object(t),!0).forEach((function(o){a(e,o,t[o])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(o){Object.defineProperty(e,o,Object.getOwnPropertyDescriptor(t,o))}))}return e}function l(e,o){if(null==e)return{};var t,n,a=function(e,o){if(null==e)return{};var t,n,a={},r=Object.keys(e);for(n=0;n<r.length;n++)t=r[n],o.indexOf(t)>=0||(a[t]=e[t]);return a}(e,o);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)t=r[n],o.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=n.createContext({}),d=function(e){var o=n.useContext(s),t=o;return e&&(t="function"==typeof e?e(o):i(i({},o),e)),t},c=function(e){var o=d(e.components);return n.createElement(s.Provider,{value:o},e.children)},p={inlineCode:"code",wrapper:function(e){var o=e.children;return n.createElement(n.Fragment,{},o)}},u=n.forwardRef((function(e,o){var t=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=d(t),m=a,f=u["".concat(s,".").concat(m)]||u[m]||p[m]||r;return t?n.createElement(f,i(i({ref:o},c),{},{components:t})):n.createElement(f,i({ref:o},c))}));function m(e,o){var t=arguments,a=o&&o.mdxType;if("string"==typeof e||a){var r=t.length,i=new Array(r);i[0]=u;var l={};for(var s in o)hasOwnProperty.call(o,s)&&(l[s]=o[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var d=2;d<r;d++)i[d]=t[d];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}u.displayName="MDXCreateElement"},52209:(e,o,t)=>{t.r(o),t.d(o,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>r,metadata:()=>l,toc:()=>d});var n=t(87462),a=(t(67294),t(3905));const r={sidebar_position:9e3,slug:"2019-06-14",title:"Downloading Docker Images for Offline Use",authors:"mpolinowski",tags:["LINUX","Docker"]},i=void 0,l={unversionedId:"DevOps/Linux/2019-06-14--download-and-save-docker-image/index",id:"DevOps/Linux/2019-06-14--download-and-save-docker-image/index",title:"Downloading Docker Images for Offline Use",description:"Mustang, Nepal",source:"@site/docs/DevOps/Linux/2019-06-14--download-and-save-docker-image/index.mdx",sourceDirName:"DevOps/Linux/2019-06-14--download-and-save-docker-image",slug:"/DevOps/Linux/2019-06-14--download-and-save-docker-image/2019-06-14",permalink:"/docs/DevOps/Linux/2019-06-14--download-and-save-docker-image/2019-06-14",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/DevOps/Linux/2019-06-14--download-and-save-docker-image/index.mdx",tags:[{label:"LINUX",permalink:"/docs/tags/linux"},{label:"Docker",permalink:"/docs/tags/docker"}],version:"current",sidebarPosition:9e3,frontMatter:{sidebar_position:9e3,slug:"2019-06-14",title:"Downloading Docker Images for Offline Use",authors:"mpolinowski",tags:["LINUX","Docker"]},sidebar:"tutorialSidebar",previous:{title:"Working with TMUX",permalink:"/docs/DevOps/Linux/2019-06-17--working-with-tmux/2019-06-17"},next:{title:"Setting up Docker on CentOS 8",permalink:"/docs/DevOps/Linux/2019-06-07--installing-docker-on-centos8/2019-06-07"}},s={},d=[{value:"Why would you want to do it?",id:"why-would-you-want-to-do-it",level:2},{value:"Docker Save",id:"docker-save",level:2},{value:"How to use offline Docker Images on CentOS8/Podman",id:"how-to-use-offline-docker-images-on-centos8podman",level:2}],c={toc:d};function p(e){let{components:o,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},c,r,{components:o,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Mustang, Nepal",src:t(29695).Z,width:"1500",height:"709"})),(0,a.kt)("h2",{id:"why-would-you-want-to-do-it"},"Why would you want to do it?"),(0,a.kt)("p",null,"I am planning to use a Windows or macOS Computer that is connected to a company VPN to download images from the Docker Hub. Those images need to be transfered to a local LINUX server (behind a firewall that makes downloading large file impossible, due to constant slow downs and disconnects) that cannot be connected to the VPN."),(0,a.kt)("h2",{id:"docker-save"},"Docker Save"),(0,a.kt)("p",null,"For this I want to use the ",(0,a.kt)("a",{parentName:"p",href:"https://docs.docker.com/engine/reference/commandline/save/"},"docker save")," function to download the ",(0,a.kt)("a",{parentName:"p",href:"https://hub.docker.com/_/hello-world"},"hello-world")," image:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"docker pull hello-world\ndocker save -o hello-world_image.docker hello-world\n")),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Offline Docker Images",src:t(22070).Z,width:"977",height:"637"})),(0,a.kt)("p",null,"Now transfer the file to the offline computer and load the image from the file:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo docker load -i hello-world_image.docker\nsudo docker run hello-world\n")),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Offline Docker Images",src:t(42184).Z,width:"735",height:"477"})),(0,a.kt)("h2",{id:"how-to-use-offline-docker-images-on-centos8podman"},"How to use offline Docker Images on CentOS8/Podman"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"load")," command is identical in Podman. But I keep having the problem that with the ",(0,a.kt)("inlineCode",{parentName:"p"},"podman run")," command the system want's to download the latest version of the image first before running it (I think I should have pulled a specific version instead of using the ",(0,a.kt)("inlineCode",{parentName:"p"},":latest"),")."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"podman load -i hello-world_image.docker\npodman run hello-world\npodman images\npodman container commit hello IMAGE:ID\npodman run hello\n")))}p.isMDXComponent=!0},22070:(e,o,t)=>{t.d(o,{Z:()=>n});const n=t.p+"assets/images/Offline_docker_Images_01-8d8a5a9bc97965e1d8b41bd059ce15fe.png"},42184:(e,o,t)=>{t.d(o,{Z:()=>n});const n=t.p+"assets/images/Offline_docker_Images_02-f551e7236270d70d840fccfe0a509f7d.png"},29695:(e,o,t)=>{t.d(o,{Z:()=>n});const n=t.p+"assets/images/photo-456t66d_64567fh6dgjkhg4_d-05e4ca4b2685e1f5308f29eb7cf8f506.jpg"}}]);