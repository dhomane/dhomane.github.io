"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[23915],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>c});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),i=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=i(e.components);return r.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),m=i(n),c=a,h=m["".concat(s,".").concat(c)]||m[c]||d[c]||o;return n?r.createElement(h,l(l({ref:t},u),{},{components:n})):r.createElement(h,l({ref:t},u))}));function c(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=m;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p.mdxType="string"==typeof e?e:a,l[1]=p;for(var i=2;i<o;i++)l[i]=n[i];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},10948:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>p,toc:()=>i});var r=n(87462),a=(n(67294),n(3905));const o={sidebar_position:9020,slug:"2022-10-08",title:"Python - Deploying a Web App with Flask",authors:"mpolinowski",tags:["Python"],description:"Use Flask to build a web frontend for your Python App."},l=void 0,p={unversionedId:"Development/Python/2022-10-08-python-flask-app/index",id:"Development/Python/2022-10-08-python-flask-app/index",title:"Python - Deploying a Web App with Flask",description:"Use Flask to build a web frontend for your Python App.",source:"@site/docs/Development/Python/2022-10-08-python-flask-app/index.md",sourceDirName:"Development/Python/2022-10-08-python-flask-app",slug:"/Development/Python/2022-10-08-python-flask-app/2022-10-08",permalink:"/docs/Development/Python/2022-10-08-python-flask-app/2022-10-08",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Development/Python/2022-10-08-python-flask-app/index.md",tags:[{label:"Python",permalink:"/docs/tags/python"}],version:"current",sidebarPosition:9020,frontMatter:{sidebar_position:9020,slug:"2022-10-08",title:"Python - Deploying a Web App with Flask",authors:"mpolinowski",tags:["Python"],description:"Use Flask to build a web frontend for your Python App."},sidebar:"tutorialSidebar",previous:{title:"Python - PyQt Desktop App",permalink:"/docs/Development/Python/2022-10-08-python-desktop-app/2022-10-08"},next:{title:"Python - Build an Elasticsearch Index for your Docusaurus Blog",permalink:"/docs/Development/Python/2022-10-07-python-docusaurus-elasticsearch/2022-10-07"}},s={},i=[{value:"Setup",id:"setup",level:2},{value:"Hello World",id:"hello-world",level:3},{value:"Interacting with your HTML",id:"interacting-with-your-html",level:2}],u={toc:i};function d(e){let{components:t,...o}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Sham Sui Po, Hong Kong",src:n(56850).Z,width:"1500",height:"548"})),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#setup"},"Setup"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#hello-world"},"Hello World")))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#interacting-with-your-html"},"Interacting with your HTML"))),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/mpolinowski/py-flask-app/tree/master/hello_world"},"Github Repository")),(0,a.kt)("h2",{id:"setup"},"Setup"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://flask.palletsprojects.com/en/2.2.x/"},"Flask")," is a lightweight WSGI web application framework. It is designed to make getting started quick and easy, with the ability to scale up to complex applications."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"pip install flask\n")),(0,a.kt)("h3",{id:"hello-world"},"Hello World"),(0,a.kt)("p",null,"Flask expects you to put your HTML pages inside a folder ",(0,a.kt)("inlineCode",{parentName:"p"},"templates"),". Add a simple ",(0,a.kt)("inlineCode",{parentName:"p"},"index.html")," page and outside of this folder add a ",(0,a.kt)("inlineCode",{parentName:"p"},"main.py"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py"},"from flask import Flask, render_template, request\n\napp = Flask(__name__)\n\n@app.route('/')\n\ndef home():\n    return render_template('index.html')\n\napp.run(host='192.168.2.112')\n")),(0,a.kt)("p",null,"Visit ",(0,a.kt)("inlineCode",{parentName:"p"},"localhost")," or your servers IP address on ",(0,a.kt)("strong",{parentName:"p"},"Port 5000")," to see the content of your HTML page."),(0,a.kt)("h2",{id:"interacting-with-your-html"},"Interacting with your HTML"),(0,a.kt)("p",null,"Now we have a static website that is being served by Flask. But there is no interface between the web frontend and the Python backend. For this we have to create a ",(0,a.kt)("strong",{parentName:"p"},"POST Route")," in Flask that allows us to send data from the frontend to the backend:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py"},"@app.route('/', methods=['GET'])\ndef home_get():\n    return render_template('index.html')\n\n@app.route('/', methods=['POST'])\ndef home_post():\n    return render_template('index.html')\n")),(0,a.kt)("p",null,"Now we can add a ",(0,a.kt)("strong",{parentName:"p"},"Form Element")," to our website that can perform a ",(0,a.kt)("strong",{parentName:"p"},"Post Request")," to send the content of it's input fields to our Flask backend:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-html"},'<form method="POST">\n    <div><input name="first"/></div>\n    <div><input name="sec"/></div>\n    <p><strong></strong></p>\n    <button>Multiply!</button>\n</form>\n')),(0,a.kt)("p",null,"So now - whenever the page is loaded we receive a ",(0,a.kt)("strong",{parentName:"p"},"GET")," request. But pressing the multiply button will send a ",(0,a.kt)("strong",{parentName:"p"},"POST")," request:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'[10/Oct/2022 12:16:55] "GET / HTTP/1.1" 200 -\n[10/Oct/2022 12:16:57] "POST / HTTP/1.1" 200 -\n')),(0,a.kt)("p",null,"When we ",(0,a.kt)("inlineCode",{parentName:"p"},"print(request.form)")," inside ",(0,a.kt)("inlineCode",{parentName:"p"},"home_post()")," we can now see that we are receiving the values we put in to the frontend in our Flask backend:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"ImmutableMultiDict([('first', '5'), ('second', '5')])\n")),(0,a.kt)("p",null,"We can grab them from there and write them into variables:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py"},"def home_post():\n    # print(request.form)\n    val1 = request.form['first']\n    val2 = request.form['second']\n    return render_template('index.html')\n")),(0,a.kt)("p",null,"And now we can manipulate them however we like and print the result:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py"},"result = float(val1) * float(val2)\n    print(result)\n")),(0,a.kt)("p",null,"To output the result to the web frontend we can add ",(0,a.kt)("strong",{parentName:"p"},"JinJa")," variables:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-html"},"<p>Result: <strong>{{result}}</strong></p>\n")),(0,a.kt)("p",null,"And use the return statement of our function to return this value:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py"},"return render_template('index.html', result=result)\n")))}d.isMDXComponent=!0},56850:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-5f44d483789c3ce79f05418f930f5cd2.jpg"}}]);