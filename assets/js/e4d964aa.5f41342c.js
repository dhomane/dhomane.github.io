"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[9698],{3905:(e,n,a)=>{a.d(n,{Zo:()=>p,kt:()=>u});var t=a(67294);function o(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function r(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function i(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?r(Object(a),!0).forEach((function(n){o(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function s(e,n){if(null==e)return{};var a,t,o=function(e,n){if(null==e)return{};var a,t,o={},r=Object.keys(e);for(t=0;t<r.length;t++)a=r[t],n.indexOf(a)>=0||(o[a]=e[a]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)a=r[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var l=t.createContext({}),d=function(e){var n=t.useContext(l),a=n;return e&&(a="function"==typeof e?e(n):i(i({},n),e)),a},p=function(e){var n=d(e.components);return t.createElement(l.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},m=t.forwardRef((function(e,n){var a=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=d(a),u=o,h=m["".concat(l,".").concat(u)]||m[u]||c[u]||r;return a?t.createElement(h,i(i({ref:n},p),{},{components:a})):t.createElement(h,i({ref:n},p))}));function u(e,n){var a=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=a.length,i=new Array(r);i[0]=m;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var d=2;d<r;d++)i[d]=a[d];return t.createElement.apply(null,i)}return t.createElement.apply(null,a)}m.displayName="MDXCreateElement"},23897:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>r,metadata:()=>s,toc:()=>d});var t=a(87462),o=(a(67294),a(3905));const r={sidebar_position:6040,slug:"2022-05-15",title:"Hashicorp Nomad Refresher",authors:"mpolinowski",tags:["Nomad","LINUX"]},i=void 0,s={unversionedId:"DevOps/Hashicorp/2022-05-15-hashicorp-nomad-refresher/index",id:"DevOps/Hashicorp/2022-05-15-hashicorp-nomad-refresher/index",title:"Hashicorp Nomad Refresher",description:"Shen Zhen, China",source:"@site/docs/DevOps/Hashicorp/2022-05-15-hashicorp-nomad-refresher/index.md",sourceDirName:"DevOps/Hashicorp/2022-05-15-hashicorp-nomad-refresher",slug:"/DevOps/Hashicorp/2022-05-15-hashicorp-nomad-refresher/2022-05-15",permalink:"/docs/DevOps/Hashicorp/2022-05-15-hashicorp-nomad-refresher/2022-05-15",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/DevOps/Hashicorp/2022-05-15-hashicorp-nomad-refresher/index.md",tags:[{label:"Nomad",permalink:"/docs/tags/nomad"},{label:"LINUX",permalink:"/docs/tags/linux"}],version:"current",sidebarPosition:6040,frontMatter:{sidebar_position:6040,slug:"2022-05-15",title:"Hashicorp Nomad Refresher",authors:"mpolinowski",tags:["Nomad","LINUX"]},sidebar:"tutorialSidebar",previous:{title:"Hashicorp Nomad Dojo",permalink:"/docs/DevOps/Hashicorp/2022-05-16-hashicorp-dojo-nomad-starter/2022-05-16"},next:{title:"Hashicorp Consul in Production",permalink:"/docs/DevOps/Hashicorp/2021-10-11--hashicorp-consul-in-production/2021-10-11"}},l={},d=[{value:"Installation",id:"installation",level:2},{value:"Single Server Dev Environment",id:"single-server-dev-environment",level:2},{value:"Run an Agent in Dev Mode",id:"run-an-agent-in-dev-mode",level:3},{value:"Generate and Run a Sample Job",id:"generate-and-run-a-sample-job",level:3},{value:"Update the Application Version",id:"update-the-application-version",level:2},{value:"Nomad Web Interface",id:"nomad-web-interface",level:2},{value:"Forward the Service through SSH (optional)",id:"forward-the-service-through-ssh-optional",level:3},{value:"Cleaning Up",id:"cleaning-up",level:2}],p={toc:d};function c(e){let{components:n,...r}=e;return(0,o.kt)("wrapper",(0,t.Z)({},p,r,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Shen Zhen, China",src:a(23214).Z,width:"2230",height:"839"})),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#installation"},"Installation")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#single-server-dev-environment"},"Single Server Dev Environment"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#run-an-agent-in-dev-mode"},"Run an Agent in Dev Mode")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#generate-and-run-a-sample-job"},"Generate and Run a Sample Job")))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#update-the-application-version"},"Update the Application Version")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#nomad-web-interface"},"Nomad Web Interface"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#forward-the-service-through-ssh-optional"},"Forward the Service through SSH (optional)")))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#cleaning-up"},"Cleaning Up"))),(0,o.kt)("h2",{id:"installation"},"Installation"),(0,o.kt)("p",null,"Installation of ",(0,o.kt)("a",{parentName:"p",href:"https://www.nomadproject.io/docs"},"Hashicorp Nomad")," on Debian Bullseye - ",(0,o.kt)("a",{parentName:"p",href:"https://www.nomadproject.io/downloads"},"other options here"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -\nsudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"\n')),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("strong",{parentName:"p"},"ERROR"),": ",(0,o.kt)("inlineCode",{parentName:"p"},"zsh: command not found: apt-add-repository")," => ",(0,o.kt)("inlineCode",{parentName:"p"},"apt install software-properties-common"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"apt update && apt install nomad\n")),(0,o.kt)("p",null,"To verify Nomad was installed correctly, try the ",(0,o.kt)("inlineCode",{parentName:"p"},"nomad")," command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"nomad --version\nNomad v1.3.1 (2b054e38e91af964d1235faa98c286ca3f527e56)\n")),(0,o.kt)("h2",{id:"single-server-dev-environment"},"Single Server Dev Environment"),(0,o.kt)("h3",{id:"run-an-agent-in-dev-mode"},"Run an Agent in Dev Mode"),(0,o.kt)("p",null,"To run the Nomad Agent in Server/Minion mode (single server) use the following command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"nomad agent -dev -bind 0.0.0.0 -log-level INFO\n")),(0,o.kt)("p",null,"Verify the Node status in a second terminal:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"nomad node status\n\nID        DC   Name  Class   Drain  Eligibility  Status\n39904696  dc1  Mike  <none>  false  eligible     ready\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"nomad server members\n\nName         Address     Port  Status  Leader  Raft Version  Build  Datacenter  Region\nMike.global  172.21.0.1  4648  alive   true    3             1.3.1  dc1         global\n")),(0,o.kt)("h3",{id:"generate-and-run-a-sample-job"},"Generate and Run a Sample Job"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"nomad job init\n\nExample job file written to example.nomad\n")),(0,o.kt)("p",null,"This ",(0,o.kt)("a",{parentName:"p",href:"https://gist.github.com/mpolinowski/fd4c2ec2d75533fd85192f675ec1af8e"},"example job file")," declares a single task named redis, which uses the Docker driver to run the a Redis container. Register the example job now by running the job with the nomad job run command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"nomad job run example.nomad\n\nDeployed\nTask Group  Desired  Placed  Healthy  Unhealthy  Progress Deadline\ncache       1        1       1        0          2022-06-03T14:31:11+02:00\n")),(0,o.kt)("p",null,"Use the nomad job status command to inspect the status of your job:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"nomad job status example\n\nID            = example\nName          = example\nSubmit Date   = 2022-06-03T14:20:55+02:00\nType          = service\nPriority      = 50\nDatacenters   = dc1\nNamespace     = default\nStatus        = running\nPeriodic      = false\nParameterized = false\n\n...\n\nAllocations\nID        Node ID   Task Group  Version  Desired  Status   Created    Modified\na31e4ff7  39904696  cache       0        run      running  2m17s ago  2m ago\n")),(0,o.kt)("p",null,"When Nomad runs a job it creates allocations based on the task groups within the job. To inspect an allocation, use the ",(0,o.kt)("inlineCode",{parentName:"p"},"nomad alloc status")," command. Replace the allocation ID in the command with the allocation ID you received when running nomad job status example in the preceding step"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'nomad alloc status a31e4ff7\n\nID                  = a31e4ff7-86bf-d408-c1a4-bca717c2ab8d\nEval ID             = c13d695b\nName                = example.cache[0]\nNode ID             = 39904696\nNode Name           = Mike\nJob ID              = example\nJob Version         = 0\nClient Status       = running\nClient Description  = Tasks are running\nDesired Status      = run\nDesired Description = <none>\nCreated             = 7m22s ago\nModified            = 7m5s ago\nDeployment ID       = b992ce48\nDeployment Health   = healthy\n\nAllocation Addresses\nLabel  Dynamic  Address\n*db    yes      127.0.0.1:20763 -> 6379\n\nTask "redis" is "running"\nTask Resources\nCPU        Memory           Disk     Addresses\n3/500 MHz  6.8 MiB/256 MiB  300 MiB  \n\nTask Events:\nStarted At     = 2022-06-03T12:21:01Z\nFinished At    = N/A\nTotal Restarts = 0\nLast Restart   = N/A\n\nRecent Events:\nTime                       Type        Description\n2022-06-03T14:21:01+02:00  Started     Task started by client\n2022-06-03T14:20:55+02:00  Driver      Downloading image\n2022-06-03T14:20:55+02:00  Task Setup  Building Task Directory\n2022-06-03T14:20:55+02:00  Received    Task received by client\n')),(0,o.kt)("p",null,"Run the ",(0,o.kt)("inlineCode",{parentName:"p"},"nomad alloc logs")," command to fetch the logs from the redis task in your allocation, again substituting your allocation ID into the proper place in the command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"nomad alloc logs a31e4ff7 redis\n\n1:C 03 Jun 12:21:01.821 # Warning: no config file specified, using the default config. In order to specify a config file use redis-server /path/to/redis.conf\n                _._                                                  \n           _.-``__ ''-._                                             \n      _.-``    `.  `_.  ''-._           Redis 3.2.12 (00000000/0) 64 bit\n  .-`` .-```.  ```\\/    _.,_ ''-._                                   \n (    '      ,       .-`  | `,    )     Running in standalone mode\n |`-._`-...-` __...-.``-._|'` _.-'|     Port: 6379\n |    `-._   `._    /     _.-'    |     PID: 1\n  `-._    `-._  `-./  _.-'    _.-'                                   \n |`-._`-._    `-.__.-'    _.-'_.-'|                                  \n |    `-._`-._        _.-'_.-'    |           http://redis.io        \n  `-._    `-._`-.__.-'_.-'    _.-'                                   \n |`-._`-._    `-.__.-'    _.-'_.-'|                                  \n |    `-._`-._        _.-'_.-'    |                                  \n  `-._    `-._`-.__.-'_.-'    _.-'                                   \n      `-._    `-.__.-'    _.-'                                       \n          `-._        _.-'                                           \n              `-.__.-'                                               \n\n1:M 03 Jun 12:21:01.830 # Server started, Redis version 3.2.12\n")),(0,o.kt)("h2",{id:"update-the-application-version"},"Update the Application Version"),(0,o.kt)("p",null," Edit the example.nomad file and change the Docker image from ",(0,o.kt)("inlineCode",{parentName:"p"},"redis:3.2")," to ",(0,o.kt)("inlineCode",{parentName:"p"},"redis:7-bullseye"),". This is located around ",(0,o.kt)("a",{parentName:"p",href:"https://gist.github.com/mpolinowski/fd4c2ec2d75533fd85192f675ec1af8e"},"line 305")," in ",(0,o.kt)("inlineCode",{parentName:"p"},"example.nomad"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'task "redis" {\n    # The "driver" parameter specifies the task driver that should be used to\n    # run the task.\n    driver = "docker"\n\n    # The "config" stanza specifies the driver configuration, which is passed\n    # directly to the driver to start the task. The details of configurations\n    # are specific to each driver, so please see specific driver\n    # documentation for more information.\n    config {\n      // image = "redis:3.2"\n      image = "redis:7-bullseye"\n\n      ports = ["db"]\n  }\n')),(0,o.kt)("p",null,"You can run ",(0,o.kt)("inlineCode",{parentName:"p"},"nomad job plan")," again to see what happens if you submit this change:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'nomad job plan example.nomad\n\n+/- Job: "example"\n+/- Task Group: "cache" (1 create/destroy update, 2 ignore)\n  +/- Task: "redis" (forces create/destroy update)\n    +/- Config {\n      +/- image:    "redis:3.2" => "redis:7-bullseye"\n          ports[0]: "db"\n        }\n\nScheduler dry-run:\n- All tasks successfully allocated.\n\nJob Modify Index: 43\nTo submit the job with version verification run:\n\nnomad job run -check-index 43 example.nomad\n\nWhen running the job with the check-index flag, the job will only be run if the\njob modify index given matches the server-side version. If the index has\nchanged, another user has modified the job and the plan\'s results are\npotentially invalid.\n')),(0,o.kt)("p",null,"Once ready, use nomad job run command emitted in the plan output to push the updated specification:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'nomad job run -check-index 43 example.nomad\n\n==> 2022-06-04T06:20:05+02:00: Monitoring evaluation "da995f0d"\n    2022-06-04T06:20:05+02:00: Evaluation triggered by job "example"\n    2022-06-04T06:20:05+02:00: Evaluation within deployment: "c6fcfc8a"\n    2022-06-04T06:20:05+02:00: Allocation "dae260fa" created: node "f05c2587", group "cache"\n    2022-06-04T06:20:05+02:00: Evaluation status changed: "pending" -> "complete"\n==> 2022-06-04T06:20:05+02:00: Evaluation "da995f0d" finished with status "complete"\n==> 2022-06-04T06:20:05+02:00: Monitoring deployment "c6fcfc8a"\n  \u2713 Deployment "c6fcfc8a" successful\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"nomad job status example\n\n\n...\n\nAllocations\nID        Node ID   Task Group  Version  Desired  Status   Created    Modified\ndae260fa  f05c2587  cache       0        run      running  2m36s ago  2m19s ago\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"nomad alloc logs dae260fa redis\n\n1:C 04 Jun 2022 04:20:13.065 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo\n1:C 04 Jun 2022 04:20:13.067 # Redis version=7.0.0, bits=64, commit=00000000, modified=0, pid=1, just started\n1:C 04 Jun 2022 04:20:13.067 # Warning: no config file specified, using the default config. In order to specify a config file use redis-server /path/to/redis.conf\n1:M 04 Jun 2022 04:20:13.068 * monotonic clock: POSIX clock_gettime\n1:M 04 Jun 2022 04:20:13.068 * Running mode=standalone, port=6379.\n1:M 04 Jun 2022 04:20:13.068 # Server initialized\n1:M 04 Jun 2022 04:20:13.069 # WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.\n1:M 04 Jun 2022 04:20:13.070 * The AOF directory appendonlydir doesn't exist\n1:M 04 Jun 2022 04:20:13.070 * Ready to accept connections\n")),(0,o.kt)("h2",{id:"nomad-web-interface"},"Nomad Web Interface"),(0,o.kt)("p",null,"Nomad provides a web interface that allows you to keep an eye on all running services. This interface can be accessed on ",(0,o.kt)("inlineCode",{parentName:"p"},"localhost:4646"),". But since I am working on a remote server I will forward this port to my local machine instead."),(0,o.kt)("h3",{id:"forward-the-service-through-ssh-optional"},"Forward the Service through SSH (optional)"),(0,o.kt)("p",null,"If you don't want the Nomad UI to be accessible from the internet you can use SSH to tunnel the service into your local network:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"ssh -L local_port:destination_server_ip:remote_port ssh_server_hostname\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"ssh")," \u2013 Starts the SSH client program on the local machine and establishes a secure connection to the remote SSH server.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"-L local_port:destination_server_ip:remote_port")," \u2013 The local port on the local client is being forwarded to the port of the destination remote server that is running the Nomad UI.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"ssh_server_hostname")," \u2013 This element of the syntax represents the hostname or IP address of the remote SSH server. This can also be directly the Nomad server."))),(0,o.kt)("p",null,"A practical example of an SSH port forwarding command would take the following form:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"ssh \u2013L 8080:nomad.server.com:4646 root@ssh.server.com -p ssh.port\n")),(0,o.kt)("p",null,"In the example above, all traffic sent to port ",(0,o.kt)("inlineCode",{parentName:"p"},"8080")," on your local machine is being forwarded to port ",(0,o.kt)("inlineCode",{parentName:"p"},"4646")," on the remote server located at ",(0,o.kt)("inlineCode",{parentName:"p"},"nomad.server.com"),". If the SSH Server is the same as the remote server - in our case the Nomad server - use ",(0,o.kt)("inlineCode",{parentName:"p"},"localhost")," instead:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"ssh \u2013L 8080:localhost:4646 root@nomad.server.com -p ssh.port\n")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"To run this command in the background use the ",(0,o.kt)("inlineCode",{parentName:"p"},"-f")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"-N")," flag to not execute a remote command.")),(0,o.kt)("p",null,"There will now be a service listening on Port ",(0,o.kt)("inlineCode",{parentName:"p"},"8080")," on your local machine ready to forward your web browser request to the Nomad server:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"netstat -tlnp\n\nProto  Local Address   Foreign Address  PID/Program\ntcp    127.0.0.1:8080  0.0.0.0:*        19918/ssh\n")),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Nomad User Interface",src:a(38126).Z,width:"1105",height:"464"})),(0,o.kt)("h2",{id:"cleaning-up"},"Cleaning Up"),(0,o.kt)("p",null,"To stop the job run the following command - or simply click the button in the web interface:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"nomad job stop example\n")),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Nomad User Interface",src:a(65757).Z,width:"991",height:"546"})),(0,o.kt)("p",null,"And quit the dev agent by ",(0,o.kt)("inlineCode",{parentName:"p"},"Ctrl+C")," out of the running process."))}c.isMDXComponent=!0},38126:(e,n,a)=>{a.d(n,{Z:()=>t});const t=a.p+"assets/images/Nomad-UI_01-4026c9e76ae6a8fdade32738e1f780f6.png"},65757:(e,n,a)=>{a.d(n,{Z:()=>t});const t=a.p+"assets/images/Nomad-UI_02-6201b61043509d17286954d6e4befa1e.png"},23214:(e,n,a)=>{a.d(n,{Z:()=>t});const t=a.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-6c1edb088dfea3a7d39f8eebb8e9dc23.jpg"}}]);