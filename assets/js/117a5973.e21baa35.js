"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[24670],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>d});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=n.createContext({}),p=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},u=function(e){var t=p(e.components);return n.createElement(o.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),m=p(a),d=r,h=m["".concat(o,".").concat(d)]||m[d]||c[d]||l;return a?n.createElement(h,s(s({ref:t},u),{},{components:a})):n.createElement(h,s({ref:t},u))}));function d(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,s=new Array(l);s[0]=m;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i.mdxType="string"==typeof e?e:r,s[1]=i;for(var p=2;p<l;p++)s[p]=a[p];return n.createElement.apply(null,s)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},25274:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>s,default:()=>c,frontMatter:()=>l,metadata:()=>i,toc:()=>p});var n=a(87462),r=(a(67294),a(3905));const l={sidebar_position:9e3,slug:"2020-06-23",title:"Saltstack Refresh Course 2: Salt State",authors:"mpolinowski",tags:["LINUX","Salt"]},s=void 0,i={unversionedId:"DevOps/Salt/2020-06-23--saltestack-refresh-course-2-salt-state/index",id:"DevOps/Salt/2020-06-23--saltestack-refresh-course-2-salt-state/index",title:"Saltstack Refresh Course 2: Salt State",description:"Shenzhen, China",source:"@site/docs/DevOps/Salt/2020-06-23--saltestack-refresh-course-2-salt-state/index.md",sourceDirName:"DevOps/Salt/2020-06-23--saltestack-refresh-course-2-salt-state",slug:"/DevOps/Salt/2020-06-23--saltestack-refresh-course-2-salt-state/2020-06-23",permalink:"/docs/DevOps/Salt/2020-06-23--saltestack-refresh-course-2-salt-state/2020-06-23",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/DevOps/Salt/2020-06-23--saltestack-refresh-course-2-salt-state/index.md",tags:[{label:"LINUX",permalink:"/docs/tags/linux"},{label:"Salt",permalink:"/docs/tags/salt"}],version:"current",sidebarPosition:9e3,frontMatter:{sidebar_position:9e3,slug:"2020-06-23",title:"Saltstack Refresh Course 2: Salt State",authors:"mpolinowski",tags:["LINUX","Salt"]},sidebar:"tutorialSidebar",previous:{title:"Saltstack Refresh Course 2: Highstate",permalink:"/docs/DevOps/Salt/2020-06-23--saltestack-refresh-course-3-highstate/2020-06-23"},next:{title:"Saltstack Refresh Course 1: Setup",permalink:"/docs/DevOps/Salt/2020-06-23--saltestack-refresh-course-1-setup/2020-06-23"}},o={},p=[{value:"Setting up a Webserver",id:"setting-up-a-webserver",level:2},{value:"Init.sls",id:"initsls",level:3},{value:"File Management",id:"file-management",level:3},{value:"Run your State",id:"run-your-state",level:3}],u={toc:p};function c(e){let{components:t,...l}=e;return(0,r.kt)("wrapper",(0,n.Z)({},u,l,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Shenzhen, China",src:a(72292).Z,width:"1500",height:"520"})),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#setting-up-a-webserver"},"Setting up a Webserver"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#initsls"},"Init.sls")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#file-management"},"File Management")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#run-your-state"},"Run your State"))))),(0,r.kt)("h2",{id:"setting-up-a-webserver"},"Setting up a Webserver"),(0,r.kt)("p",null,"I want to define a webserver state using a Salt state file and apply it to my minion server:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null}),(0,r.kt)("th",{parentName:"tr",align:null}))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Application"),(0,r.kt)("td",{parentName:"tr",align:null},"Apache")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"File"),(0,r.kt)("td",{parentName:"tr",align:null},"/var/www/html/index.html")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Users"),(0,r.kt)("td",{parentName:"tr",align:null},"webadmin")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"SSH Key"),(0,r.kt)("td",{parentName:"tr",align:null},"For webadmin user")))),(0,r.kt)("h3",{id:"initsls"},"Init.sls"),(0,r.kt)("p",null,'Every minion that with a name that starts with "salt-minion" should have the ',(0,r.kt)("inlineCode",{parentName:"p"},"apache")," state applied to it. We can then continue and and create said state in:"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"/srv/salt/base/apache/init.sls")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"install_apache:\n  pkg.installed:\n    - pkgs:\n        - apache2\n\nindex_html:\n  file.managed:\n    - name: /var/www/html/index.html\n    - source: salt://apache/templates/index.html\n    - user: www-data\n    - group: www-data\n    - mode: 644\n\napache_service:\n  service.running:\n    - name: apache2\n    - enable: True\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"Note")," that the Apache package for Ubuntu is called ",(0,r.kt)("inlineCode",{parentName:"p"},"apache2"),". For CentOS you would have to use the package name ",(0,r.kt)("inlineCode",{parentName:"p"},"httpd")," instead.")),(0,r.kt)("h3",{id:"file-management"},"File Management"),(0,r.kt)("p",null,"This state file defines an index page that we want to use with Apache that we can now create in:"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"/srv/salt/base/apache/templates/index.html")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},'<!DOCTYPE html>\n\n<html lang="en">\n  <head>\n    <meta charset="utf-8" />\n\n    <title>Salty Dayz, Sailor!</title>\n    <meta name="description" content="Salt Apache Template" />\n  </head>\n\n  <body>\n    <h1>Salty Dayz, Sailor!</h1>\n  </body>\n</html>\n')),(0,r.kt)("h3",{id:"run-your-state"},"Run your State"),(0,r.kt)("p",null,"We can now apply this state to our minion server with:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'salt \'salt-minion*\' state.sls apache\n\nsalt-minion:\n----------\n          ID: install_apache\n    Function: pkg.installed\n      Result: True\n     Comment: All specified packages are already installed\n     Started: 10:05:29.993312\n    Duration: 37.941 ms\n     Changes:\n----------\n          ID: index_html\n    Function: file.managed\n        Name: /var/www/html/index.html\n      Result: True\n     Comment: File /var/www/html/index.html updated\n     Started: 10:05:30.033993\n    Duration: 39.989 ms\n     Changes:\n              ----------\n              diff:\n                  ---\n                  +++\n                  @@ -1,4 +1,14 @@\n                   <!doctype html>\n                  +\n                  +<html lang="en">\n                  +<head>\n                  +  <meta charset="utf-8">\n                  +\n                  +  <title>Salty Dayz, Sailor!</title>\n                  +  <meta name="description" content="Salt Apache Template">\n                  +</head>\n                  +\n                   <body>\n                  -    <h1>Ubuntu Rocks.</h1>\n                  +  <h1>Salty Dayz, Sailor!</h1>\n                   </body>\n                  +</html>\n              group:\n                  www-data\n              user:\n                  www-data\n----------\n          ID: apache_service\n    Function: service.running\n        Name: apache2\n      Result: True\n     Comment: The service apache2 is already running\n     Started: 10:05:30.074597\n    Duration: 38.561 ms\n     Changes:\n\nSummary for salt-minion\n------------\nSucceeded: 3 (changed=1)\nFailed:    0\n------------\nTotal states run:     3\nTotal run time: 116.491 ms\n')),(0,r.kt)("p",null,"Verify that the website is online by first getting your minions IP address:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"salt 'salt-minion*' grains.get ipv4\n\nsalt-minion:\n    - 127.0.0.1\n    - 172.17.0.1\n    - 172.18.0.1\n    - 192.168.2.111\n")),(0,r.kt)("p",null,"And then accessing the Apache service with your web browser ",(0,r.kt)("inlineCode",{parentName:"p"},"http://192.168.2.111:80"),"."))}c.isMDXComponent=!0},72292:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-2215e4912b7f3d1beed1d8b83bac94aa.jpg"}}]);