"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[19852],{3905:(e,s,t)=>{t.d(s,{Zo:()=>g,kt:()=>h});var n=t(67294);function a(e,s,t){return s in e?Object.defineProperty(e,s,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[s]=t,e}function o(e,s){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);s&&(n=n.filter((function(s){return Object.getOwnPropertyDescriptor(e,s).enumerable}))),t.push.apply(t,n)}return t}function r(e){for(var s=1;s<arguments.length;s++){var t=null!=arguments[s]?arguments[s]:{};s%2?o(Object(t),!0).forEach((function(s){a(e,s,t[s])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(s){Object.defineProperty(e,s,Object.getOwnPropertyDescriptor(t,s))}))}return e}function i(e,s){if(null==e)return{};var t,n,a=function(e,s){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],s.indexOf(t)>=0||(a[t]=e[t]);return a}(e,s);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],s.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=n.createContext({}),c=function(e){var s=n.useContext(l),t=s;return e&&(t="function"==typeof e?e(s):r(r({},s),e)),t},g=function(e){var s=c(e.components);return n.createElement(l.Provider,{value:s},e.children)},d={inlineCode:"code",wrapper:function(e){var s=e.children;return n.createElement(n.Fragment,{},s)}},p=n.forwardRef((function(e,s){var t=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,g=i(e,["components","mdxType","originalType","parentName"]),p=c(t),h=a,m=p["".concat(l,".").concat(h)]||p[h]||d[h]||o;return t?n.createElement(m,r(r({ref:s},g),{},{components:t})):n.createElement(m,r({ref:s},g))}));function h(e,s){var t=arguments,a=s&&s.mdxType;if("string"==typeof e||a){var o=t.length,r=new Array(o);r[0]=p;var i={};for(var l in s)hasOwnProperty.call(s,l)&&(i[l]=s[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,r[1]=i;for(var c=2;c<o;c++)r[c]=t[c];return n.createElement.apply(null,r)}return n.createElement.apply(null,t)}p.displayName="MDXCreateElement"},4453:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>l,contentTitle:()=>r,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var n=t(87462),a=(t(67294),t(3905));const o={sidebar_position:8060,slug:"2021-03-26",title:"Elasticsearch 7 to log Linux System Events",authors:"mpolinowski",tags:["LINUX","Elasticsearch"]},r=void 0,i={unversionedId:"DevOps/Elasticsearch/2021-03-26-elasticsearch7-for-syslog-messages/index",id:"DevOps/Elasticsearch/2021-03-26-elasticsearch7-for-syslog-messages/index",title:"Elasticsearch 7 to log Linux System Events",description:"Harbin, China",source:"@site/docs/DevOps/Elasticsearch/2021-03-26-elasticsearch7-for-syslog-messages/index.md",sourceDirName:"DevOps/Elasticsearch/2021-03-26-elasticsearch7-for-syslog-messages",slug:"/DevOps/Elasticsearch/2021-03-26-elasticsearch7-for-syslog-messages/2021-03-26",permalink:"/docs/DevOps/Elasticsearch/2021-03-26-elasticsearch7-for-syslog-messages/2021-03-26",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/DevOps/Elasticsearch/2021-03-26-elasticsearch7-for-syslog-messages/index.md",tags:[{label:"LINUX",permalink:"/docs/tags/linux"},{label:"Elasticsearch",permalink:"/docs/tags/elasticsearch"}],version:"current",sidebarPosition:8060,frontMatter:{sidebar_position:8060,slug:"2021-03-26",title:"Elasticsearch 7 to log Linux System Events",authors:"mpolinowski",tags:["LINUX","Elasticsearch"]},sidebar:"tutorialSidebar",previous:{title:"Elasticsearch 7 Aggregations",permalink:"/docs/DevOps/Elasticsearch/2021-03-27-elasticsearch7-aggregations/2021-03-27"},next:{title:"Log all the searches going through Elasticsearch",permalink:"/docs/DevOps/Elasticsearch/2021-03-25-elasticsearch7-activate-logging-of-search-queries/2021-03-25"}},l={},c=[{value:"Configuring Logstash",id:"configuring-logstash",level:2},{value:"Running Logstash",id:"running-logstash",level:2},{value:"Kibana",id:"kibana",level:2}],g={toc:c};function d(e){let{components:s,...o}=e;return(0,a.kt)("wrapper",(0,n.Z)({},g,o,{components:s,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Harbin, China",src:t(24147).Z,width:"1500",height:"376"})),(0,a.kt)("p",null,"Logstash together with Remote Syslog (",(0,a.kt)("em",{parentName:"p"},"rsyslog"),") can monitor remote host systems via an UDP or TCP connection. But I personally prefer to use ",(0,a.kt)("a",{parentName:"p",href:"/docs/DevOps/Zabbix/2020-07-15--zabbix-docker-installation/2020-07-15"},"Zabbix to monitor remote servers"),". But it might be interesting to spin up an ELK cluster on your server to debug a problem. For this I am going to use Logstash to monitor the local ",(0,a.kt)("inlineCode",{parentName:"p"},"/var/log/syslog"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"head -10 /var/log/syslog \n")),(0,a.kt)("h2",{id:"configuring-logstash"},"Configuring Logstash"),(0,a.kt)("p",null,"And I am going to use the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/coralogix-resources/logstash-syslog/blob/master/logstash-monitoring-syslog.conf"},"Coralogix Logstash configuration file")," to run Logstash:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'input {\n  file {\n     path => ["/usr/share/logstash/syslog"]\n     type => "syslog"\n     start_position => "beginning"\n   }\n}\nfilter {\n       if [type] == "syslog" {\n    grok {\n      match => { "message" => "%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{DATA:syslog_program}(?:\\[%{POSINT:syslog_pid}\\])?: %{GREEDYDATA:syslog_message}" }\n      add_field => [ "received_at", "%{@timestamp}" ]\n      add_field => [ "received_from", "%{host}" ]\n    }\n    date {\n      match => [ "syslog_timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]\n      target => "syslog_timestamp"\n    }\n  }\n}\noutput{\n  elasticsearch{\n    hosts => ["localhost:9200"] \n    index => "syslog-monitor" \n  }\n}\n')),(0,a.kt)("h2",{id:"running-logstash"},"Running Logstash"),(0,a.kt)("p",null,"I will now try to ingest the entire log into Elasticsearch using my Logstash container:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'docker run \\\n   --name logstash \\\n   --net=host \\\n   --rm -it \\\n   -v /opt/logstash/pipeline/logstash.conf:/usr/share/logstash/pipeline/logstash.conf \\\n   -v /var/log/syslog:/usr/share/logstash/syslog:Z \\\n   -e "ELASTIC_HOST=localhost:9200" \\\n   -e "XPACK_SECURITY_ENABLED=false" \\\n   -e "XPACK_REPORTING_ENABLED=false" \\\n   -e "XPACK_MONITORING_ENABLED=false" \\\n   -e "XPACK_MONITORING_ELASTICSEARCH_USERNAME=elastic" \\\n   -e "XPACK_MONITORING_ELASTICSEARCH_PASSWORD=changeme" \\\n   logstash:7.13.4\n')),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"I ran into permission issues here: ",(0,a.kt)("inlineCode",{parentName:"p"},'failed to open file {:path=>"/usr/share/logstash/syslog", :exception=>Errno::EACCES, :message=>"Permission denied - /usr/share/logstash/syslog"}'),". Had to chmod the syslog file to give Docker access.")),(0,a.kt)("p",null,"Logstash is running quietly in the background. To check if there is content data being indexed run the following command and you should see last 2 documents that were generated: "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"curl -XGET \"http://localhost:9200/syslog-monitor/_search?pretty\"  -H 'Content-Type: application/json' -d ' { \"size\": 2 }'\n")),(0,a.kt)("p",null,"And it looks like it is working:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "took" : 0,\n  "timed_out" : false,\n  "_shards" : {\n    "total" : 1,\n    "successful" : 1,\n    "skipped" : 0,\n    "failed" : 0\n  },\n  "hits" : {\n    "total" : {\n      "value" : 8307,\n      "relation" : "eq"\n    },\n    "max_score" : 1.0,\n    "hits" : [\n      {\n        "_index" : "syslog-monitor",\n        "_type" : "_doc",\n        "_id" : "CBVIDHsBhWUvimFeD-Tj",\n        "_score" : 1.0,\n        "_source" : {\n          "syslog_message" : "var-lib-docker-overlay2-eb8de377cf683367ca97a620a723c4c6ddd7ccd68090fb050c9ab427ea5c2d47-merged.mount: Succeeded.",\n          "type" : "syslog",\n          "syslog_program" : "systemd",\n          "syslog_hostname" : "debian11",\n          "received_at" : "2021-08-03T13:50:54.304Z",\n          "syslog_timestamp" : "2021-08-03T21:46:24.000Z",\n          "host" : "debian11",\n          "@timestamp" : "2021-08-03T13:50:54.304Z",\n          "path" : "/usr/share/logstash/syslog",\n          "syslog_pid" : "1",\n          "received_from" : "debian11",\n          "message" : "Aug  3 21:46:24 debian11 systemd[1]: var-lib-docker-overlay2-eb8de377cf683367ca97a620a723c4c6ddd7ccd68090fb050c9ab427ea5c2d47-merged.mount: Succeeded.",\n          "@version" : "1"\n        }\n      },\n      {\n        "_index" : "syslog-monitor",\n        "_type" : "_doc",\n        "_id" : "CRVLDHsBhWUvimFeuuQO",\n        "_score" : 1.0,\n        "_source" : {\n          "@timestamp" : "2021-08-03T13:54:53.923Z",\n          "syslog_message" : "Finished Rotate log files.",\n          "type" : "syslog",\n          "host" : "debian11",\n          "syslog_hostname" : "debian11",\n          "received_at" : "2021-08-03T13:54:53.923Z",\n          "received_from" : "debian11",\n          "syslog_program" : "systemd",\n          "@version" : "1",\n          "path" : "/usr/share/logstash/syslog",\n          "syslog_timestamp" : "2021-08-01T17:55:44.000Z",\n          "syslog_pid" : "1",\n          "message" : "Aug  1 17:55:44 debian11 systemd[1]: Finished Rotate log files."\n        }\n      }\n    ]\n  }\n}\n')),(0,a.kt)("h2",{id:"kibana"},"Kibana"),(0,a.kt)("p",null,"I can now create an Index Pattern in Kibana with ",(0,a.kt)("inlineCode",{parentName:"p"},"received_at")," as the primary time field:"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Logstash for Syslogs",src:t(41558).Z,width:"1497",height:"479"})),(0,a.kt)("p",null,"And drill down the log entries on a time line:"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Logstash for Syslogs",src:t(20861).Z,width:"1489",height:"703"})))}d.isMDXComponent=!0},41558:(e,s,t)=>{t.d(s,{Z:()=>n});const n=t.p+"assets/images/Logstash_for_Syslogs_01-7da163880bb8b9131d6d293125f63755.png"},20861:(e,s,t)=>{t.d(s,{Z:()=>n});const n=t.p+"assets/images/Logstash_for_Syslogs_02-49dc0db2229731bdfa8dd7d2d016ca25.png"},24147:(e,s,t)=>{t.d(s,{Z:()=>n});const n=t.p+"assets/images/photo-456tdsfggd_67gfh6dgdf4_d-ead0c98a32466e0f9eb24be25c9fe588.jpg"}}]);