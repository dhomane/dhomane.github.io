"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[18195],{3905:(e,n,a)=>{a.d(n,{Zo:()=>c,kt:()=>u});var t=a(67294);function i(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function r(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function o(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?r(Object(a),!0).forEach((function(n){i(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function l(e,n){if(null==e)return{};var a,t,i=function(e,n){if(null==e)return{};var a,t,i={},r=Object.keys(e);for(t=0;t<r.length;t++)a=r[t],n.indexOf(a)>=0||(i[a]=e[a]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)a=r[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var p=t.createContext({}),s=function(e){var n=t.useContext(p),a=n;return e&&(a="function"==typeof e?e(n):o(o({},n),e)),a},c=function(e){var n=s(e.components);return t.createElement(p.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},g=t.forwardRef((function(e,n){var a=e.components,i=e.mdxType,r=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),g=s(a),u=i,d=g["".concat(p,".").concat(u)]||g[u]||m[u]||r;return a?t.createElement(d,o(o({ref:n},c),{},{components:a})):t.createElement(d,o({ref:n},c))}));function u(e,n){var a=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var r=a.length,o=new Array(r);o[0]=g;var l={};for(var p in n)hasOwnProperty.call(n,p)&&(l[p]=n[p]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var s=2;s<r;s++)o[s]=a[s];return t.createElement.apply(null,o)}return t.createElement.apply(null,a)}g.displayName="MDXCreateElement"},16429:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>p,contentTitle:()=>o,default:()=>m,frontMatter:()=>r,metadata:()=>l,toc:()=>s});var t=a(87462),i=(a(67294),a(3905));const r={sidebar_position:7020,slug:"2021-12-01",title:"OpenCV and Images",authors:"mpolinowski",tags:["Machine Learning","Python","OpenCV"]},o=void 0,l={unversionedId:"IoT-and-Machine-Learning/ML/2021-12-01--opencv-with-images/index",id:"IoT-and-Machine-Learning/ML/2021-12-01--opencv-with-images/index",title:"OpenCV and Images",description:"Shenzhen, China",source:"@site/docs/IoT-and-Machine-Learning/ML/2021-12-01--opencv-with-images/index.md",sourceDirName:"IoT-and-Machine-Learning/ML/2021-12-01--opencv-with-images",slug:"/IoT-and-Machine-Learning/ML/2021-12-01--opencv-with-images/2021-12-01",permalink:"/docs/IoT-and-Machine-Learning/ML/2021-12-01--opencv-with-images/2021-12-01",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/IoT-and-Machine-Learning/ML/2021-12-01--opencv-with-images/index.md",tags:[{label:"Machine Learning",permalink:"/docs/tags/machine-learning"},{label:"Python",permalink:"/docs/tags/python"},{label:"OpenCV",permalink:"/docs/tags/open-cv"}],version:"current",sidebarPosition:7020,frontMatter:{sidebar_position:7020,slug:"2021-12-01",title:"OpenCV and Images",authors:"mpolinowski",tags:["Machine Learning","Python","OpenCV"]},sidebar:"tutorialSidebar",previous:{title:"OpenCV, Streams and Video Files",permalink:"/docs/IoT-and-Machine-Learning/ML/2021-12-02--opencv-with-videos/2021-12-02"},next:{title:"Introduction into FB Prophet",permalink:"/docs/IoT-and-Machine-Learning/ML/2021-11-15--facebook-prophet-introduction/2021-11-15"}},p={},s=[{value:"Setup OpenCV",id:"setup-opencv",level:2},{value:"OpenCV Basic Operations",id:"opencv-basic-operations",level:2},{value:"Working with Images",id:"working-with-images",level:3},{value:"Manipulating Images",id:"manipulating-images",level:3},{value:"Colour Space",id:"colour-space",level:4},{value:"Resizing Images",id:"resizing-images",level:4},{value:"Adding Text",id:"adding-text",level:4},{value:"Drawing Shapes",id:"drawing-shapes",level:4}],c={toc:s};function m(e){let{components:n,...r}=e;return(0,i.kt)("wrapper",(0,t.Z)({},c,r,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Shenzhen, China",src:a(97346).Z,width:"2385",height:"919"})),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#setup-opencv"},"Setup OpenCV")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#opencv-basic-operations"},"OpenCV Basic Operations"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#working-with-images"},"Working with Images")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#manipulating-images"},"Manipulating Images"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#colour-space"},"Colour Space")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#resizing-images"},"Resizing Images")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#adding-text"},"Adding Text")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#drawing-shapes"},"Drawing Shapes"))))))),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mpolinowski/opencv-with-images"},"Github Repo")),(0,i.kt)("h2",{id:"setup-opencv"},"Setup OpenCV"),(0,i.kt)("p",null,"Create and activate a virtual work environment:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"python -m venv .env\nsource .env/bin/activate\npython -m pip install --upgrade pip\n")),(0,i.kt)("p",null,"Add a file ",(0,i.kt)("inlineCode",{parentName:"p"},"dependencies.txt")," with all project ",(0,i.kt)("strong",{parentName:"p"},"pip dependencies"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"opencv-python\n")),(0,i.kt)("p",null,"Install all dependencies with:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"pip install -r dependencies.txt\n")),(0,i.kt)("h2",{id:"opencv-basic-operations"},"OpenCV Basic Operations"),(0,i.kt)("h3",{id:"working-with-images"},"Working with Images"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"import cv2\n\nimport_path = r'./resources/test-image.jpg'\n# Read image\nimage = cv2.imread(import_path)\n# Display image for 5s\ncv2.imshow('Zhu Jiang New Town, Guangzhou, Guangdong, China', image)\ncv2.waitKey(5000)\ncv2.destroyAllWindows()\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"# Save image to output folder\ncv2.imwrite('./processed/processed_test_image.jpg', image)\n")),(0,i.kt)("h3",{id:"manipulating-images"},"Manipulating Images"),(0,i.kt)("h4",{id:"colour-space"},"Colour Space"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"# Display image properties\nprint(image.shape)\n")),(0,i.kt)("p",null,"The ",(0,i.kt)("strong",{parentName:"p"},"Shape")," command displays the ",(0,i.kt)("inlineCode",{parentName:"p"},"height"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"width")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"colour channels"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"(476, 715, 3)"),"."),(0,i.kt)("p",null,"Colour space conversion:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"## RGB -> Gray\nimage_monochrome = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)\nexport_path_monochrome = ('./processed/monochrome-' + timestamp + '.jpg')\ncv2.imwrite(export_path_monochrome, image_monochrome)\nprint(image_monochrome.shape)\n## RGB -> HSV\nimage_hsv = cv2.cvtColor(image, cv2.COLOR_BGR2HSV)\nexport_path_colour = ('./processed/colour-' + timestamp + '.jpg')\ncv2.imwrite(export_path_colour, image_hsv)\nprint(image_hsv.shape)\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"(476, 715, 3)\n(476, 715)\n(476, 715, 3)\n")),(0,i.kt)("p",null,"You can also use a parameter in the ",(0,i.kt)("inlineCode",{parentName:"p"},"imread()")," function:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"0")," - Grayscale"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"1")," - Colour"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"-1")," - Unchanged")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"img_grayscale = cv2.imread(import_path, 0)\nimg_colour = cv2.imread(import_path, 1)\nimg_original = cv2.imread(import_path, -1)\n")),(0,i.kt)("h4",{id:"resizing-images"},"Resizing Images"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"img_resized = cv2.resize(image, (450, 450))\ncv2.imshow('Zhu Jiang New Town, Guangzhou, Guangdong, China', img_resized)\ncv2.waitKey(2000)\ncv2.destroyAllWindows()\n")),(0,i.kt)("h4",{id:"adding-text"},"Adding Text"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"watermark = \"Hello World!\"\ncoordinates = (50, 150)\nfont = cv2.QT_FONT_NORMAL\nfontScale = 1\ncolor = (255, 0, 0)\nthickness = 2\n\nimg_watermarked = cv2.putText(image, watermark, coordinates, font, fontScale, color, thickness)\ncv2.imshow('Zhu Jiang New Town, Guangzhou, Guangdong, China', img_watermarked)\ncv2.waitKey(2000)\ncv2.destroyAllWindows()\n")),(0,i.kt)("h4",{id:"drawing-shapes"},"Drawing Shapes"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Lines")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"start = (0, 0)\nend = (715, 476)\ncolor = (0, 0, 255)\nthickness = 2\n\nimg_line = cv2.line(image, start, end, color, thickness)\ncv2.imshow('Zhu Jiang New Town, Guangzhou, Guangdong, China', img_line)\ncv2.waitKey(2000)\ncv2.destroyAllWindows()\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Circles")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"center = (100, 100)\nradius = 80\ncolor = (255, 255, 255)\nthickness = 2\n\nimg_line = cv2.circle(image, center, radius, color, thickness)\ncv2.imshow('Zhu Jiang New Town, Guangzhou, Guangdong, China', img_line)\ncv2.waitKey(2000)\ncv2.destroyAllWindows()\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Rectangle")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"start = (280, 80)\nend = (350, 350)\ncolor = (0, 255, 0)\nthickness = 2\n\nimg_line = cv2.rectangle(image, start, end, color, thickness)\ncv2.imshow('Zhu Jiang New Town, Guangzhou, Guangdong, China', img_line)\ncv2.waitKey(2000)\ncv2.destroyAllWindows()\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Ellipse")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"center = (120, 100)\naxesLength = (100, 50)\nangle = 30\nstartAngle = 0\nendAngle = 360\ncolor = (0, 0, 255)\nthickness = 2\n\nimg_line = cv2.ellipse(image, center, axesLength, angle, startAngle, endAngle, color, thickness)\ncv2.imshow('Zhu Jiang New Town, Guangzhou, Guangdong, China', img_line)\ncv2.waitKey(2000)\ncv2.destroyAllWindows()\n")))}m.isMDXComponent=!0},97346:(e,n,a)=>{a.d(n,{Z:()=>t});const t=a.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-5a0b68587d9242bbb46a1f1aaab44216.jpg"}}]);