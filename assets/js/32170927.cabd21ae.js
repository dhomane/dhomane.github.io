"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[23736],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>m});var o=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,o,a=function(e,n){if(null==e)return{};var t,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=o.createContext({}),c=function(e){var n=o.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=c(e.components);return o.createElement(s.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},u=o.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(t),m=a,k=u["".concat(s,".").concat(m)]||u[m]||d[m]||r;return t?o.createElement(k,i(i({ref:n},p),{},{components:t})):o.createElement(k,i({ref:n},p))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,i=new Array(r);i[0]=u;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var c=2;c<r;c++)i[c]=t[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,t)}u.displayName="MDXCreateElement"},41230:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var o=t(87462),a=(t(67294),t(3905));const r={sidebar_position:9060,slug:"2020-11-22",title:"Ansible for Docker Deployment",authors:"mpolinowski",tags:["LINUX","NGINX","Ansible"]},i=void 0,l={unversionedId:"DevOps/Ansible/2020-11-22--ansible-and-docker/index",id:"DevOps/Ansible/2020-11-22--ansible-and-docker/index",title:"Ansible for Docker Deployment",description:"Shenzhen, China",source:"@site/docs/DevOps/Ansible/2020-11-22--ansible-and-docker/index.md",sourceDirName:"DevOps/Ansible/2020-11-22--ansible-and-docker",slug:"/DevOps/Ansible/2020-11-22--ansible-and-docker/2020-11-22",permalink:"/docs/DevOps/Ansible/2020-11-22--ansible-and-docker/2020-11-22",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/DevOps/Ansible/2020-11-22--ansible-and-docker/index.md",tags:[{label:"LINUX",permalink:"/docs/tags/linux"},{label:"NGINX",permalink:"/docs/tags/nginx"},{label:"Ansible",permalink:"/docs/tags/ansible"}],version:"current",sidebarPosition:9060,frontMatter:{sidebar_position:9060,slug:"2020-11-22",title:"Ansible for Docker Deployment",authors:"mpolinowski",tags:["LINUX","NGINX","Ansible"]},sidebar:"tutorialSidebar",previous:{title:"Ansible Getting Serious",permalink:"/docs/DevOps/Ansible/2020-11-23--ansible-getting-serious/2020-11-23"},next:{title:"Ansible Vault, Modules & Roles",permalink:"/docs/DevOps/Ansible/2020-11-21--ansible-modules-and-roles/2020-11-21"}},s={},c=[{value:"Downloading Docker Images",id:"downloading-docker-images",level:2},{value:"Running Docker Container",id:"running-docker-container",level:2},{value:"Example I",id:"example-i",level:3},{value:"Example II",id:"example-ii",level:3}],p={toc:c};function d(e){let{components:n,...r}=e;return(0,a.kt)("wrapper",(0,o.Z)({},p,r,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Shenzhen, China",src:t(69944).Z,width:"1500",height:"676"})),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#downloading-docker-images"},"Downloading Docker Images")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#running-docker-container"},"Running Docker Container"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#example-i"},"Example I")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#example-ii"},"Example II"))))),(0,a.kt)("h2",{id:"downloading-docker-images"},"Downloading Docker Images"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"See ",(0,a.kt)("a",{parentName:"p",href:"https://docs.ansible.com/ansible/latest/collections/community/general/docker_image_module.html"},"docker_image")," Module.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yml"},"---\n- hosts: test\n  tasks:\n    - name: Pull Docker Image\n      docker_image:\n        name: hello-world\n        source: pull\n        state: present\n")),(0,a.kt)("p",null,"Running the playbook results in an error message that the docker python library is missing:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'ansible-playbook docker.yml\n\nPLAY [test] ********************************************************************************************************\n\nTASK [Gathering Facts] ********************************************************************************************************************\nok: [192.168.2.111]\n\nTASK [Pull Docker Image] ********************************************************************************************************************\nfatal: [192.168.2.111]: FAILED! => {"changed": false, "msg": "Failed to import the required Python library (Docker SDK for Python: docker (Python >= 2.7) or docker-py (Python 2.6)) on minion\'s Python /usr/bin/python3. Please read module documentation and install in the appropriate location. If the required library is installed, but Ansible is using the wrong Python interpreter, please consult the documentation on ansible_python_interpreter, for example via `pip install docker` or `pip install docker-py` (Python 2.6). The error was: No module named \'docker\'"}\nPLAY RECAP *********************************************************************************************************\n192.168.2.111              : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0 \n')),(0,a.kt)("p",null,"I will try to solve this by running ",(0,a.kt)("inlineCode",{parentName:"p"},"pip install docker")," on my host system. If this works, this step has to be included in the docker playbook."),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("strong",{parentName:"p"},"During handling of the above exception, another exception occurred: Read timed out.")," Increasing the timeout with ",(0,a.kt)("inlineCode",{parentName:"p"},"pip --default-timeout=1000 install docker"))),(0,a.kt)("h2",{id:"running-docker-container"},"Running Docker Container"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"See ",(0,a.kt)("a",{parentName:"p",href:"https://docs.ansible.com/ansible/latest/collections/community/general/docker_container_module.html"},"docker_container")," Module.")),(0,a.kt)("p",null,"This plugin is part of the community.general collection (version 1.3.0). To install it use:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"ansible-galaxy collection install community.general\n")),(0,a.kt)("h3",{id:"example-i"},"Example I"),(0,a.kt)("p",null,"To use it in a playbook, specify: ",(0,a.kt)("strong",{parentName:"p"},"community.general.docker_container"),":"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Ansible")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yml"},'---\n- hosts: test\n  tasks:\n    - name: Setup a Nginx Docker Container\n      community.general.docker_container:\n        name: ingress\n        image: nginx:stable-alpine\n        networks:\n          - name: gateway\n        state: started\n        restart_policy: unless-stopped\n        ports:\n          - "80:80"\n          - "443:443"\n        volumes:\n          - /opt/docker-ingress/configuration/conf.d:/etc/nginx/conf.d\n          - /opt/docker-ingress/configuration/nginx.conf:/etc/nginx/nginx.conf\n          - /opt/test-static/public:/opt/test-static/public\n          - /opt/downloads:/opt/downloads\n')),(0,a.kt)("p",null,"This is the Ansible version of the ",(0,a.kt)("a",{parentName:"p",href:"/docs/DevOps/NGINX/2020-08-26--nginx-docker-setup/2020-08-26"},"Docker-Compose NGINX Example")," - which is really interesting... you can actually migrate from ",(0,a.kt)("inlineCode",{parentName:"p"},"docker-compose")," to Ansible. Did not think of that before:"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Docker-Compose")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yml"},'version: "3.8"\nservices:\n\n    ingress:\n        image: nginx:stable-alpine\n        container_name: ingress\n        networks:\n        - gateway\n        ports:\n        - "80:80"\n        - "443:443"\n        restart: unless-stopped\n        volumes:\n        - /opt/docker-ingress/configuration/conf.d:/etc/nginx/conf.d\n        - /opt/docker-ingress/configuration/nginx.conf:/etc/nginx/nginx.conf\n        - /opt/test-static/public:/opt/test-static/public\n        - /opt/downloads:/opt/downloads\n\nnetworks:\n  gateway: {}\n')),(0,a.kt)("h3",{id:"example-ii"},"Example II"),(0,a.kt)("p",null,"I now want to rebuild the web app template with Docker that I ",(0,a.kt)("a",{parentName:"p",href:"/docs/DevOps/Ansible/2020-11-19--ansible-playbooks/2020-11-19"},"build before by installing NGINX directly on the host system"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yml"},'---\n- hosts: test\n  tasks:\n    - name: Setup a Nginx Docker Container\n      docker_container:\n        name: ingress\n        image: nginx:stable-alpine\n        state: started\n        restart_policy: unless-stopped\n        ports:\n          - "80:80"\n          - "443:443"\n        volumes:\n          - /opt/test-static/nginx/nginx.conf:/etc/nginx/nginx.conf\n          - /opt/test-static/nginx/conf.d/:/etc/nginx/conf.d\n          - /opt/test-static/nginx/ssl/:/etc/nginx/ssl\n          - /opt/test-static/public/:/opt/test-static/public\n')))}d.isMDXComponent=!0},69944:(e,n,t)=>{t.d(n,{Z:()=>o});const o=t.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-e12a28f9c35f9ae6e3540843545ced7e.jpg"}}]);