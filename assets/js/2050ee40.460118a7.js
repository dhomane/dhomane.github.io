"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[14159],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>k});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=p(n),k=r,u=m["".concat(s,".").concat(k)]||m[k]||d[k]||o;return n?a.createElement(u,i(i({ref:t},c),{},{components:n})):a.createElement(u,i({ref:t},c))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},68374:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var a=n(87462),r=(n(67294),n(3905));const o={sidebar_position:9070,slug:"2020-05-04",title:"Neo4j Corona Tracing",authors:"mpolinowski",tags:["Databases","Neo4j"]},i=void 0,l={unversionedId:"Development/Graphs/2020-05-04--neo4j-corona-tracing/index",id:"Development/Graphs/2020-05-04--neo4j-corona-tracing/index",title:"Neo4j Corona Tracing",description:"Shenzhen, China",source:"@site/docs/Development/Graphs/2020-05-04--neo4j-corona-tracing/index.mdx",sourceDirName:"Development/Graphs/2020-05-04--neo4j-corona-tracing",slug:"/Development/Graphs/2020-05-04--neo4j-corona-tracing/2020-05-04",permalink:"/docs/Development/Graphs/2020-05-04--neo4j-corona-tracing/2020-05-04",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Development/Graphs/2020-05-04--neo4j-corona-tracing/index.mdx",tags:[{label:"Databases",permalink:"/docs/tags/databases"},{label:"Neo4j",permalink:"/docs/tags/neo-4-j"}],version:"current",sidebarPosition:9070,frontMatter:{sidebar_position:9070,slug:"2020-05-04",title:"Neo4j Corona Tracing",authors:"mpolinowski",tags:["Databases","Neo4j"]},sidebar:"tutorialSidebar",previous:{title:"GraphQL Queries and Mutations",permalink:"/docs/Development/Graphs/2020-05-05--graphql-queries-and-mutations/2020-05-05"},next:{title:"Neo4j Cypher Cheat Sheet",permalink:"/docs/Development/Graphs/2020-05-03--neo4j-cheat-sheet/2020-05-03"}},s={},p=[{value:"Installing Neo4j Desktop",id:"installing-neo4j-desktop",level:2},{value:"Creating your Database",id:"creating-your-database",level:3},{value:"Importing Data",id:"importing-data",level:3},{value:"Working with your Data",id:"working-with-your-data",level:2}],c={toc:p};function d(e){let{components:t,...o}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Shenzhen, China",src:n(98625).Z,width:"1500",height:"585"})),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#installing-neo4j-desktop"},"Installing Neo4j Desktop"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#creating-your-database"},"Creating your Database")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#importing-data"},"Importing Data")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#working-with-your-data"},"Working with your Data"))),(0,r.kt)("h2",{id:"installing-neo4j-desktop"},"Installing Neo4j Desktop"),(0,r.kt)("p",null,"Download the latest version of the ",(0,r.kt)("a",{parentName:"p",href:"https://neo4j.com/download-thanks-desktop/"},"Neo4j Desktop")," AppImage and make it executable:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"chmod a+x neo4j-desktop-offline-1.2.9-x86_64.AppImage\n")),(0,r.kt)("p",null,"Then run it from your Terminal ",(0,r.kt)("inlineCode",{parentName:"p"},"./neo4j-desktop-offline-1.2.9-x86_64.AppImage"),"."),(0,r.kt)("h3",{id:"creating-your-database"},"Creating your Database"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Click on ",(0,r.kt)("strong",{parentName:"li"},"New Project"),", create the database and click on ",(0,r.kt)("strong",{parentName:"li"},"Manage")," to set it up.")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Neo4j Desktop Application",src:n(56790).Z,width:"1243",height:"1080"})),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Click on ",(0,r.kt)("strong",{parentName:"p"},"Open Folder"),", enter the ",(0,r.kt)("strong",{parentName:"p"},"import")," directory.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Copy your ",(0,r.kt)("a",{parentName:"p",href:"https://gist.github.com/mpolinowski/a4e4844b2fd52394c7161e8a1a5f1937"},"Corona Tracing Data")," as ",(0,r.kt)("inlineCode",{parentName:"p"},".csv")," file into the directory."))),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Neo4j Desktop Application",src:n(56388).Z,width:"1112",height:"970"})),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Alternative"),": If you are ",(0,r.kt)("a",{parentName:"p",href:"https://mpolinowski.github.io/getting-to-know-neo-4-j"},"running Neo4j inside a Docker Container")," copy this file to ",(0,r.kt)("inlineCode",{parentName:"p"},"/opt/neo4j/import")," and use the web client to run the import."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Neo4j Desktop Application",src:n(9541).Z,width:"1190",height:"638"})),(0,r.kt)("ol",{start:4},(0,r.kt)("li",{parentName:"ol"},"Now start the database and open the ",(0,r.kt)("strong",{parentName:"li"},"Neo4j Explorer"),".")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Neo4j Desktop Application",src:n(47182).Z,width:"1243",height:"1080"})),(0,r.kt)("h3",{id:"importing-data"},"Importing Data"),(0,r.kt)("p",null,"Run the following Cypher query to add your data to your database:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"LOAD CSV WITH HEADERS FROM 'file:///coronaTracing.csv' AS line\nWITH line\nMERGE (Infected:Person{name:line.Infected, Addr:line.InfectedAddress})\nMERGE (Contact:Person{name:line.Contact, Addr:line.ContactAddress})\nMERGE (Infected)-[info:Info{\n`Contact Info`:line.ContactInfo, \n`Relationship`:line.`Relationship`, \nLocation: CASE WHEN line.Geography IS NOT NULL THEN line.Geography ELSE '' END\n}]->(Contact)\n")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Neo4j Desktop Application",src:n(35819).Z,width:"1142",height:"921"})),(0,r.kt)("h2",{id:"working-with-your-data"},"Working with your Data"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"How many potential infections (query for relationship ",(0,r.kt)("inlineCode",{parentName:"li"},"Info")," = event with the potential of an infection) ?")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"MATCH (person:Person)-[rel:Info]->(:Person)\nRETURN COUNT (rel)\n")),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},"How many persons have been traced from ",(0,r.kt)("inlineCode",{parentName:"li"},"Cordon M")," ?")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"MATCH (person:Person)\nWHERE person.Addr = 'CordonM'\nRETURN person\n")),(0,r.kt)("ol",{start:3},(0,r.kt)("li",{parentName:"ol"},"How many infected persons has ",(0,r.kt)("inlineCode",{parentName:"li"},"Person A")," been in contact with ?")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"MATCH (carrier)-[r:Info]->(person:Person{name:'PersonA'})\nRETURN carrier, person, r\n")),(0,r.kt)("ol",{start:4},(0,r.kt)("li",{parentName:"ol"},"How many were potentially infected by ",(0,r.kt)("inlineCode",{parentName:"li"},"Person J")," ?")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"MATCH (carrier:Person{name:'PersonJ'})-[r:Info]->(person:Person)\nRETURN COUNT (person) AS Infected\n")),(0,r.kt)("p",null,"4.1. Omit potential double-count:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"MATCH (carrier:Person{name:'PersonJ'})-[r:Info]->(person:Person)\nRETURN COUNT (DISTINCT person) AS Infected\n")),(0,r.kt)("ol",{start:5},(0,r.kt)("li",{parentName:"ol"},"Select all and order by number of potential infection event - find ",(0,r.kt)("strong",{parentName:"li"},"Super Spreader"),":")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"MATCH (carrier:Person)-[rel:Info]->(person:Person)\nRETURN carrier, COUNT(carrier) AS Infected\nORDER BY Infected DESC\nLIMIT 10\n")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Switch results from ",(0,r.kt)("inlineCode",{parentName:"em"},"Graph")," to ",(0,r.kt)("inlineCode",{parentName:"em"},"Table")," to see the persons who are most likely to be super spreader")),(0,r.kt)("ol",{start:6},(0,r.kt)("li",{parentName:"ol"},"Select list of persons with highest number of potential infections:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"MATCH (n)-[r:Info]->(m)\nWITH n, COUNT((n)-[]->()) as num\nORDER BY num DESC\nLIMIT 10\nMATCH (n)-[i]->(b)\nRETURN n,i,b\n")),(0,r.kt)("ol",{start:7},(0,r.kt)("li",{parentName:"ol"},"Show the person that exposed the most:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"MATCH (carrier:Person)-[rel:Info]->(person:Person)\nRETURN person, COUNT(*) AS Infections\nORDER BY Infections DESC\nLIMIT 1\n")),(0,r.kt)("ol",{start:8},(0,r.kt)("li",{parentName:"ol"},"What carriers had contact with the person who was exposed the most ?")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"MATCH (carrier:Person)-[rel:Info]->(person:Person)\nWITH person, COUNT(*) AS Infections\nORDER BY Infections DESC\nLIMIT 1\nMATCH (person:Person)<-[r]-(p)\nRETURN person, r, p\n")),(0,r.kt)("ol",{start:9},(0,r.kt)("li",{parentName:"ol"},"Who in ",(0,r.kt)("inlineCode",{parentName:"li"},"Cordon A")," did not infect anyone ?")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"MATCH (a)\nWHERE NOT(a:Person)-[:Info]->()\nAND a.Addr = 'CordonA'\nRETURN a\n")),(0,r.kt)("ol",{start:10},(0,r.kt)("li",{parentName:"ol"},"Select carrier that infected the most of their own cordon:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"MATCH (carrier:Person)-[r]->(person:Person)\nWHERE carrier.Addr = person.Addr\nWITH carrier, COUNT(*) AS Infections\nORDER BY Infections DESC\nLIMIT 2\nMATCH (p:Person)<-[r]-(carrier)\nRETURN p,r,carrier\n")),(0,r.kt)("ol",{start:11},(0,r.kt)("li",{parentName:"ol"},"Show the path of the infection between ",(0,r.kt)("inlineCode",{parentName:"li"},"Person K")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"Person L"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"MATCH path=(p1:Person{name:'PersonK'})-[*]->(p2:Person{name:'PersonL'})\nRETURN path\n")))}d.isMDXComponent=!0},56790:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/Neo4j_Corona_Tracing_01-79aae8564f75a2616d4d2bb73ddb8cfe.png"},56388:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/Neo4j_Corona_Tracing_02-2c261ef179eb058debd03802e31b9b77.png"},47182:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/Neo4j_Corona_Tracing_03-1530146f0e54d39eeaab936f98329bc5.png"},9541:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/Neo4j_Corona_Tracing_04-26552a84e5c895556cc8ed7e415dcf72.png"},35819:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/Neo4j_Corona_Tracing_05-1c757541c2021a9be1c4344e170af57c.png"},98625:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-bf32e31d830e30e5cb1eea79bad7f27d.jpg"}}]);