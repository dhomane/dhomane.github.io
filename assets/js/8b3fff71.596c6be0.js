"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[51757],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>m});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),p=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},c=function(e){var n=p(e.components);return r.createElement(l.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},g=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),g=p(t),m=a,d=g["".concat(l,".").concat(m)]||g[m]||u[m]||i;return t?r.createElement(d,o(o({ref:n},c),{},{components:t})):r.createElement(d,o({ref:n},c))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=g;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var p=2;p<i;p++)o[p]=t[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}g.displayName="MDXCreateElement"},52902:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var r=t(87462),a=(t(67294),t(3905));const i={sidebar_position:9070,slug:"2019-11-07",title:"Building an RTMP Streaming Server with Podman",authors:"mpolinowski",tags:["LINUX","Smarthome","IoT","Docker","NGINX"]},o=void 0,s={unversionedId:"DevOps/NGINX/2019-11-07--nginx-rtmp-streaming-container/index",id:"DevOps/NGINX/2019-11-07--nginx-rtmp-streaming-container/index",title:"Building an RTMP Streaming Server with Podman",description:"Harbin, China",source:"@site/docs/DevOps/NGINX/2019-11-07--nginx-rtmp-streaming-container/index.mdx",sourceDirName:"DevOps/NGINX/2019-11-07--nginx-rtmp-streaming-container",slug:"/DevOps/NGINX/2019-11-07--nginx-rtmp-streaming-container/2019-11-07",permalink:"/docs/DevOps/NGINX/2019-11-07--nginx-rtmp-streaming-container/2019-11-07",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/DevOps/NGINX/2019-11-07--nginx-rtmp-streaming-container/index.mdx",tags:[{label:"LINUX",permalink:"/docs/tags/linux"},{label:"Smarthome",permalink:"/docs/tags/smarthome"},{label:"IoT",permalink:"/docs/tags/io-t"},{label:"Docker",permalink:"/docs/tags/docker"},{label:"NGINX",permalink:"/docs/tags/nginx"}],version:"current",sidebarPosition:9070,frontMatter:{sidebar_position:9070,slug:"2019-11-07",title:"Building an RTMP Streaming Server with Podman",authors:"mpolinowski",tags:["LINUX","Smarthome","IoT","Docker","NGINX"]},sidebar:"tutorialSidebar",previous:{title:"Adding an OBS Stream to your Website",permalink:"/docs/DevOps/NGINX/2019-11-08--nginx-rtmp-website/2019-11-08"},next:{title:"NGINX Ingress with Cert-Manager",permalink:"/docs/DevOps/NGINX/2019-02-05--nginx-ingress-cert-manager/2019-02-05"}},l={},p=[{value:"Building the Docker Image",id:"building-the-docker-image",level:2},{value:"Preparing Ubuntu",id:"preparing-ubuntu",level:3},{value:"Installing NGINX",id:"installing-nginx",level:3},{value:"Configuring NGINX to use RTMP",id:"configuring-nginx-to-use-rtmp",level:3},{value:"Open Broadcaster Software",id:"open-broadcaster-software",level:3},{value:"Backup Default NGINX Config",id:"backup-default-nginx-config",level:2}],c={toc:p};function u(e){let{components:n,...i}=e;return(0,a.kt)("wrapper",(0,r.Z)({},c,i,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Harbin, China",src:t(91365).Z,width:"1500",height:"648"})),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#building-the-docker-image"},"Building the Docker Image"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#preparing-ubuntu"},"Preparing Ubuntu")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#installing-nginx"},"Installing NGINX")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#configuring-nginx-to-use-rtmp"},"Configuring NGINX to use RTMP")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#open-broadcaster-software"},"Open Broadcaster Software")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#installing-ffmpeg"},"Installing ffmpeg")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#create-directories"},"Create Directories")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#configuring-nginx"},"Configuring NGINX")))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#backup-default-nginx-config"},"Backup Default NGINX Config"))),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("a",{parentName:"p",href:"https://obsproject.com/forum/resources/how-to-set-up-your-own-private-rtmp-server-using-nginx.50/"},"This is an update / modified version of this tutorial on obsproject.com"))),(0,a.kt)("h2",{id:"building-the-docker-image"},"Building the Docker Image"),(0,a.kt)("h3",{id:"preparing-ubuntu"},"Preparing Ubuntu"),(0,a.kt)("p",null,"Start by pulling the latest ",(0,a.kt)("a",{parentName:"p",href:"https://hub.docker.com/_/ubuntu"},"Ubuntu Image from DockerHub")," and recommit it with a descriptive name:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"docker pull ubuntu\npodman run ubuntu:latest\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"podman ps -a\nCONTAINER ID  IMAGE                     COMMAND      CREATED\ncd3d48f2ca99  localhost/ubuntu:latest   /bin/bash    7 seconds ago\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"podman commit --author 'Mike Polinowski' cd3d48f2ca99 nginx-rtmp-streamer\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"podman images\n\nREPOSITORY                       TAG            IMAGE ID       CREATED          SIZE\nlocalhost/nginx-rtmp-streamer    latest         603c26d12092   30 seconds ago   66.6 MB\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"podman run \\\n    --name rtmp \\\n    --net=host \\\n    --privileged \\\n    --rm \\\n    -ti -u root localhost/nginx-rtmp-streamer /bin/bash\n")),(0,a.kt)("h3",{id:"installing-nginx"},"Installing NGINX"),(0,a.kt)("p",null,"Make sure you have the necessary tools to build ",(0,a.kt)("inlineCode",{parentName:"p"},"nginx")," using the following command::"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"apt update && apt upgrade\napt install build-essential libpcre3 libpcre3-dev libssl-dev wget unzip zlibc zlib1g zlib1g-dev nano\n")),(0,a.kt)("p",null,"From your home directory, download and unpack the ",(0,a.kt)("a",{parentName:"p",href:"http://nginx.org/en/download.html"},"latest version of the nginx source code"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"cd ~\nwget http://nginx.org/download/nginx-1.16.1.tar.gz\ntar -zxvf nginx-1.16.1.tar.gz\n")),(0,a.kt)("p",null,"Next, get and unpack the RTMP module source code from git:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"wget https://github.com/sergey-dryabzhinsky/nginx-rtmp-module/archive/dev.zip\nunzip dev.zip\n")),(0,a.kt)("p",null,"Now to building ",(0,a.kt)("inlineCode",{parentName:"p"},"nginx"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"cd nginx-1.16.1\n./configure --with-http_ssl_module --add-module=../nginx-rtmp-module-dev\nmake\nmake install\n")),(0,a.kt)("p",null,"By default it installs to ",(0,a.kt)("inlineCode",{parentName:"p"},"/usr/local/nginx"),". You can start it with:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"/usr/local/nginx/sbin/nginx\n")),(0,a.kt)("p",null,"And to test to make sure ",(0,a.kt)("inlineCode",{parentName:"p"},"nginx")," is running, point your browser to ",(0,a.kt)("inlineCode",{parentName:"p"},"http://<your server ip>/"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"Welcome to nginx!\nIf you see this page, the nginx web server is successfully installed and working. Further configuration is required.\n\nFor online documentation and support please refer to nginx.org.\nCommercial support is available at nginx.com.\n\nThank you for using nginx.\n")),(0,a.kt)("h3",{id:"configuring-nginx-to-use-rtmp"},"Configuring NGINX to use RTMP"),(0,a.kt)("p",null,"Open your config file, located by default at ",(0,a.kt)("inlineCode",{parentName:"p"},"/usr/local/nginx/conf/nginx.conf")," and add the following at the very end of the file:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cfg"},"rtmp {\n        server {\n                listen 1935;\n                chunk_size 4096;\n\n                application live {\n                        live on;\n                        record off;\n                }\n        }\n}\n")),(0,a.kt)("p",null,"This is an extremely basic configuration with a 'live' application that simply forwards the RTMP stream on to whoever requests it. ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/arut/nginx-rtmp-module/wiki/Directives"},"Here's the whole configuration guide"),", which shows you how to forward streams to other places (such as Twitch), save recordings of uploads, output stats, etc."),(0,a.kt)("p",null,"Restart nginx with:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"/usr/local/nginx/sbin/nginx -s stop\n/usr/local/nginx/sbin/nginx\n")),(0,a.kt)("h3",{id:"open-broadcaster-software"},"Open Broadcaster Software"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"NGINX RTMP Streaming Server",src:t(14240).Z,width:"1077",height:"1029"})),(0,a.kt)("p",null,"We can now configure the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/obsproject/obs-studio/wiki/Install-Instructions"},"OBS Studio software")," to push camera streams to our RTMP server. Create a new profile in OBS, and change your Broadcast Settings:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"Streaming Service: Custom\nServer: rtmp://<your server ip>/live\nPlay Path/Stream Key: test\n")),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"NGINX RTMP Streaming Server",src:t(92610).Z,width:"979",height:"227"})),(0,a.kt)("p",null,"Save your settings and click on ",(0,a.kt)("strong",{parentName:"p"},"Start Streaming"),":"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"NGINX RTMP Streaming Server",src:t(23226).Z,width:"1080",height:"347"})),(0,a.kt)("p",null,"You can access the RTMP stream with a software like the ",(0,a.kt)("a",{parentName:"p",href:"https://www.videolan.org/vlc/index.html"},"VLC Player")," via the following URL:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"rtmp://<your server ip>/live/test\n")),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"NGINX RTMP Streaming Server",src:t(77135).Z,width:"880",height:"512"})),(0,a.kt)("p",null,"You should be able to see the broadcasted video stream:"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"NGINX RTMP Streaming Server",src:t(91919).Z,width:"1280",height:"845"})),(0,a.kt)("p",null,"Adding user authentication:"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"NGINX RTMP Streaming Server",src:t(8204).Z,width:"979",height:"520"})),(0,a.kt)("h2",{id:"backup-default-nginx-config"},"Backup Default NGINX Config"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cfg"},"#user  nobody;\nworker_processes  1;\n\n#error_log  logs/error.log;\n#error_log  logs/error.log  notice;\n#error_log  logs/error.log  info;\n\n#pid        logs/nginx.pid;\n\n\nevents {\n    worker_connections  1024;\n}\n\n\nhttp {\n    include       mime.types;\n    default_type  application/octet-stream;\n\n    #log_format  main  '$remote_addr - $remote_user [$time_local] '$request' '\n    #                  '$status $body_bytes_sent '$http_referer' '\n    #                  ''$http_user_agent' '$http_x_forwarded_for'';\n\n    #access_log  logs/access.log  main;\n\n    sendfile        on;\n    #tcp_nopush     on;\n\n    #keepalive_timeout  0;\n    keepalive_timeout  65;\n\n    #gzip  on;\n\n    server {\n        listen       80;\n        server_name  localhost;\n\n        #charset koi8-r;\n\n        #access_log  logs/host.access.log  main;\n\n        location / {\n            root   html;\n            index  index.html index.htm;\n        }\n\n        #error_page  404              /404.html;\n\n        # redirect server error pages to the static page /50x.html\n        #\n        error_page   500 502 503 504  /50x.html;\n        location = /50x.html {\n            root   html;\n        }\n\n        # proxy the PHP scripts to Apache listening on 127.0.0.1:80\n        #\n        #location ~ \\.php$ {\n        #    proxy_pass   http://127.0.0.1;\n        #}\n\n        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000\n        #\n        #location ~ \\.php$ {\n        #    root           html;\n        #    fastcgi_pass   127.0.0.1:9000;\n        #    fastcgi_index  index.php;\n        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;\n        #    include        fastcgi_params;\n        #}\n\n        # deny access to .htaccess files, if Apache's document root\n        # concurs with nginx's one\n        #\n        #location ~ /\\.ht {\n        #    deny  all;\n        #}\n    }\n\n\n    # another virtual host using mix of IP-, name-, and port-based configuration\n    #\n    #server {\n    #    listen       8000;\n    #    listen       somename:8080;\n    #    server_name  somename  alias  another.alias;\n\n    #    location / {\n    #        root   html;\n    #        index  index.html index.htm;\n    #    }\n    #}\n\n\n    # HTTPS server\n    #\n    #server {\n    #    listen       443 ssl;\n    #    server_name  localhost;\n\n    #    ssl_certificate      cert.pem;\n    #    ssl_certificate_key  cert.key;\n\n    #    ssl_session_cache    shared:SSL:1m;\n    #    ssl_session_timeout  5m;\n\n    #    ssl_ciphers  HIGH:!aNULL:!MD5;\n    #    ssl_prefer_server_ciphers  on;\n\n    #    location / {\n    #        root   html;\n    #        index  index.html index.htm;\n    #    }\n    #}\n\n}\n# rtmp {\n#         server {\n#                 listen 1935;\n#                 chunk_size 4096;\n#\n#                 application live {\n#                         live on;\n#                         record off;\n#                 }\n#         }\n# }\n")))}u.isMDXComponent=!0},14240:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/NGINX_RTMP_Streaming_Server_01-69f308ece745e21c3f75b9ee8029eee2.png"},92610:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/NGINX_RTMP_Streaming_Server_02-03b071c7f43760e7817b4a20e4a289fb.png"},23226:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/NGINX_RTMP_Streaming_Server_03-a9effb74c5227ef2e4244a4f3a1bf170.png"},77135:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/NGINX_RTMP_Streaming_Server_04-7e94b3dcc560940e1265259065cdd113.png"},91919:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/NGINX_RTMP_Streaming_Server_05-ca595050628366b4e71cf96cb5e00e15.png"},8204:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/NGINX_RTMP_Streaming_Server_06-27653abe835f694749b146e5c0229242.png"},91365:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-a49da2e46d0434afa26b613f7bedf7db.jpg"}}]);