"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[39358],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>f});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},s=Object.keys(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=r.createContext({}),p=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},c=function(e){var n=p(e.components);return r.createElement(l.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,s=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=p(t),f=o,v=u["".concat(l,".").concat(f)]||u[f]||d[f]||s;return t?r.createElement(v,a(a({ref:n},c),{},{components:t})):r.createElement(v,a({ref:n},c))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var s=t.length,a=new Array(s);a[0]=u;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i.mdxType="string"==typeof e?e:o,a[1]=i;for(var p=2;p<s;p++)a[p]=t[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},6214:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>s,metadata:()=>i,toc:()=>p});var r=t(87462),o=(t(67294),t(3905));const s={sidebar_position:7e3,slug:"2021-01-23",title:"Node.js FTP Server",authors:"mpolinowski",tags:["LINUX","Javascript","Node"]},a=void 0,i={unversionedId:"DevOps/Provisioning/2021-01-23-nodejs-file-server/index",id:"DevOps/Provisioning/2021-01-23-nodejs-file-server/index",title:"Node.js FTP Server",description:"Shenzhen, China",source:"@site/docs/DevOps/Provisioning/2021-01-23-nodejs-file-server/index.md",sourceDirName:"DevOps/Provisioning/2021-01-23-nodejs-file-server",slug:"/DevOps/Provisioning/2021-01-23-nodejs-file-server/2021-01-23",permalink:"/docs/DevOps/Provisioning/2021-01-23-nodejs-file-server/2021-01-23",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/DevOps/Provisioning/2021-01-23-nodejs-file-server/index.md",tags:[{label:"LINUX",permalink:"/docs/tags/linux"},{label:"Javascript",permalink:"/docs/tags/javascript"},{label:"Node",permalink:"/docs/tags/node"}],version:"current",sidebarPosition:7e3,frontMatter:{sidebar_position:7e3,slug:"2021-01-23",title:"Node.js FTP Server",authors:"mpolinowski",tags:["LINUX","Javascript","Node"]},sidebar:"tutorialSidebar",previous:{title:"ownCloud Infinite Scale Stack",permalink:"/docs/DevOps/Provisioning/2021-01-27-owncloud-ocis/2021-01-27"},next:{title:"File Transfer Tool in Node.js",permalink:"/docs/DevOps/Provisioning/2021-01-22-file-transfer-tools-in-nodejs/2021-01-22"}},l={},p=[{value:"Setup",id:"setup",level:2},{value:"Dependencies",id:"dependencies",level:3},{value:"Environment Variables",id:"environment-variables",level:3},{value:"Server Script",id:"server-script",level:3},{value:"Run your Server",id:"run-your-server",level:2},{value:"Adding Encryption /doesn&#39;t work",id:"adding-encryption-doesnt-work",level:2}],c={toc:p};function d(e){let{components:n,...s}=e;return(0,o.kt)("wrapper",(0,r.Z)({},c,s,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Shenzhen, China",src:t(53664).Z,width:"1500",height:"597"})),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#setup"},"Setup"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#dependencies"},"Dependencies")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#environment-variables"},"Environment Variables")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#server-script"},"Server Script")))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#run-your-server"},"Run your Server")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#adding-encryption-doesnt-work"},"Adding Encryption /doesn't work"))),(0,o.kt)("p",null,"I want to use the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/nodeftpd/nodeftpd"},"nodeftp")," package to set up an FTP server for my IP camera."),(0,o.kt)("h2",{id:"setup"},"Setup"),(0,o.kt)("p",null,"Create a folder ",(0,o.kt)("inlineCode",{parentName:"p"},"/opt/ftpd")," and initialize your project:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"mkdir -p /opt/ftpd/ftproot && cd /opt/ftpd\nnpm init\n")),(0,o.kt)("h3",{id:"dependencies"},"Dependencies"),(0,o.kt)("p",null,"Then install the following dependencies:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm install dotenv\nnpm install fs\nnpm install ftpd\nnpm install path\n")),(0,o.kt)("h3",{id:"environment-variables"},"Environment Variables"),(0,o.kt)("p",null,"Now we need a few environment variables to define our server parameter and user authentication credentials:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"nano .env\n")),(0,o.kt)("p",null,"Add the following variables - make sure to change the host ",(0,o.kt)("strong",{parentName:"p"},"IP")," to the IP address of your server:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cfg"},"IP = '192.168.2.111'\nPORT = 9876\nUSER = ftpuser\nPWD = password\n")),(0,o.kt)("h3",{id:"server-script"},"Server Script"),(0,o.kt)("p",null,"Now to the server itself - create a file ",(0,o.kt)("inlineCode",{parentName:"p"},"index.js"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const ftpd = require('ftpd')\nconst fs = require('fs')\nconst path = require('path')\n\nrequire('dotenv').config()\n\nvar keyFile\nvar certFile\nvar server\n\n// use the IP and PORT from the .env file or default to localhost:21\nvar options = {\n  host: process.env.IP || '127.0.0.1',\n  port: process.env.PORT || 21,\n  tls: null,\n}\n\n// Check if SSL KEY / CERT are provided ELSE start without SSL support\nif (process.env.KEY_FILE && process.env.CERT_FILE) {\n  console.log('Running as FTPS server')\n  if (process.env.KEY_FILE.charAt(0) !== '/') {\n    keyFile = path.join(__dirname, process.env.KEY_FILE)\n  }\n  if (process.env.CERT_FILE.charAt(0) !== '/') {\n    certFile = path.join(__dirname, process.env.CERT_FILE)\n  }\n  options.tls = {\n    key: fs.readFileSync(keyFile),\n    cert: fs.readFileSync(certFile),\n    ca: !process.env.CA_FILES\n      ? null\n      : process.env.CA_FILES.split(':').map(function (f) {\n          return fs.readFileSync(f)\n        }),\n  }\n} else {\n  console.log()\n  console.log('###### To run as FTPS server, #####')\n  console.log('### set \"KEY_FILE\", \"CERT_FILE\" ###')\n  console.log('###### or \"CA_FILES\" env vars. ####')\n  console.log()\n}\n\n// get ftp root directory listing\nserver = new ftpd.FtpServer(options.host, {\n  getInitialCwd: function () {\n    return '/ftproot'\n  },\n  getRoot: function () {\n    return process.cwd()\n  },\n  pasvPortRangeStart: 1025,\n  pasvPortRangeEnd: 1050,\n  tlsOptions: options.tls,\n  allowUnauthorizedTls: true,\n  useWriteFile: false,\n  useReadFile: false,\n  uploadMaxSlurpSize: 7000, // N/A unless 'useWriteFile' is true.\n  allowedCommands: [\n    'XMKD',\n    'AUTH',\n    'TLS',\n    'SSL',\n    'USER',\n    'PASS',\n    'PWD',\n    'OPTS',\n    'TYPE',\n    'PORT',\n    'PASV',\n    'LIST',\n    'CWD',\n    'MKD',\n    'SIZE',\n    'STOR',\n    'MDTM',\n    'DELE',\n    'QUIT',\n  ],\n})\n\nserver.on('error', function (error) {\n  console.log('FTP Server error:', error)\n})\n\n// verify user and password from .env file\nserver.on('client:connected', function (connection) {\n  var username = null\n\n  console.log('client connected: ' + connection.remoteAddress)\n\n  connection.on('command:user', function (user, success, failure) {\n    if (user) {\n      username = process.env.USER\n      success()\n    } else {\n      failure()\n    }\n  })\n\n  connection.on('command:pass', function (pass, success, failure) {\n    if (process.env.PWD) {\n      success(username)\n    } else {\n      failure()\n    }\n  })\n})\n\nserver.debugging = 4\nserver.listen(options.port)\nconsole.log('Listening on port ' + options.port)\n")),(0,o.kt)("h2",{id:"run-your-server"},"Run your Server"),(0,o.kt)("p",null,"You can start the server with ",(0,o.kt)("inlineCode",{parentName:"p"},"node index.js")," or by creating an ",(0,o.kt)("inlineCode",{parentName:"p"},"npm start")," script and connect to your server using an FTP Client like Filezilla:"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"ftpd Nodejs FTP Server",src:t(47978).Z,width:"999",height:"704"})),(0,o.kt)("h2",{id:"adding-encryption-doesnt-work"},"Adding Encryption /doesn't work"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"mkdir certs && cd certs\nopenssl req -new -x509 -sha256 -newkey rsa:2048 -nodes -keyout key.pem -days 365 -out cert.pem\n")),(0,o.kt)("p",null,"Add the following variables - make sure to change the host ",(0,o.kt)("strong",{parentName:"p"},"IP")," to the IP address of your server:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cfg"},"IP = '192.168.2.111'\nPORT = 9876\nUSER = ftpuser\nPWD = password\nCERT_FILE = './certs/cert.pem'\nKEY_FILE = './certs/key.pem'\n")),(0,o.kt)("p",null,"I am getting deprecation warnings and could not get my client to connect:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm start\n\n> node-file-server@1.0.0 start /opt/ftpd\n> node index.js\n\nRunning as FTPS server\nListening on port 9876\nclient connected: undefined\nAccepted a new client connection\n<::ffff:192.168.2.112> >> 220 FTP server (nodeftpd) ready\n<::ffff:192.168.2.112> << AUTH TLS\n<::ffff:192.168.2.112> FTP command: AUTH TLS\n<::ffff:192.168.2.112> >> 234 Honored\n<::ffff:192.168.2.112> Establishing secure connection...\n(node:44550) [DEP0064] DeprecationWarning: tls.createSecurePair() is deprecated. Please use tls.TLSSocket instead.\n(Use `node --trace-deprecation ...` to show where the warning was created)\n/opt/ftpd/node_modules/ftpd/lib/starttls.js:62\n    var verifyError = (pair._ssl || pair.ssl).verifyError();\n                                              ^\n\nTypeError: Cannot read property 'verifyError' of undefined\n    at SecurePair.<anonymous> (/opt/ftpd/node_modules/ftpd/lib/starttls.js:62:47)\n    at SecurePair.emit (events.js:315:20)\n    at TLSSocket.<anonymous> (tls.js:322:46)\n    at Object.onceWrapper (events.js:421:28)\n    at TLSSocket.emit (events.js:315:20)\n    at TLSSocket._finishInit (_tls_wrap.js:932:8)\n    at TLSWrap.onhandshakedone (_tls_wrap.js:149:9)\n    at DuplexSocket.ondata (internal/js_stream_socket.js:77:22)\n    at DuplexSocket.emit (events.js:315:20)\n    at addChunk (internal/streams/readable.js:309:12)\nnpm ERR! code ELIFECYCLE\nnpm ERR! errno 1\nnpm ERR! node-file-server@1.0.0 start: `node index.js`\nnpm ERR! Exit status 1\nnpm ERR!\nnpm ERR! Failed at the node-file-server@1.0.0 start script.\nnpm ERR! This is probably not a problem with npm. There is likely additional logging output above.\n\nnpm ERR! A complete log of this run can be found in:\nnpm ERR!     /root/.npm/_logs/2021-02-03T10_59_40_679Z-debug.log\n")))}d.isMDXComponent=!0},47978:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/ftpd_Nodejs_FTP_Server_01-02e23e34af41ea8ff26d4aff37b96a39.png"},53664:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-91a640c918f5f3896f219eb8a3a3ead0.jpg"}}]);