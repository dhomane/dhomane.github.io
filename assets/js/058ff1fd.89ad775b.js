"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[31926],{3905:(e,n,t)=>{t.d(n,{Zo:()=>m,kt:()=>d});var a=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=a.createContext({}),l=function(e){var n=a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},m=function(e){var n=l(e.components);return a.createElement(c.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,r=e.originalType,c=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),u=l(t),d=o,h=u["".concat(c,".").concat(d)]||u[d]||p[d]||r;return t?a.createElement(h,i(i({ref:n},m),{},{components:t})):a.createElement(h,i({ref:n},m))}));function d(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=t.length,i=new Array(r);i[0]=u;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var l=2;l<r;l++)i[l]=t[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},61193:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>r,metadata:()=>s,toc:()=>l});var a=t(87462),o=(t(67294),t(3905));const r={sidebar_position:3970,slug:"2022-11-16",title:"Deploy Mautic with Hashicorp Nomad",authors:"mpolinowski",tags:["Nomad","Consul","LINUX"],description:"Using Nomad to deploy the Mautic Marketing Automation Platform"},i=void 0,s={unversionedId:"DevOps/Hashicorp/2022-11-16-hashicorp-nomad-mautic/index",id:"DevOps/Hashicorp/2022-11-16-hashicorp-nomad-mautic/index",title:"Deploy Mautic with Hashicorp Nomad",description:"Using Nomad to deploy the Mautic Marketing Automation Platform",source:"@site/docs/DevOps/Hashicorp/2022-11-16-hashicorp-nomad-mautic/index.md",sourceDirName:"DevOps/Hashicorp/2022-11-16-hashicorp-nomad-mautic",slug:"/DevOps/Hashicorp/2022-11-16-hashicorp-nomad-mautic/2022-11-16",permalink:"/docs/DevOps/Hashicorp/2022-11-16-hashicorp-nomad-mautic/2022-11-16",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/DevOps/Hashicorp/2022-11-16-hashicorp-nomad-mautic/index.md",tags:[{label:"Nomad",permalink:"/docs/tags/nomad"},{label:"Consul",permalink:"/docs/tags/consul"},{label:"LINUX",permalink:"/docs/tags/linux"}],version:"current",sidebarPosition:3970,frontMatter:{sidebar_position:3970,slug:"2022-11-16",title:"Deploy Mautic with Hashicorp Nomad",authors:"mpolinowski",tags:["Nomad","Consul","LINUX"],description:"Using Nomad to deploy the Mautic Marketing Automation Platform"},sidebar:"tutorialSidebar",previous:{title:"Deploy Grav CMS with Hashicorp Nomad",permalink:"/docs/DevOps/Hashicorp/2022-11-18-hashicorp-nomad-grav/2022-11-18"},next:{title:"Hashicorp Nomad for NGINX Load-balancing",permalink:"/docs/DevOps/Hashicorp/2022-11-15-hashicorp-nomad-nginx-load-balancing/2022-11-15"}},c={},l=[{value:"Docker-Compose",id:"docker-compose",level:2},{value:"Nomad Job",id:"nomad-job",level:2},{value:"Complete Job File",id:"complete-job-file",level:3}],m={toc:l};function p(e){let{components:n,...r}=e;return(0,o.kt)("wrapper",(0,a.Z)({},m,r,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Shen Zhen, China",src:t(73758).Z,width:"2230",height:"839"})),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#docker-compose"},"Docker-Compose")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#nomad-job"},"Nomad Job"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#complete-job-file"},"Complete Job File"))))),(0,o.kt)("h2",{id:"docker-compose"},"Docker-Compose"),(0,o.kt)("p",null,"To test the container we can use ",(0,o.kt)("inlineCode",{parentName:"p"},"docker compose up -d")," (see ",(0,o.kt)("a",{parentName:"p",href:"/docs/DevOps/Provisioning/2022-11-16--mautic-docker/2022-11-16"},"initial setup"),"):"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yml"},'version: "3.9"\n\nservices:\n  database:\n    image: mariadb:latest\n    container_name: mautic-db\n    environment:\n      MYSQL_ROOT_PASSWORD: mypassword\n    ports:\n      - "3306:3306"\n    volumes:\n      - mautic-db:/var/lib/mysql:rw\n    restart: always\n    networks:\n      - mauticnet\n    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_general_ci --sql-mode=""\n\n  mautic:\n    container_name: mautic\n    image: mautic/mautic:v4-apache\n    volumes:\n      - mautic-data:/var/www/html:rw\n    environment:\n      - MAUTIC_DB_HOST=database\n      - MAUTIC_DB_USER=root\n      - MAUTIC_DB_PASSWORD=mypassword\n      - MAUTIC_DB_NAME=mautic4\n      - MAUTIC_DB_TABLE_PREFIX=mautic4\n    restart: always\n    depends_on:\n      - database\n    links:\n      - database\n    networks:\n      - mauticnet\n    ports:\n      - "8888:80"\n\nnetworks:\n  mauticnet:\n\nvolumes:\n  mautic-db:\n  mautic-data:\n')),(0,o.kt)("h2",{id:"nomad-job"},"Nomad Job"),(0,o.kt)("p",null,"In Nomad we first need to create the volumes on our host in ",(0,o.kt)("em",{parentName:"p"},"/etc/nomad.d/client.hcl")," and then define it here:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'volume "mautic_db" {\n    type      = "host"\n    read_only = false\n    source    = "mautic_db"\n}\n\nvolume "mautic_data" {\n    type      = "host"\n    read_only = false\n    source    = "mautic_data"\n}\n')),(0,o.kt)("p",null,"It can then be mounted into the container:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'volume_mount {\n    volume      = "mautic_db"\n    destination = "/var/lib/mysql"\n    read_only   = false\n}\n\nvolume_mount {\n    volume      = "mautic_data"\n    destination = "/var/www/html"\n    read_only   = false\n}\n')),(0,o.kt)("h3",{id:"complete-job-file"},"Complete Job File"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'job "mautic" {\n  datacenters = ["dc1"]\n    group "mautic" {\n        \n        network {\n            mode = "host"\n            port "tcp" {\n                static = 3306\n            }\n            port "http" {\n                static = 80\n            }\n        }\n\n        update {\n            max_parallel = 1\n            min_healthy_time  = "10s"\n            healthy_deadline  = "5m"\n            progress_deadline = "10m"\n            auto_revert = true\n            auto_promote = true\n            canary = 1\n        }\n\n        restart {\n            attempts = 10\n            interval = "5m"\n            delay    = "25s"\n            mode     = "delay"\n        }\n\n        volume "mautic_db" {\n            type      = "host"\n            read_only = false\n            source    = "mautic_db"\n        }\n\n        volume "mautic_data" {\n            type      = "host"\n            read_only = false\n            source    = "mautic_data"\n        }\n\n        service {\n            name = "mautic-db"\n            port = "tcp"\n            tags = [\n                "database"\n            ]\n\n            check {\n                name     = "DB Health"\n                port     = "tcp"\n                type     = "tcp"\n                interval = "30s"\n                timeout  = "4s"\n            }\n        }\n\n        service {\n            name = "mautic-frontend"\n            port = "http"\n            tags = [\n                "frontend"\n            ]\n\n            check {\n                name     = "HTTP Health"\n                path     = "/"\n                type     = "http"\n                protocol = "http"\n                interval = "10s"\n                timeout  = "2s"\n            }\n        }\n\n        task "mautic-db" {\n            driver = "docker"\n\n            config {\n                image = "mariadb:latest"\n                ports = ["tcp"]\n                network_mode = "host"\n                force_pull = false\n            }\n\n            volume_mount {\n                volume      = "mautic_db"\n                destination = "/var/lib/mysql" # <-- inside container\n                read_only   = false\n            }\n\n            env {\n                MYSQL_ROOT_PASSWORD = "mypassword"\n                MYSQL_USER = "mautic4"\n                MYSQL_PASSWORD = "mypassword"\n                MYSQL_DATABASE = "mautic4"\n                CONTAINER_NAME = "127.0.0.1"\n            }\n        }\n\n        task "mautic-frontend" {\n            driver = "docker"\n\n            volume_mount {\n                volume      = "mautic_data"\n                destination = "/var/www/html"\n                read_only   = false\n            }\n\n            config {\n                image = "mautic/mautic:v4-apache"\n                ports = ["http"]\n                network_mode = "host"\n                force_pull = false\n            }\n\n            env {\n              MAUTIC_DB_HOST = "127.0.0.1"\n              MAUTIC_DB_USER = "mautic4"\n              MAUTIC_DB_PASSWORD = "mypassword"\n              MAUTIC_DB_NAME = "mautic4"\n              MAUTIC_DB_TABLE_PREFIX = "mautic4"\n            }\n\n            resources {\n                cpu    = 1000\n                memory = 1024\n            }\n        }\n    }\n}\n')))}p.isMDXComponent=!0},73758:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-6c1edb088dfea3a7d39f8eebb8e9dc23.jpg"}}]);