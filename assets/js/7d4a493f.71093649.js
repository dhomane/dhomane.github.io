"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[18937],{3905:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>m});var a=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=a.createContext({}),l=function(e){var n=a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},s=function(e){var n=l(e.components);return a.createElement(c.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),u=l(t),m=r,v=u["".concat(c,".").concat(m)]||u[m]||d[m]||i;return t?a.createElement(v,o(o({ref:n},s),{},{components:t})):a.createElement(v,o({ref:n},s))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,o=new Array(i);o[0]=u;var p={};for(var c in n)hasOwnProperty.call(n,c)&&(p[c]=n[c]);p.originalType=e,p.mdxType="string"==typeof e?e:r,o[1]=p;for(var l=2;l<i;l++)o[l]=t[l];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},1385:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>p,toc:()=>l});var a=t(87462),r=(t(67294),t(3905));const i={sidebar_position:7010,slug:"2021-12-02",title:"OpenCV, Streams and Video Files",authors:"mpolinowski",tags:["Machine Learning","Python","OpenCV"]},o=void 0,p={unversionedId:"IoT-and-Machine-Learning/ML/2021-12-02--opencv-with-videos/index",id:"IoT-and-Machine-Learning/ML/2021-12-02--opencv-with-videos/index",title:"OpenCV, Streams and Video Files",description:"Shenzhen, China",source:"@site/docs/IoT-and-Machine-Learning/ML/2021-12-02--opencv-with-videos/index.md",sourceDirName:"IoT-and-Machine-Learning/ML/2021-12-02--opencv-with-videos",slug:"/IoT-and-Machine-Learning/ML/2021-12-02--opencv-with-videos/2021-12-02",permalink:"/docs/IoT-and-Machine-Learning/ML/2021-12-02--opencv-with-videos/2021-12-02",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/IoT-and-Machine-Learning/ML/2021-12-02--opencv-with-videos/index.md",tags:[{label:"Machine Learning",permalink:"/docs/tags/machine-learning"},{label:"Python",permalink:"/docs/tags/python"},{label:"OpenCV",permalink:"/docs/tags/open-cv"}],version:"current",sidebarPosition:7010,frontMatter:{sidebar_position:7010,slug:"2021-12-02",title:"OpenCV, Streams and Video Files",authors:"mpolinowski",tags:["Machine Learning","Python","OpenCV"]},sidebar:"tutorialSidebar",previous:{title:"OpenCV Image Operations",permalink:"/docs/IoT-and-Machine-Learning/ML/2021-12-03--opencv-image-operations/2021-12-03"},next:{title:"OpenCV and Images",permalink:"/docs/IoT-and-Machine-Learning/ML/2021-12-01--opencv-with-images/2021-12-01"}},c={},l=[{value:"Setup OpenCV",id:"setup-opencv",level:2},{value:"Webcam Capture",id:"webcam-capture",level:2},{value:"IP Camera Capture",id:"ip-camera-capture",level:2},{value:"Video Stream Recording",id:"video-stream-recording",level:2},{value:"Playback Video Files",id:"playback-video-files",level:2}],s={toc:l};function d(e){let{components:n,...i}=e;return(0,r.kt)("wrapper",(0,a.Z)({},s,i,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Shenzhen, China",src:t(59657).Z,width:"2385",height:"919"})),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#setup-opencv"},"Setup OpenCV")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#webcam-capture"},"Webcam Capture")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#ip-camera-capture"},"IP Camera Capture")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#video-stream-recording"},"Video Stream Recording")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#playback-video-files"},"Playback Video Files"))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/mpolinowski/opencv-with-videos"},"Github Repo")),(0,r.kt)("h2",{id:"setup-opencv"},"Setup OpenCV"),(0,r.kt)("p",null,"Create and activate a virtual work environment:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"python -m venv .env\nsource .env/bin/activate\npython -m pip install --upgrade pip\n")),(0,r.kt)("p",null,"Add a file ",(0,r.kt)("inlineCode",{parentName:"p"},"dependencies.txt")," with all project ",(0,r.kt)("strong",{parentName:"p"},"pip dependencies"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"opencv-python\nnumpy\n")),(0,r.kt)("p",null,"Install all dependencies with:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"pip install -r dependencies.txt\n")),(0,r.kt)("h2",{id:"webcam-capture"},"Webcam Capture"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"import cv2\n\nwebcam = cv2.VideoCapture(0)\n\nwhile (True):\n    ret_, frame = webcam.read()\n    cv2.imshow(\"webcam\", frame)\n    if cv2.waitKey(1) & 0xFF == ord('q'):\n        webcam.release()\n        break\n\ncv2.destroyAllWindows()\n")),(0,r.kt)("h2",{id:"ip-camera-capture"},"IP Camera Capture"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"import cv2\nimport os\n\nRTSP_URL = 'rtsp://admin:instar@192.168.2.19/livestream/13'\n\nos.environ['OPENCV_FFMPEG_CAPTURE_OPTIONS'] = 'rtsp_transport;udp' # Use tcp instead of udp if stream is unstable\n\ncap = cv2.VideoCapture(RTSP_URL, cv2.CAP_FFMPEG)\n\nif not cap.isOpened():\n    print('Cannot open RTSP stream')\n    exit(-1)\n\nwhile True:\n    success, img = cap.read()\n    cv2.imshow('RTSP stream', img)\n\n    if cv2.waitKey(1) & 0xFF == ord('q'):  # Keep running until you press `q`\n        cap.release()\n        break\n\ncv2.destroyAllWindows()\n")),(0,r.kt)("h2",{id:"video-stream-recording"},"Video Stream Recording"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"import cv2\nimport os\n\nRTSP_URL = 'rtsp://admin:instar@192.168.2.19/livestream/13'\n\nos.environ['OPENCV_FFMPEG_CAPTURE_OPTIONS'] = 'rtsp_transport;udp' # Use tcp instead of udp if stream is unstable\n\ncap = cv2.VideoCapture(RTSP_URL, cv2.CAP_FFMPEG)\n\nif not cap.isOpened():\n    print('Cannot open RTSP stream')\n    exit(-1)\n\nframe_width = int(cap.get(3))\nframe_height = int(cap.get(4))\nfps = 15\n\nvideo_codec = cv2.VideoWriter_fourcc(*'XVID')\nvideo_output = cv2.VideoWriter('recording/captured_video.mp4', video_codec, fps, (frame_width, frame_height))\n\nwhile True:\n    ret, frame = cap.read()\n\n    if ret == True:\n        video_output.write(frame)\n        cv2.imshow(\"Video Recording\", frame)\n\n        if cv2.waitKey(1) & 0xFF == ord('q'):\n            break\n\n    else:\n        break\n\ncap.release()\nvideo_output.release()\ncv2.destroyAllWindows()\nprint('Video was saved!')\n")),(0,r.kt)("h2",{id:"playback-video-files"},"Playback Video Files"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'import cv2\n\ncap = cv2.VideoCapture("recording/captured_video.mp4")\n\nwhile (True):\n    ret, frame = cap.read()\n    cv2.imshow("Video Recording", frame)\n\n    if cv2.waitKey(1) & 0xFF == ord(\'q\'):\n        break\n\ncap.release()\ncv2.destroyAllWindows()\n')))}d.isMDXComponent=!0},59657:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-5a0b68587d9242bbb46a1f1aaab44216.jpg"}}]);