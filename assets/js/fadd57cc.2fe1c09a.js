"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[137],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>k});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),l=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=l(e.components);return r.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=l(n),k=a,m=u["".concat(p,".").concat(k)]||u[k]||d[k]||o;return n?r.createElement(m,i(i({ref:t},c),{},{components:n})):r.createElement(m,i({ref:t},c))}));function k(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=u;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},5857:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var r=n(87462),a=(n(67294),n(3905));const o={sidebar_position:6050,slug:"2021-09-09",title:"NGINX as a Proxy for Websockets",authors:"mpolinowski",tags:["Javascript","NGINX"]},i=void 0,s={unversionedId:"Development/Javascript/2021-09-09--websocket-NGINX/index",id:"Development/Javascript/2021-09-09--websocket-NGINX/index",title:"NGINX as a Proxy for Websockets",description:"Shenzhen, China",source:"@site/docs/Development/Javascript/2021-09-09--websocket-NGINX/index.md",sourceDirName:"Development/Javascript/2021-09-09--websocket-NGINX",slug:"/Development/Javascript/2021-09-09--websocket-NGINX/2021-09-09",permalink:"/docs/Development/Javascript/2021-09-09--websocket-NGINX/2021-09-09",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Development/Javascript/2021-09-09--websocket-NGINX/index.md",tags:[{label:"Javascript",permalink:"/docs/tags/javascript"},{label:"NGINX",permalink:"/docs/tags/nginx"}],version:"current",sidebarPosition:6050,frontMatter:{sidebar_position:6050,slug:"2021-09-09",title:"NGINX as a Proxy for Websockets",authors:"mpolinowski",tags:["Javascript","NGINX"]},sidebar:"tutorialSidebar",previous:{title:"Convert Alerts into Toasts",permalink:"/docs/Development/Javascript/2021-09-10--notifications-alerts-as-toast/2021-09-10"},next:{title:"HAProxy Loadbalancing and Websockets",permalink:"/docs/Development/Javascript/2021-09-09--websocket-HAproxy/2021-09-09"}},p={},l=[{value:"Building the Websocket Server",id:"building-the-websocket-server",level:2},{value:"Initialize the Project",id:"initialize-the-project",level:3},{value:"Websocket Application",id:"websocket-application",level:3},{value:"NGINX Configuration",id:"nginx-configuration",level:3},{value:"Docker",id:"docker",level:4},{value:"WS Client",id:"ws-client",level:3},{value:"Adding Encryption",id:"adding-encryption",level:2}],c={toc:l};function d(e){let{components:t,...o}=e;return(0,a.kt)("wrapper",(0,r.Z)({},c,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Shenzhen, China",src:n(14667).Z,width:"1500",height:"374"})),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#building-the-websocket-server"},"Building the Websocket Server"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#initialize-the-project"},"Initialize the Project")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#websocket-application"},"Websocket Application")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#nginx-configuration"},"NGINX Configuration"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#docker"},"Docker")))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#ws-client"},"WS Client")))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#adding-encryption"},"Adding Encryption"))),(0,a.kt)("p",null,"NGINX supports WebSocket by allowing a tunnel to be set up between a client and a backend server. For NGINX to send the Upgrade request from the client to the backend server, the ",(0,a.kt)("strong",{parentName:"p"},"Upgrade")," and ",(0,a.kt)("strong",{parentName:"p"},"Connection")," headers must be set explicitly, as in this example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'location /wsapp/ {\n    proxy_pass http://wsbackend;\n    proxy_http_version 1.1;\n    proxy_set_header Upgrade $http_upgrade;\n    proxy_set_header Connection "Upgrade";\n    proxy_set_header Host $host;\n}\n')),(0,a.kt)("h2",{id:"building-the-websocket-server"},"Building the Websocket Server"),(0,a.kt)("h3",{id:"initialize-the-project"},"Initialize the Project"),(0,a.kt)("p",null,"Initialize your Node.js App and install the ",(0,a.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/ws"},"websocket package")," using ",(0,a.kt)("strong",{parentName:"p"},"npm"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"npm init -y\nnpm install ws\n")),(0,a.kt)("h3",{id:"websocket-application"},"Websocket Application"),(0,a.kt)("p",null,"Create the server configuration:"),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"./server.js")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"port = 8080\nvar Msg = '';\nvar WebSocketServer = require('ws').Server\n    , wss = new WebSocketServer({port});\n    wss.on('connection', function(ws) {\n        ws.on('message', function(message) {\n        console.log('Received from client: %s', message);\n        ws.send('Server received from client: ' + message);\n    });\n });\nconsole.log(\"Websocket Server started on port \" + port);\n")),(0,a.kt)("p",null,"And execute the server with:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"node server.js\n")),(0,a.kt)("p",null,"The server prints an initial ",(0,a.kt)("inlineCode",{parentName:"p"},"Websocket Server started on port 8080")," message and then listens on port 8080, waiting for a client to connect to it. When it receives a client request, it echoes it and sends a message back to the client containing the message it received."),(0,a.kt)("h3",{id:"nginx-configuration"},"NGINX Configuration"),(0,a.kt)("p",null,"To have NGINX proxy the requests to our websocket app on the server IP ",(0,a.kt)("inlineCode",{parentName:"p"},"192.168.2.111"),", I create the following configuration:"),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"/opt/websocket/wsserver/nginx.conf")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},"worker_processes 1;\nworker_rlimit_nofile 8192;\n\nevents {\n  worker_connections  1024;\n}\n\nhttp {\n    map $http_upgrade $connection_upgrade {\n        default upgrade;\n        '' close;\n    }\n \n    upstream websocket {\n        server 192.168.2.111:8080;\n    }\n \n    server {\n        listen 8300;\n        location / {\n            proxy_pass http://websocket;\n            proxy_http_version 1.1;\n            proxy_set_header Upgrade $http_upgrade;\n            proxy_set_header Connection $connection_upgrade;\n            proxy_set_header Host $host;\n        }\n    }\n}\n")),(0,a.kt)("p",null,"The map block sets the ",(0,a.kt)("strong",{parentName:"p"},"Connection header")," to ",(0,a.kt)("inlineCode",{parentName:"p"},"close")," when the ",(0,a.kt)("strong",{parentName:"p"},"Upgrade header")," in the request is set to ''. NGINX listens on port ",(0,a.kt)("inlineCode",{parentName:"p"},"8300")," and proxies requests to the backend WebSocket server on port ",(0,a.kt)("inlineCode",{parentName:"p"},"8080"),". The ",(0,a.kt)("inlineCode",{parentName:"p"},"proxy_set_header")," directives enable NGINX to properly handle the WebSocket protocol."),(0,a.kt)("h4",{id:"docker"},"Docker"),(0,a.kt)("p",null,"I am going to use the ",(0,a.kt)("a",{parentName:"p",href:"https://hub.docker.com/_/nginx"},"NGINX docker image")," to spawn a container with the configuration above:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"docker pull nginx:1.21-alpine\ndocker run -d --name nginx --network=host -v /opt/websocket/wsserver/nginx.conf:/etc/nginx/nginx.conf:ro nginx:1.21-alpine \n")),(0,a.kt)("h3",{id:"ws-client"},"WS Client"),(0,a.kt)("p",null,"I can now install a websocket client called ",(0,a.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/wscat"},"wscat"),". I can use the program to connect to the server:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"npm install wscat -g\n\nwscat --connect ws://192.168.2.111:8300\nConnected (press CTRL+C to quit)\n> Konbanwa!\n< Server received from client: Konbanwa!\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"node server.js\nWebsocket Server started on Port 8080\nReceived from client: Konbanwa!\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"wscat")," connects to the WebSocket server through the NGINX proxy. When you type a message for wscat to send to the server, you see it echoed on the server and then a message from the server appears on the client."),(0,a.kt)("h2",{id:"adding-encryption"},"Adding Encryption"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"I already ran into some issues with HAProxy trying to add a self-signed TLS certificate. I will get back to this later (when I can set this up on server that is accessible via domain / CA cert)")))}d.isMDXComponent=!0},14667:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-dd2c04030bd344a6c433c240ed2c2bba.jpg"}}]);