"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[72837],{3905:(e,t,n)=>{n.d(t,{Zo:()=>o,kt:()=>m});var r=n(67294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,s=function(e,t){if(null==e)return{};var n,r,s={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var d=r.createContext({}),u=function(e){var t=r.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},o=function(e){var t=u(e.components);return r.createElement(d.Provider,{value:t},e.children)},i={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,s=e.mdxType,l=e.originalType,d=e.parentName,o=c(e,["components","mdxType","originalType","parentName"]),p=u(n),m=s,y=p["".concat(d,".").concat(m)]||p[m]||i[m]||l;return n?r.createElement(y,a(a({ref:t},o),{},{components:n})):r.createElement(y,a({ref:t},o))}));function m(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var l=n.length,a=new Array(l);a[0]=p;var c={};for(var d in t)hasOwnProperty.call(t,d)&&(c[d]=t[d]);c.originalType=e,c.mdxType="string"==typeof e?e:s,a[1]=c;for(var u=2;u<l;u++)a[u]=n[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},10136:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>a,default:()=>i,frontMatter:()=>l,metadata:()=>c,toc:()=>u});var r=n(87462),s=(n(67294),n(3905));const l={sidebar_position:6e3,slug:"2022-09-28",title:"NTS-Service and Authenticated Time Synchronization",authors:"mpolinowski",tags:["LINUX","Security"],description:"Building a client for a time service which uses IETF RFC 8915 called \u201cNetwork Time Security\u201c (NTS)."},a=void 0,c={unversionedId:"DevOps/Linux/2022-09-28--nts-client-setup/index",id:"DevOps/Linux/2022-09-28--nts-client-setup/index",title:"NTS-Service and Authenticated Time Synchronization",description:"Building a client for a time service which uses IETF RFC 8915 called \u201cNetwork Time Security\u201c (NTS).",source:"@site/docs/DevOps/Linux/2022-09-28--nts-client-setup/index.md",sourceDirName:"DevOps/Linux/2022-09-28--nts-client-setup",slug:"/DevOps/Linux/2022-09-28--nts-client-setup/2022-09-28",permalink:"/docs/DevOps/Linux/2022-09-28--nts-client-setup/2022-09-28",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/DevOps/Linux/2022-09-28--nts-client-setup/index.md",tags:[{label:"LINUX",permalink:"/docs/tags/linux"},{label:"Security",permalink:"/docs/tags/security"}],version:"current",sidebarPosition:6e3,frontMatter:{sidebar_position:6e3,slug:"2022-09-28",title:"NTS-Service and Authenticated Time Synchronization",authors:"mpolinowski",tags:["LINUX","Security"],description:"Building a client for a time service which uses IETF RFC 8915 called \u201cNetwork Time Security\u201c (NTS)."},sidebar:"tutorialSidebar",previous:{title:"Build a Chrony NTS Client from Source",permalink:"/docs/DevOps/Linux/2022-09-29--build-an-chrony-nts-client-from-source/2022-09-29"},next:{title:"Secure Timeserver - NTP with NTS with Docker",permalink:"/docs/DevOps/Linux/2022-09-15--ntp-over-nts-timeserver/2022-09-21"}},d={},u=[{value:"Chrony Client",id:"chrony-client",level:2},{value:"Installing Chrony",id:"installing-chrony",level:3},{value:"Configure NTS",id:"configure-nts",level:3},{value:"Verify that NTS is working on Chrony",id:"verify-that-nts-is-working-on-chrony",level:3},{value:"NTPsec Client",id:"ntpsec-client",level:2},{value:"Installing NTPsec",id:"installing-ntpsec",level:3},{value:"Configure NTS",id:"configure-nts-1",level:3},{value:"Verify that NTS is working on NTPsec",id:"verify-that-nts-is-working-on-ntpsec",level:3},{value:"Authentication Keys",id:"authentication-keys",level:2},{value:"Chrony Server Configuration",id:"chrony-server-configuration",level:3},{value:"Chrony Client Configuration",id:"chrony-client-configuration",level:3},{value:"NTPSec Client Configuration (failed)",id:"ntpsec-client-configuration-failed",level:3},{value:"Complete ntpd Client Log",id:"complete-ntpd-client-log",level:3}],o={toc:u};function i(e){let{components:t,...l}=e;return(0,s.kt)("wrapper",(0,r.Z)({},o,l,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"TST, Hong Kong",src:n(34636).Z,width:"1500",height:"517"})),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"#chrony-client"},"Chrony Client"),(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"#installing-chrony"},"Installing Chrony")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"#configure-nts"},"Configure NTS")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"#verify-that-nts-is-working-on-chrony"},"Verify that NTS is working on Chrony")))),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"#ntpsec-client"},"NTPsec Client"),(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"#installing-ntpsec"},"Installing NTPsec")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"#configure-nts-1"},"Configure NTS")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"#verify-that-nts-is-working-on-ntpsec"},"Verify that NTS is working on NTPsec")))),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"#authentication-keys"},"Authentication Keys"),(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"#chrony-server-configuration"},"Chrony Server Configuration")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"#chrony-client-configuration"},"Chrony Client Configuration")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"#ntpsec-client-configuration-failed"},"NTPSec Client Configuration (failed)")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"#complete-ntpd-client-log"},"Complete ntpd Client Log"))))),(0,s.kt)("p",null,"I did ",(0,s.kt)("a",{parentName:"p",href:"/docs/DevOps/Linux/2022-09-15--ntp-over-nts-timeserver/2022-09-21"},"setup a Chrony NTP/NTS Server")," and ",(0,s.kt)("a",{parentName:"p",href:"/docs/DevOps/Hashicorp/2022-09-22--nomad-nts-timeserver/2022-09-22"},"deployed it using Nomad"),". Now I need a client to connect to it using NTS. Here I have the option to either use Chrony or NTPSec."),(0,s.kt)("h2",{id:"chrony-client"},"Chrony Client"),(0,s.kt)("p",null,"By default Chrony is not installed on Debian but it can be installed using Aptitude."),(0,s.kt)("h3",{id:"installing-chrony"},"Installing Chrony"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"apt install chrony\n")),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},(0,s.kt)("strong",{parentName:"p"},"Note"),": If you have another NTP client running on your system it will be deactivated once you install Chrony (e.g. ",(0,s.kt)("inlineCode",{parentName:"p"},"systemd-timesyncd")," or ",(0,s.kt)("inlineCode",{parentName:"p"},"ntpsec"),").")),(0,s.kt)("p",null,"Verify Chrony works as an NTP client:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"chronyc sources\n\nMS Name/IP address         Stratum Poll Reach LastRx Last sample               \n===============================================================================\n^* server1a.meinberg.de          2   6    37     3   -558us[ -446us] +/-   24ms\n^+ lucy.thehomeofanime.de        2   6    37     3   +729us[ +842us] +/-   31ms\n^+ 2a01:4f8:241:56c6:1::123      2   6    37     3   -417us[ -304us] +/-   40ms\n^+ ns1.idfnet.net                2   6    37     2   -303us[ -303us] +/-   39ms\n")),(0,s.kt)("h3",{id:"configure-nts"},"Configure NTS"),(0,s.kt)("p",null,"Edit the configuration file ",(0,s.kt)("inlineCode",{parentName:"p"},"/etc/chrony/chrony.conf")," and replace the existing NTP servers with your personal NTS server. First comment out any lines starting with one of the words ",(0,s.kt)("inlineCode",{parentName:"p"},"pool"),", ",(0,s.kt)("inlineCode",{parentName:"p"},"server"),", ",(0,s.kt)("inlineCode",{parentName:"p"},"source")," or ",(0,s.kt)("inlineCode",{parentName:"p"},"sourcedir"),":"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"# Use Debian vendor zone.\n# pool 2.debian.pool.ntp.org iburst\n\n# Use time sources from DHCP.\n# sourcedir /run/chrony-dhcp\n\n# Use NTP sources found in /etc/chrony/sources.d.\n# sourcedir /etc/chrony/sources.d\n")),(0,s.kt)("p",null,"You can enable these sources later, but comment them out for the moment since it will make it easier to see if the NTS servers are working. Then add your personal NTS server. Note that the configuration line should contain ",(0,s.kt)("inlineCode",{parentName:"p"},"nts")," which says that it uses the NTS protocol:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"server my.nts-server.com nts iburst\n")),(0,s.kt)("p",null,"Save the file and restart the Chrony service by running this command:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"systemctl restart chrony\n")),(0,s.kt)("h3",{id:"verify-that-nts-is-working-on-chrony"},"Verify that NTS is working on Chrony"),(0,s.kt)("p",null,"Now verify that NTS is working with Chrony - first we can check the service status. It will show you the latest log output containing the source server:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"systemctl status chronyd    \n\u25cf chrony.service - chrony, an NTP client/server\n     Loaded: loaded (/lib/systemd/system/chrony.service; enabled; vendor preset: enabled)\n     Active: active (running) since Fri 2022-09-30 11:03:44 UTC; 11s ago\n       Docs: man:chronyd(8)\n             man:chronyc(1)\n             man:chrony.conf(5)\n    Process: 996854 ExecStart=/usr/sbin/chronyd $DAEMON_OPTS (code=exited, status=0/SUCCESS)\n   Main PID: 996856 (chronyd)\n      Tasks: 2 (limit: 2275)\n     Memory: 3.1M\n        CPU: 44ms\n     CGroup: /system.slice/chrony.service\n             \u251c\u2500996856 /usr/sbin/chronyd -F 1\n             \u2514\u2500996857 /usr/sbin/chronyd -F 1\n\nSep 30 11:03:44 chrony systemd[1]: Starting chrony, an NTP client/server...\nSep 30 11:03:44 chrony chronyd[996856]: chronyd version 4.0 starting (+CMDMON +NTP +REFCLOCK +RTC +PRIVDROP +SCFILTER +SI>\nSep 30 11:03:44 chrony chronyd[996856]: Frequency -40.688 +/- 0.247 ppm read from /var/lib/chrony/chrony.drift\nSep 30 11:03:44 chrony chronyd[996856]: Using right/UTC timezone to obtain leap second data\nSep 30 11:03:44 chrony chronyd[996856]: Loaded seccomp filter\nSep 30 11:03:44 chrony systemd[1]: Started chrony, an NTP client/server.\nSep 30 11:03:49 chrony chronyd[996856]: Selected source my.server.ip (my.nts-server.com)\nSep 30 11:03:49 chrony chronyd[996856]: System clock TAI offset set to 37 seconds\n")),(0,s.kt)("p",null,"Or just check the output from ",(0,s.kt)("inlineCode",{parentName:"p"},"chronyc"),":"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"chronyc sources\n\nMS Name/IP address         Stratum Poll Reach LastRx Last sample               \n===============================================================================\n^* static.my.server.ip.in.reverse.cli>     2   6    17    23   +351us[ +592us] +/- 6891us\n")),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},"A leading ",(0,s.kt)("inlineCode",{parentName:"p"},"^")," means its a server, ",(0,s.kt)("inlineCode",{parentName:"p"},"=")," means peer, and ",(0,s.kt)("inlineCode",{parentName:"p"},"#")," means local clock. The second column is what tells you if the server is being used. the ",(0,s.kt)("inlineCode",{parentName:"p"},"+")," tells you that the source is being used. A ",(0,s.kt)("inlineCode",{parentName:"p"},"*")," indicates the current best source which is being used, and a ",(0,s.kt)("inlineCode",{parentName:"p"},"-")," means its a good source, but is not currently selected. Source state ",(0,s.kt)("inlineCode",{parentName:"p"},"~")," means that the time is too variable.")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"chronyc tracking\n\nReference ID    : 9F459319 (static.my.server.ip.in.reverse.clients.your-server.com)\nStratum         : 3\nRef time (UTC)  : Sat Oct 01 10:36:30 2022\nSystem time     : 0.000158212 seconds fast of NTP time\nLast offset     : -0.272258192 seconds\nRMS offset      : 0.129027337 seconds\nFrequency       : 310.921 ppm fast\nResidual freq   : -1410.939 ppm\nSkew            : 122.050 ppm\nRoot delay      : 0.014122445 seconds\nRoot dispersion : 0.208602116 seconds\nUpdate interval : 64.7 seconds\nLeap status     : Normal\n")),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Reference ID is the value indicates the name and ID of the NTP server to which the system\u2019s time is currently synchronized. "),(0,s.kt)("li",{parentName:"ul"},"Stratum specifies the number of hops in servers level to the NTP hierarchy. "),(0,s.kt)("li",{parentName:"ul"},"Ref time is the time per UTC when the last measurement from the reference source was processed."),(0,s.kt)("li",{parentName:"ul"},"System time denotes the amount of delay in a systems clock from a synchronized server."),(0,s.kt)("li",{parentName:"ul"},"Last offset is the estimated time offset since the last clock update."),(0,s.kt)("li",{parentName:"ul"},"RMS Offset denotes the long-term average of the time offset"),(0,s.kt)("li",{parentName:"ul"},"Frequency is the value the servers clock would be off if chronyd was not correcting it. This value is measured in ppm (parts per million)"),(0,s.kt)("li",{parentName:"ul"},"Residual freq indicates the measurement of difference in between the next-level Stratum source and the current frequency being used."),(0,s.kt)("li",{parentName:"ul"},"Skew is the estimate variance of error in the frequency measured in parts per million"),(0,s.kt)("li",{parentName:"ul"},"Root delay is the total time of delay within the network path to the higher level stratum computer from which the local server is being synced."),(0,s.kt)("li",{parentName:"ul"},"Root dispersion is part of the equation that calculates the value derived from the root delay and root dispersion as reported by the tracking command"),(0,s.kt)("li",{parentName:"ul"},"Update interval is the distance between the previous two clock updates."),(0,s.kt)("li",{parentName:"ul"},"Leap status is the value which can have one of the following settings",(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},"normal"),(0,s.kt)("li",{parentName:"ul"},"insert second"),(0,s.kt)("li",{parentName:"ul"},"delete second"),(0,s.kt)("li",{parentName:"ul"},"not synchronized. ")))),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},"For service tracking add an alias to your ",(0,s.kt)("inlineCode",{parentName:"p"},".bashrc")," like ",(0,s.kt)("inlineCode",{parentName:"p"},"alias showtime='chronyc sourcestats; chronyc -n sources; chronyc -n tracking'"))),(0,s.kt)("h2",{id:"ntpsec-client"},"NTPsec Client"),(0,s.kt)("p",null,"The NTS version of ",(0,s.kt)("inlineCode",{parentName:"p"},"ntpd")," ",(0,s.kt)("strong",{parentName:"p"},"NTPSec")," is not installed on Debian but it can be installed using Aptitude."),(0,s.kt)("h3",{id:"installing-ntpsec"},"Installing NTPsec"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"apt install ntpsec\n")),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},(0,s.kt)("strong",{parentName:"p"},"Note"),": If you have another NTP client running on your system it will be deactivated once you install NTPsec (e.g. ",(0,s.kt)("inlineCode",{parentName:"p"},"systemd-timesyncd")," or ",(0,s.kt)("inlineCode",{parentName:"p"},"chrony"),").")),(0,s.kt)("p",null,"Verify NTPsec works as an NTP client:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"ntpq -p\n\n     remote                                   refid      st t when poll reach   delay   offset   jitter\n=======================================================================================================\n 0.debian.pool.ntp.org                   .POOL.          16 p    -  256    0   0.0000   0.0000   0.0001\n 1.debian.pool.ntp.org                   .POOL.          16 p    -  256    0   0.0000   0.0000   0.0001\n 2.debian.pool.ntp.org                   .POOL.          16 p    -  256    0   0.0000   0.0000   0.0001\n 3.debian.pool.ntp.org                   .POOL.          16 p    -  256    0   0.0000   0.0000   0.0001\n")),(0,s.kt)("h3",{id:"configure-nts-1"},"Configure NTS"),(0,s.kt)("p",null,"Edit the configuration file ",(0,s.kt)("inlineCode",{parentName:"p"},"/etc/ntpsec/ntp.conf")," and replace the existing NTP servers with your own NTS servers. First comment out any lines starting with one of the words ",(0,s.kt)("inlineCode",{parentName:"p"},"pool")," or ",(0,s.kt)("inlineCode",{parentName:"p"},"server"),":"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"# Public NTP servers supporting Network Time Security:\n# server time.cloudflare.com nts\n\n# pool.ntp.org maps to about 1000 low-stratum NTP servers.  Your server will\n# pick a different set every time it starts up.  Please consider joining the\n# pool: <https://www.pool.ntp.org/join.html>\n# pool 0.debian.pool.ntp.org iburst\n# pool 1.debian.pool.ntp.org iburst\n# pool 2.debian.pool.ntp.org iburst\n# pool 3.debian.pool.ntp.org iburst\n")),(0,s.kt)("p",null,"Then add your own NTS server. Note that the configuration line should contain ",(0,s.kt)("inlineCode",{parentName:"p"},"nts")," which says that it uses the NTS protocol:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"server my.nts-server.com nts iburst\n")),(0,s.kt)("p",null,"Save the file and restart the Chrony service by running this command:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"systemctl restart ntpsec\n")),(0,s.kt)("h3",{id:"verify-that-nts-is-working-on-ntpsec"},"Verify that NTS is working on NTPsec"),(0,s.kt)("p",null,"The service comes up now using my server:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"systemctl status ntpsec\n\n\u25cf ntpsec.service - Network Time Service\n     Loaded: loaded (/lib/systemd/system/ntpsec.service; enabled; vendor preset: enabled)\n     Active: active (running) since Fri 2022-09-30 13:26:59 CEST; 11s ago\n       Docs: man:ntpd(8)\n    Process: 1516451 ExecStart=/usr/libexec/ntpsec/ntp-systemd-wrapper (code=exited, status=0/SUCCESS)\n   Main PID: 1516454 (ntpd)\n      Tasks: 1 (limit: 2276)\n     Memory: 9.4M\n        CPU: 36ms\n     CGroup: /system.slice/ntpsec.service\n             \u2514\u25001516454 /usr/sbin/ntpd -p /run/ntpd.pid -c /etc/ntpsec/ntp.conf -g -N -u ntpsec:ntpsec\n\nSep 30 13:27:00 Nomad ntpd[1516454]: NTSc: certificate subject name: /CN=my.nts-server.com\nSep 30 13:27:00 Nomad ntpd[1516454]: NTSc: certificate issuer name: /C=US/O=Lets Encrypt/CN=R3\nSep 30 13:27:00 Nomad ntpd[1516454]: NTSc: certificate is valid.\nSep 30 13:27:00 Nomad ntpd[1516454]: NTSc: Good ALPN from my.nts-server.com\nSep 30 13:27:00 Nomad ntpd[1516454]: NTSc: read 848 bytes\nSep 30 13:27:00 Nomad ntpd[1516454]: NTSc: Got 8 cookies, length 100, aead=15.\nSep 30 13:27:00 Nomad ntpd[1516454]: NTSc: NTS-KE req to my.nts-server.com took 0.088 sec, OK\nSep 30 13:27:00 Nomad ntpd[1516454]: DNS: dns_check: processing my.nts-server.com, 1, 21901\nSep 30 13:27:00 Nomad ntpd[1516454]: DNS: Server taking: my.server.ip\nSep 30 13:27:00 Nomad ntpd[1516454]: DNS: dns_take_status: my.nts-server.com=>good, 0\n")),(0,s.kt)("p",null,"Check the output from ",(0,s.kt)("inlineCode",{parentName:"p"},"ntpq"),":"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"ntpq -p \n     remote                                             refid      st t when poll reach   delay   offset   jitter\n=================================================================================================================\n+static.my.server.ip.in.reverse.clients.your-serve 216.239.35.0     2 8   17   64   17   4.3198  -5.5261  14.3994\n")),(0,s.kt)("h2",{id:"authentication-keys"},"Authentication Keys"),(0,s.kt)("h3",{id:"chrony-server-configuration"},"Chrony Server Configuration"),(0,s.kt)("p",null,"When I set up the ",(0,s.kt)("a",{parentName:"p",href:"/docs/DevOps/Linux/2022-09-15--ntp-over-nts-timeserver/2022-09-21"},"Chrony NTP/NTS Server")," I did not consider client authentication. So currently every device with a NTS client can use the server. To limit access to our server we can create a ",(0,s.kt)("em",{parentName:"p"},"pre-shared authentication key")," that we then have to add to our server as well as too all clients we want to connect. Both ",(0,s.kt)("strong",{parentName:"p"},"Chrony")," and ",(0,s.kt)("strong",{parentName:"p"},"NTPSec")," offer a keygen client that we can use to create our pre-shared key. I am going to generate the key using Chrony. To a ",(0,s.kt)("em",{parentName:"p"},"512-bit SHA1")," key with the key number of ",(0,s.kt)("inlineCode",{parentName:"p"},"666")," run the following command (inside your Chrony Server container or on your Chrony client):"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"chronyc keygen 666 SHA1 512\n")),(0,s.kt)("p",null,"This will output a secure hash that we will have to copy into a file ",(0,s.kt)("inlineCode",{parentName:"p"},"assets/chrony.keys")," in the ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/mpolinowski/docker-ntp"},"Chrony repository"),":"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"666 SHA1 HEX:41303679BF767668BC4FA98783FABC76526AEA12A5B47A5C3DEE26DD5940F0E831AA6978B995615074BE284238374DF405A30C51D7145151A8B2E20A30D29FFA\n")),(0,s.kt)("p",null,"I can add this to my ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/mpolinowski/docker-ntp/blob/main/Dockerfile"},"Chrony Dockerfile")," to copy the keyfile into the Chrony container:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-yml"},"# add chrony keys generated with `chronyc keygen 666 SHA1 512`\nCOPY assets/chrony.keys /opt/chrony.keys\n")),(0,s.kt)("p",null,"Now I have to modify the ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/mpolinowski/docker-ntp/blob/main/assets/startup.sh"},"start-up script")," I am using inside the container to generate the Chrony configuration file and add the ",(0,s.kt)("inlineCode",{parentName:"p"},"keyfile")," location:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},'{\n  echo\n  echo "driftfile /var/lib/chrony/chrony.drift"\n  echo "makestep 0.1 3"\n  echo "rtcsync"\n  echo\n  echo "ntsserverkey /opt/letsencrypt/live/my.server.com/privkey.pem"\n  echo "ntsservercert /opt/letsencrypt/live/my.server.com/fullchain.pem"\n  echo "keyfile /opt/chrony.keys"\n  echo "ntsprocesses 3"\n  echo "maxntsconnections 512"\n  echo "ntsdumpdir /var/lib/chrony"\n  echo\n  echo "allow all"\n} >> ${CHRONY_CONF_FILE}\n')),(0,s.kt)("p",null,"Now I can ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/mpolinowski/docker-ntp#from-a-local-command-line"},"rebuild")," my container and ",(0,s.kt)("a",{parentName:"p",href:"/docs/DevOps/Hashicorp/2022-09-24--nomad-nginx-ingress/2022-09-24"},"re-deploy it using Nomad"),"."),(0,s.kt)("p",null,"Now my clients should no longer be able to use the timeserver they are configured to use:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"# BEFORE\nntpq -p\n     remote                                   refid      st t when poll reach   delay   offset   jitter\n=======================================================================================================\n+static.my.server.ip.in.reverse.clients.your-serve 216.239.35.0     2 5  202   64  370   3.9457  10.4121 287.4892\n# AFTER\nntpq -p\n     remote                                   refid      st t when poll reach   delay   offset   jitter\n=======================================================================================================\n static.my.server.ip.in.reverse.clients.your-serve 216.239.35.0     2 0  585   64    0   0.0000   0.0000 298.1516\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"# BEFORE\nchronyc sources\nMS Name/IP address         Stratum Poll Reach LastRx Last sample               \n===============================================================================\n^* static.my.server.ip.in.reverse.cli>     2   6    17    23   +351us[ +592us] +/- 6891us\n# AFTER\nchronyc sources\nMS Name/IP address         Stratum Poll Reach LastRx Last sample               \n===============================================================================\n^? static.my.server.ip.in.reverse.cli>     0   8     0     -     +0ns[   +0ns] +/-    0ns\n")),(0,s.kt)("p",null,"Now let's fix that problem :)"),(0,s.kt)("h3",{id:"chrony-client-configuration"},"Chrony Client Configuration"),(0,s.kt)("p",null,"To add the keyfile to our Chrony client we first have to add it's location to the configuration file:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"nano /etc/chrony/chrony.conf\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"keyfile /etc/chrony/chrony.keys\n")),(0,s.kt)("p",null,"And then create the ",(0,s.kt)("inlineCode",{parentName:"p"},"chrony.keys")," file in the specified location:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"666 SHA1 HEX:41303679BF767668BC4FA98783FABC76526AEA12A5B47A5C3DEE26DD5940F0E831AA6978B995615074BE284238374DF405A30C51D7145151A8B2E20A30D29FFA\n")),(0,s.kt)("p",null,"And make sure that the file is readable:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"chmod u=rw,g=r,o=r /etc/chrony/chrony.keys\n")),(0,s.kt)("p",null,"Restart the service:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"service chrony restart\n")),(0,s.kt)("p",null,"And we are back at working conditions:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"chronyc sources\nMS Name/IP address         Stratum Poll Reach LastRx Last sample               \n===============================================================================\n^* static.my.server.ip.in.reverse.cli>     3   6    17    49  -1866us[  -38ms] +/- 3505us\n")),(0,s.kt)("h3",{id:"ntpsec-client-configuration-failed"},"NTPSec Client Configuration (failed)"),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},(0,s.kt)("strong",{parentName:"p"},"Update")," the NTPSec client runs well with a Chrony server as long as I don't add the key authentication. I will just stick with a Chrony Server/Client combo. THere don't seem to be any issues.")),(0,s.kt)("p",null,"For the NTPSec client we have to create the keyfile in ",(0,s.kt)("inlineCode",{parentName:"p"},"/var/lib/ntpsec/nts-keys/ntp.keys")," and add the same content as with the ",(0,s.kt)("inlineCode",{parentName:"p"},"chrony.keys")," file before. And point out the location in the configuration file - which is a little bit more verbose here. You additionally have to select the key number which I set to be ",(0,s.kt)("inlineCode",{parentName:"p"},"666")," above and also assign the key to the server you want it to be uses with..."),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},(0,s.kt)("strong",{parentName:"p"},"Update")," as son as I added the Chrony key I could no longer connect to my server... I then ran the NTPSec included key generator ",(0,s.kt)("inlineCode",{parentName:"p"},"ntpkeygen")," which generates a list of keys.")),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},(0,s.kt)("strong",{parentName:"p"},"Update Update")," adding the AES key was not necessary after all I just had to remove the ",(0,s.kt)("inlineCode",{parentName:"p"},"HEX:")," in front of the Chrony key and it was accepted. So, just keep the Chrony key ~")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"cat ntp.keys\n\n# Sat Oct  1 14:43:23 2022\n 1 AES g&$cpQDr:_eLspU|\n \n ...\n\n 19 AES a09a2bf2f05a42f16372dbb7fc419782\n 20 AES 552b05b5536833d5a89ec83767f268c6\n")),(0,s.kt)("p",null,"So I updated ",(0,s.kt)("inlineCode",{parentName:"p"},"nano /var/lib/ntpsec/nts-keys/ntp.keys")," to include one of those keys:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"19 AES a09a2bf2f05a42f16372dbb7fc419782\n666 SHA1 HEX:41303679BF767668BC4FA98783FABC76526AEA12A5B47A5C3DEE26DD5940F0E831AA6978B995615074BE284238374DF405A30C51D7145151A8B2E20A30D29FFA\n")),(0,s.kt)("p",null,"And also added them to the ",(0,s.kt)("inlineCode",{parentName:"p"},"chrony.keys")," file of my Chrony server."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"chmod u=rw,g=r,o=r /var/lib/ntpsec/nts-keys/ntp.keys\nnano /etc/ntpsec/ntp.conf\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"keys /var/lib/ntpsec/nts-keys/ntp.keys\ntrustedkey 19\ncontrolkey 19\nrequestkey 19\n\n...\n\nserver my.server.com nts iburst key 19\n")),(0,s.kt)("p",null,"But I am still not getting a connection:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"ntpq -p\n\n     remote                                   refid      st t when poll reach   delay   offset   jitter\n=======================================================================================================\n static.my.server.com.clients.your-serve .NTS.           16 7    -   64    0   0.0000   0.0000   0.0001\n")),(0,s.kt)("p",null,"The client request are send but the server does not seem to reply:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"ntpq -c nts\n\nNTS client sends:            7\nNTS client recvs good:       0\nNTS client recvs w error:    0\nNTS server recvs good:       0\nNTS server recvs w error:    0\nNTS server sends:            0\nNTS make cookies:            0\nNTS decode cookies:          0\nNTS decode cookies old:      0\nNTS decode cookies too old:  0\nNTS decode cookies error:    0\nNTS KE probes good:          1\nNTS KE probes_bad:           0\nNTS KE serves good:          0\nNTS KE serves_bad:           0\n")),(0,s.kt)("p",null,"Let's start the client manually and see what is going on:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"service ntpsec stop\n/usr/sbin/ntpd -n -d\n")),(0,s.kt)("p",null,"First of all I can see that the Chrony key is ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/ntpsec/ntpsec/blob/master/libntp/authreadkeys.c"},"not accepted")," - but NTPSec seems to add the additional AES key:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"2022-10-02T09:03:39 ntpd[19852]: Found 1 trusted keys.\n2022-10-02T09:03:39 ntpd[19852]: AUTH: authreadkeys: reading /var/lib/ntpsec/nts-keys/ntp.keys\n2022-10-02T09:03:39 ntpd[19852]: AUTH: authreadkeys: key 666 truncated to 64 bytes\n2022-10-02T09:03:39 ntpd[19852]: AUTH: authreadkeys: invalid hex digit for key 666\n2022-10-02T09:03:39 ntpd[19852]: AUTH: authreadkeys: added 1 keys\n")),(0,s.kt)("p",null,"Interesting so the key ",(0,s.kt)("inlineCode",{parentName:"p"},"666")," contains illegal characters. Let's remove the ",(0,s.kt)("inlineCode",{parentName:"p"},"HEX:")," that Chrony sets in front of the key and see what happens when I switch the NTPSec configuration back from using key 19 to key 666:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"19 AES a09a2bf2f05a42f16372dbb7fc419782\n666 SHA1 41303679BF767668BC4FA98783FABC76526AEA12A5B47A5C3DEE26DD5940F0E831AA6978B995615074BE284238374DF405A30C51D7145151A8B2E20A30D29FFA\n")),(0,s.kt)("p",null,"Excellent, NTPSec accepts both keys and is now using the original Chrony key as trusted:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"2022-10-02T09:12:35 ntpd[20300]: Found 1 trusted keys.\n2022-10-02T09:12:35 ntpd[20300]: AUTH: authreadkeys: reading /var/lib/ntpsec/nts-keys/ntp.keys\n2022-10-02T09:12:35 ntpd[20300]: AUTH: authreadkeys: key 666 truncated to 64 bytes\n2022-10-02T09:12:35 ntpd[20300]: AUTH: authreadkeys: digest for key 666, SHA512 will be truncated.\n2022-10-02T09:12:35 ntpd[20300]: AUTH: authreadkeys: added 2 keys\n")),(0,s.kt)("p",null,"But scrolling down the ",(0,s.kt)("a",{parentName:"p",href:"#complete-ntpd-log"},"ntpd Log")," there are only a lot of:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"select() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\n")),(0,s.kt)("p",null,"Which is where I reached the realm darkness, full of terrors. Where not even the Lord of Light may help you to chase away the shadows..."),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"NTS-Service and Authenticated Time Synchronization",src:n(6723).Z,width:"1019",height:"420"})),(0,s.kt)("h3",{id:"complete-ntpd-client-log"},"Complete ntpd Client Log"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"/usr/sbin/ntpd -n -d \n\n2022-10-02T09:14:00 ntpd[20412]: INIT: ntpd ntpsec-1.2.0 2021-06-17T05:15:04Z: Starting\n2022-10-02T09:14:00 ntpd[20412]: INIT: Command line: /usr/sbin/ntpd -n -d\n2022-10-02T09:14:00 ntpd[20412]: INIT: precision = 0.088 usec (-23)\n2022-10-02T09:14:00 ntpd[20412]: INIT: successfully locked into RAM\n2022-10-02T09:14:00 ntpd[20412]: CONFIG: readconfig: parsing file: /etc/ntpsec/ntp.conf\n2022-10-02T09:14:00 ntpd[20412]: CONFIG: requestkey is a no-op because ntpdc has been removed.\nFinished Parsing!!\n2022-10-02T09:14:00 ntpd[20412]: Found 1 trusted keys.\n2022-10-02T09:14:00 ntpd[20412]: AUTH: authreadkeys: reading /var/lib/ntpsec/nts-keys/ntp.keys\n2022-10-02T09:14:00 ntpd[20412]: AUTH: authreadkeys: key 666 truncated to 64 bytes\n2022-10-02T09:14:00 ntpd[20412]: AUTH: authreadkeys: digest for key 666, SHA512 will be truncated.\n2022-10-02T09:14:00 ntpd[20412]: AUTH: authreadkeys: added 2 keys\n2022-10-02T09:14:00 ntpd[20412]: CONFIG: restrict nopeer ignored\nrestrict: op 1 addr 0.0.0.0 mask 0.0.0.0 mflags 00000000 flags 000004e0\nrestrict: op 1 addr :: mask :: mflags 00000000 flags 000004e0\nrestrict: op 1 addr 127.0.0.1 mask 255.255.255.255 mflags 00000000 flags 00000000\nrestrict: op 1 addr ::1 mask ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff mflags 00000000 flags 00000000\n2022-10-02T09:14:00 ntpd[20412]: CLOCK: leapsecond file ('/usr/share/zoneinfo/leap-seconds.list'): good hash signature\n2022-10-02T09:14:00 ntpd[20412]: CLOCK: leapsecond file ('/usr/share/zoneinfo/leap-seconds.list'): loaded, expire=2022-12-28T00:00Z last=2017-01-01T00:00Z ofs=37\nevent at 0 0.0.0.0 c01e 0e TAI 37 leap 2017-01-01T00:00Z expires 2022-12-28T00:00Z\nmove_fd: estimated max descriptors: 1024, initial socket boundary: 16\n2022-10-02T09:14:00 ntpd[20412]: INIT: Using SO_TIMESTAMPNS\n2022-10-02T09:14:00 ntpd[20412]: IO: Listen and drop on 0 v6wildcard [::]:123\n2022-10-02T09:14:00 ntpd[20412]: IO: Listen and drop on 1 v4wildcard 0.0.0.0:123\n2022-10-02T09:14:00 ntpd[20412]: IO: Listen normally on 2 lo 127.0.0.1:123\nrestrict: op 1 addr 127.0.0.1 mask 255.255.255.255 mflags 00003000 flags 00000001\n2022-10-02T09:14:00 ntpd[20412]: IO: Listen normally on 3 eth0 my.client-ip:123\nrestrict: op 1 addr my.client-ip mask 255.255.255.255 mflags 00003000 flags 00000001\n2022-10-02T09:14:00 ntpd[20412]: IO: Listen normally on 4 lo [::1]:123\n2022-10-02T09:14:00 ntpd[20412]: IO: Listening on routing socket on fd #23 for interface updates\npeer_clear: at 0 next 1 associd 17767 refid NTS\nevent at 0 my.ntp-server.com c011 81 mobilize assoc 17767\nnewpeer: <null>->0.0.0.0 mode 3 vers 4 poll 6 10 flags 0x21901 0x1 mode 0 key 0000029a\n2022-10-02T09:14:00 ntpd[20412]: INIT: MRU 10922 entries, 13 hash bits, 65536 bytes\nevent at 0 0.0.0.0 c01d 0d kern kernel time sync enabled\nevent at 0 0.0.0.0 c012 02 freq_set kernel 0.000000 PPM\nevent at 0 0.0.0.0 c016 06 restart\n2022-10-02T09:14:00 ntpd[20412]: INIT: Built with OpenSSL 1.1.1k  25 Mar 2021, 101010bf\n2022-10-02T09:14:00 ntpd[20412]: INIT: Running with OpenSSL 1.1.1n  15 Mar 2022, 101010ef\n2022-10-02T09:14:00 ntpd[20412]: NTSc: Using system default root certificates.\n2022-10-02T09:14:00 ntpd[20412]: statistics directory /var/log/ntpsec/ does not exist or is unwriteable, error No such file or directory\nselect() returned -1: Interrupted system call\n2022-10-02T09:14:01 ntpd[20412]: DNS: dns_probe: my.ntp-server.com, cast_flags:1, flags:21901\n2022-10-02T09:14:01 ntpd[20412]: NTSc: DNS lookup of my.ntp-server.com took 0.016 sec\n2022-10-02T09:14:01 ntpd[20412]: NTSc: connecting to my.ntp-server.com:4460 => my.server-ip:4460\n2022-10-02T09:14:01 ntpd[20412]: NTSc: set cert host: my.ntp-server.com\n2022-10-02T09:14:01 ntpd[20412]: NTSc: Using TLSv1.3, TLS_AES_256_GCM_SHA384 (256)\n2022-10-02T09:14:01 ntpd[20412]: NTSc: certificate subject name: /CN=my.ntp-server.com\n2022-10-02T09:14:01 ntpd[20412]: NTSc: certificate issuer name: /C=US/O=Lets Encrypt/CN=R3\n2022-10-02T09:14:01 ntpd[20412]: NTSc: certificate is valid.\n2022-10-02T09:14:01 ntpd[20412]: NTSc: Good ALPN from my.ntp-server.com\n2022-10-02T09:14:01 ntpd[20412]: NTSc: read 848 bytes\n2022-10-02T09:14:01 ntpd[20412]: NTSc: Got 8 cookies, length 100, aead=15.\n2022-10-02T09:14:01 ntpd[20412]: NTSc: NTS-KE req to my.ntp-server.com took 0.087 sec, OK\nselect() returned -1: Interrupted system call\n2022-10-02T09:14:01 ntpd[20412]: DNS: dns_check: processing my.ntp-server.com, 1, 21901\n2022-10-02T09:14:01 ntpd[20412]: DNS: Server taking: my.server-ip\ntransmit: at 1 my.client-ip->my.server-ip mode 3 keyid 0000029a len 228\n2022-10-02T09:14:01 ntpd[20412]: DNS: dns_take_status: my.ntp-server.com=>good, 0\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\ntransmit: at 66 my.client-ip->my.server-ip mode 3 keyid 0000029a len 332\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\ntransmit: at 133 my.client-ip->my.server-ip mode 3 keyid 0000029a len 436\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\ntransmit: at 199 my.client-ip->my.server-ip mode 3 keyid 0000029a len 540\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\ntransmit: at 266 my.client-ip->my.server-ip mode 3 keyid 0000029a len 644\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\nselect() returned -1: Interrupted system call\n^Cselect() returned -1: Interrupted system call\n2022-10-02T09:19:00 ntpd[20412]: ERR: ntpd exiting on signal 2 (Interrupt)\nevent at 299 my.server-ip c012 82 demobilize assoc 17767\n2022-10-02T09:19:00 ntpd[20412]: PROTO: my.server-ip unlink local addr my.client-ip -> <null>\nevent at 299 0.0.0.0 c01d 0d kern kernel time sync disabled\n")))}i.isMDXComponent=!0},6723:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/nts-client-setup_01-eb3c03a7e8019dd766cd2fc490aa228c.png"},34636:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-ec671595d585b88a85b017a7908fb619.jpg"}}]);