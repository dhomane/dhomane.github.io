"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[87161],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>h});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var i=n.createContext({}),u=function(e){var t=n.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},p=function(e){var t=u(e.components);return n.createElement(i.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,i=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=u(a),h=r,m=d["".concat(i,".").concat(h)]||d[h]||c[h]||l;return a?n.createElement(m,s(s({ref:t},p),{},{components:a})):n.createElement(m,s({ref:t},p))}));function h(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,s=new Array(l);s[0]=d;var o={};for(var i in t)hasOwnProperty.call(t,i)&&(o[i]=t[i]);o.originalType=e,o.mdxType="string"==typeof e?e:r,s[1]=o;for(var u=2;u<l;u++)s[u]=a[u];return n.createElement.apply(null,s)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},78691:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>c,frontMatter:()=>l,metadata:()=>o,toc:()=>u});var n=a(87462),r=(a(67294),a(3905));const l={sidebar_position:7050,slug:"2021-08-20",title:"Hashicorp Vault - Setup",authors:"mpolinowski",tags:["Vault","Linux"]},s=void 0,o={unversionedId:"DevOps/Hashicorp/2021-08-20--hashicorp-vault-setup/index",id:"DevOps/Hashicorp/2021-08-20--hashicorp-vault-setup/index",title:"Hashicorp Vault - Setup",description:"Victoria Harbour, Hong Kong",source:"@site/docs/DevOps/Hashicorp/2021-08-20--hashicorp-vault-setup/index.md",sourceDirName:"DevOps/Hashicorp/2021-08-20--hashicorp-vault-setup",slug:"/DevOps/Hashicorp/2021-08-20--hashicorp-vault-setup/2021-08-20",permalink:"/docs/DevOps/Hashicorp/2021-08-20--hashicorp-vault-setup/2021-08-20",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/DevOps/Hashicorp/2021-08-20--hashicorp-vault-setup/index.md",tags:[{label:"Vault",permalink:"/docs/tags/vault"},{label:"Linux",permalink:"/docs/tags/linux"}],version:"current",sidebarPosition:7050,frontMatter:{sidebar_position:7050,slug:"2021-08-20",title:"Hashicorp Vault - Setup",authors:"mpolinowski",tags:["Vault","Linux"]},sidebar:"tutorialSidebar",previous:{title:"Hashicorp Vault - Secrets & Tokens",permalink:"/docs/DevOps/Hashicorp/2021-08-21--hashicorp-vault-secrets-tokens/2021-08-21"},next:{title:"Hashicorp Consul Refresher - Gossip TLS Encryption",permalink:"/docs/DevOps/Hashicorp/2021-08-14--hashicorp-consul-tls-encryption/2021-08-14"}},i={},u=[{value:"Installation",id:"installation",level:2},{value:"Download",id:"download",level:3},{value:"Configure Vault",id:"configure-vault",level:3},{value:"Firewall",id:"firewall",level:4},{value:"Prepare System.d Service",id:"prepare-systemd-service",level:3},{value:"Initialize Vault",id:"initialize-vault",level:3},{value:"Accessing the UI",id:"accessing-the-ui",level:2}],p={toc:u};function c(e){let{components:t,...l}=e;return(0,r.kt)("wrapper",(0,n.Z)({},p,l,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Victoria Harbour, Hong Kong",src:a(24891).Z,width:"1500",height:"463"})),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#installation"},"Installation"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#download"},"Download")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#configure-vault"},"Configure Vault"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#firewall"},"Firewall")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#prepare-systemd-service"},"Prepare System.d Service")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#initialize-vault"},"Initialize Vault")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#accessing-the-ui"},"Accessing the UI"))),(0,r.kt)("h2",{id:"installation"},"Installation"),(0,r.kt)("p",null,"Before I was using the package managers to install nomad and consul - and ran into a few issues with it. So now I want to follow the ",(0,r.kt)("a",{parentName:"p",href:"https://www.vaultproject.io/downloads"},"manual installation guide")," (",(0,r.kt)("em",{parentName:"p"},"see manual binary download"),") instead."),(0,r.kt)("h3",{id:"download"},"Download"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"wget https://releases.hashicorp.com/vault/1.8.2/vault_1.8.2_linux_amd64.zip\nunzip vault_1.8.2_linux_amd64.zip\nsudo mv vault /usr/bin\nrm vault_1.8.2_linux_amd64.zip\n")),(0,r.kt)("p",null,"And verify that it was installed successfully:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"vault -v\nVault v1.8.2 (aca76f63357041a43b49f3e8c11d67358496959f)\n")),(0,r.kt)("p",null,"We can also add the autocomplete function:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"vault -autocomplete-install\ncomplete -C /usr/bin/vault vault\n")),(0,r.kt)("h3",{id:"configure-vault"},"Configure Vault"),(0,r.kt)("p",null,"Create the configuration directory:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo mkdir /etc/vault.d\n")),(0,r.kt)("p",null,"And create the basic configuration file:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo nano /etc/vault.d/config.hcl\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'storage "consul" {\n    address = "192.168.2.110:8500"\n    path = "vault/"\n}\nlistener "tcp" {\n    address = "192.168.2.110:8200"\n    tls_disable = 1\n}\napi_addr = "http://192.168.2.110:8200"\ncluster_addr = "https://192.168.2.110:8201"\nui = true\n')),(0,r.kt)("p",null,"As ",(0,r.kt)("strong",{parentName:"p"},"Storage")," I have chosen the Consul k/v store with a prefix of ",(0,r.kt)("inlineCode",{parentName:"p"},"vault/"),". Alternatively, you can also store the Vault data to file:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'storage "file" {\n  path = "/opt/vault/data"\n}\n')),(0,r.kt)("h4",{id:"firewall"},"Firewall"),(0,r.kt)("p",null,"I used the port ",(0,r.kt)("inlineCode",{parentName:"p"},"80")," here for the Vault service - make sure that your firewall allows traffic in on the port you choose there:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"firewall-cmd --permanent --zone=public --add-port=8200/tcp\nfirewall-cmd --permanent --zone=public --add-port=8201/tcp\nfirewall-cmd --reload\nfirewall-cmd --zone=public --list-ports\n")),(0,r.kt)("h3",{id:"prepare-systemd-service"},"Prepare System.d Service"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo nano /etc/systemd/system/vault.service\n")),(0,r.kt)("p",null,"Create the service file:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yml"},'[Unit]\nDescription="HashiCorp Vault - A tool for managing secrets"\nDocumentation=https://www.vaultproject.io/docs/\nRequires=network-online.target\nAfter=network-online.target\nConditionFileNotEmpty=/etc/vault.d/config.hcl\nStartLimitIntervalSec=60\nStartLimitBurst=3\n\n[Service]\nProtectSystem=full\nProtectHome=read-only\nPrivateTmp=yes\nPrivateDevices=yes\nSecureBits=keep-caps\nAmbientCapabilities=CAP_IPC_LOCK\nCapabilities=CAP_IPC_LOCK+ep\nCapabilityBoundingSet=CAP_SYSLOG CAP_IPC_LOCK\nNoNewPrivileges=yes\nExecStart=/usr/bin/vault server -config=/etc/vault.d/config.hcl\nExecReload=/bin/kill --signal HUP $MAINPID\nKillMode=process\nKillSignal=SIGINT\nRestart=on-failure\nRestartSec=5\nTimeoutStopSec=30\nStartLimitInterval=60\nStartLimitIntervalSec=60\nStartLimitBurst=3\nLimitNOFILE=65536\nLimitMEMLOCK=infinity\nLogRateLimitIntervalSec=0\nLogRateLimitBurst=0\n\n[Install]\nWantedBy=multi-user.target\n')),(0,r.kt)("p",null,"Reload SystemD:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo systemctl daemon-reload\nservice vault status\n")),(0,r.kt)("p",null,"And add the following exports to your shell config (e.g. ",(0,r.kt)("inlineCode",{parentName:"p"},"~/bashrc"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"./zshrc"),"):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cfg"},'echo "export VAULT_ADDR=http://192.168.2.110:8200" >> ~/.zshrc\nsource ~/.zshrc\n')),(0,r.kt)("p",null,"Now we can start the service:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo service vault start\nsudo service vault status\nsudo systemctl enable vault\n")),(0,r.kt)("h3",{id:"initialize-vault"},"Initialize Vault"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yml"},'vault operator init\n\nUnseal Key 1: vanBssslvadjyp9jptzsAPO4uWGK1ZsT8FYW/qpS36iJ\nUnseal Key 2: g6OsArgXl0+K0AUaSZJb8eNXAX1nfdKMdrRJfu8zIug1\nUnseal Key 3: MHj+gJhnIgXI6mKxt3lHmtvJEgypaEczGeZF5Ep4uKgX\nUnseal Key 4: i8HXZ90nHzo3aku+S37JDzeXGUxZX+H5WE4632gO2cjY\nUnseal Key 5: 4ixQc9p7whDWkSr8lW8r5b1w0LodNGOxGIZP5kFdwZ29\n\nInitial Root Token: s.TFCSNUDRJbuBGjOkgaqSfEQR\n\nVault initialized with 5 key shares and a key threshold of 3. Please securely\ndistribute the key shares printed above. When the Vault is re-sealed,\nrestarted, or stopped, you must supply at least 3 of these keys to unseal it\nbefore it can start servicing requests.\n\nVault does not store the generated master key. Without at least 3 keys to\nreconstruct the master key, Vault will remain permanently sealed!\n\nIt is possible to generate new unseal keys, provided you have a quorum of\nexisting unseal keys shares. See "vault operator rekey" for more information.\n')),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"RECOVERY:")," All the information are stored in the Consul k/v store under the path you defined inside your Vault config ",(0,r.kt)("inlineCode",{parentName:"p"},"consul kv get -recurse"),". To reset all of this first delete all Vault keys from the Consul k/v store ",(0,r.kt)("inlineCode",{parentName:"p"},"consul kv delete -recurse vault/"),", restart Vault ",(0,r.kt)("inlineCode",{parentName:"p"},"sudo service vault restart")," and reinitialize ",(0,r.kt)("inlineCode",{parentName:"p"},"vault operator init"))),(0,r.kt)("p",null,"To unseal Vault we now can use ",(0,r.kt)("strong",{parentName:"p"},"three")," of the ",(0,r.kt)("strong",{parentName:"p"},"Unseal Keys"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yml"},"vault operator unseal vanBssslvadjyp9jptzsAPO4uWGK1ZsT8FYW/qpS36iJ\nKey                Value\n---\n-----\nSeal Type          shamir\nInitialized        true\nSealed             true\nTotal Shares       5\nThreshold          3\nUnseal Progress    1/3\nUnseal Nonce       10ab3b57-8dba-f89b-0ad5-d941d1a8e8dd\nVersion            1.8.2\nStorage Type       consul\nHA Enabled         true\n\nvault operator unseal g6OsArgXl0+K0AUaSZJb8eNXAX1nfdKMdrRJfu8zIug1\n\nKey                Value\n---\n-----\nSeal Type          shamir\nInitialized        true\nSealed             true\nTotal Shares       5\nThreshold          3\nUnseal Progress    2/3\nUnseal Nonce       10ab3b57-8dba-f89b-0ad5-d941d1a8e8dd\nVersion            1.8.2\nStorage Type       consul\nHA Enabled         true\n\nvault operator unseal MHj+gJhnIgXI6mKxt3lHmtvJEgypaEczGeZF5Ep4uKgX\n\nKey                    Value\n---\n-----\nSeal Type              shamir\nInitialized            true\nSealed                 false\nTotal Shares           5\nThreshold              3\nVersion                1.8.2\nStorage Type           consul\nCluster Name           vault-cluster-825513f4\nCluster ID             95834c86-b5a6-e3fa-a5d3-a05c977dac8a\nHA Enabled             true\nHA Cluster             n/a\nHA Mode                standby\nActive Node Address    <none>\n")),(0,r.kt)("h2",{id:"accessing-the-ui"},"Accessing the UI"),(0,r.kt)("p",null,"I have configured Vault to start the user interface on ",(0,r.kt)("inlineCode",{parentName:"p"},"http://192.168.2.110:8200")," - there you can use the root token to unlock the UI:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yml"},"Initial Root Token: s.TFCSNUDRJbuBGjOkgaqSfEQR\n")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"HashiCorp Vault",src:a(71240).Z,width:"1014",height:"467"})),(0,r.kt)("p",null,"This token is the ",(0,r.kt)("strong",{parentName:"p"},"Root Token")," and should not be used by default - I am just going to use it for the set up process and later create a set of different tokens for different tasks. But for now:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cfg"},'echo "export VAULT_TOKEN=s.TFCSNUDRJbuBGjOkgaqSfEQR" >> ~/.zshrc\nsource ~/.zshrc\n')),(0,r.kt)("p",null,"This way I am now able to use both the UI and the CLI to interact with the Vault API:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"vault secrets list\n\nPath          Type         Accessor              Description\n----          ----         --------              -----------\ncubbyhole/    cubbyhole    cubbyhole_afe308c4    per-token private secret storage\nidentity/     identity     identity_76793f2d     identity store\nsys/          system       system_88682e7c       system endpoints used for control, policy and debugging\n")))}c.isMDXComponent=!0},71240:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/HashiCorp_Vault_01-13fc225a8dd8970d852b10dfda3192c1.png"},24891:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-4dde297a1a12027e4adf9e84677dc5af.jpg"}}]);