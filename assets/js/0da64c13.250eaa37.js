"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[22995],{3905:(e,t,n)=>{n.d(t,{Zo:()=>T,kt:()=>u});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=a.createContext({}),E=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},T=function(e){var t=E(e.components);return a.createElement(o.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},R=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,o=e.parentName,T=i(e,["components","mdxType","originalType","parentName"]),R=E(n),u=r,c=R["".concat(o,".").concat(u)]||R[u]||p[u]||s;return n?a.createElement(c,l(l({ref:t},T),{},{components:n})):a.createElement(c,l({ref:t},T))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,l=new Array(s);l[0]=R;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var E=2;E<s;E++)l[E]=n[E];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}R.displayName="MDXCreateElement"},82401:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>p,frontMatter:()=>s,metadata:()=>i,toc:()=>E});var a=n(87462),r=(n(67294),n(3905));const s={sidebar_position:6070,slug:"2021-09-13",title:"PostgreSQL 14 Database Refresher :: Introduction Part I",authors:"mpolinowski",tags:["SQL","Databases"]},l=void 0,i={unversionedId:"DevOps/Provisioning/2021-09-13--postgres-refresher-part-i/index",id:"DevOps/Provisioning/2021-09-13--postgres-refresher-part-i/index",title:"PostgreSQL 14 Database Refresher :: Introduction Part I",description:"Shenzhen, China",source:"@site/docs/DevOps/Provisioning/2021-09-13--postgres-refresher-part-i/index.md",sourceDirName:"DevOps/Provisioning/2021-09-13--postgres-refresher-part-i",slug:"/DevOps/Provisioning/2021-09-13--postgres-refresher-part-i/2021-09-13",permalink:"/docs/DevOps/Provisioning/2021-09-13--postgres-refresher-part-i/2021-09-13",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/DevOps/Provisioning/2021-09-13--postgres-refresher-part-i/index.md",tags:[{label:"SQL",permalink:"/docs/tags/sql"},{label:"Databases",permalink:"/docs/tags/databases"}],version:"current",sidebarPosition:6070,frontMatter:{sidebar_position:6070,slug:"2021-09-13",title:"PostgreSQL 14 Database Refresher :: Introduction Part I",authors:"mpolinowski",tags:["SQL","Databases"]},sidebar:"tutorialSidebar",previous:{title:"PostgreSQL 14 Database Refresher :: Introduction Part II",permalink:"/docs/DevOps/Provisioning/2021-09-13--postgres-refresher-part-ii/2021-09-13"},next:{title:"Loki - Promtail & Grafana for System Logs.",permalink:"/docs/DevOps/Provisioning/2021-04-07--loki-prometheus-grafana/2021-04-07"}},o={},E=[{value:"Setup",id:"setup",level:2},{value:"Overview",id:"overview",level:2},{value:"List of all Available Commands",id:"list-of-all-available-commands",level:3},{value:"List of all Available Queries",id:"list-of-all-available-queries",level:3},{value:"Create a Database for your Application",id:"create-a-database-for-your-application",level:2},{value:"Create the Database",id:"create-the-database",level:3},{value:"CREATE DATABASE",id:"create-database",level:4},{value:"Create the Tables",id:"create-the-tables",level:3},{value:"CREATE TABLES",id:"create-tables",level:4},{value:"Insert Data",id:"insert-data",level:3},{value:"INSERT INTO",id:"insert-into",level:4},{value:"Read Data",id:"read-data",level:3},{value:"SELECT All",id:"select-all",level:4},{value:"SELECT Specific",id:"select-specific",level:4},{value:"SELECT WHERE",id:"select-where",level:4},{value:"LIMIT",id:"limit",level:4},{value:"UPDATE",id:"update",level:4},{value:"Delete Data",id:"delete-data",level:3},{value:"DELETE FROM",id:"delete-from",level:4},{value:"Drop Entire Tables",id:"drop-entire-tables",level:3},{value:"DROP TABLE",id:"drop-table",level:4}],T={toc:E};function p(e){let{components:t,...s}=e;return(0,r.kt)("wrapper",(0,a.Z)({},T,s,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Shenzhen, China",src:n(29435).Z,width:"1500",height:"392"})),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#setup"},"Setup")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#overview"},"Overview"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#list-of-all-available-commands"},"List of all Available Commands")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#list-of-all-available-queries"},"List of all Available Queries")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#create-a-database-for-your-application"},"Create a Database for your Application"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#create-the-database"},"Create the Database"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#create-database"},"CREATE DATABASE")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#create-the-tables"},"Create the Tables"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#create-tables"},"CREATE TABLES")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#insert-data"},"Insert Data"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#insert-into"},"INSERT INTO")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#read-data"},"Read Data"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#select-all"},"SELECT All")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#select-specific"},"SELECT Specific")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#select-where"},"SELECT WHERE")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#limit"},"LIMIT")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#update"},"UPDATE")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#delete-data"},"Delete Data"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#delete-from"},"DELETE FROM")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#drop-entire-tables"},"Drop Entire Tables"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#drop-table"},"DROP TABLE"))))))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://www.postgresql.org"},"PostgreSQL")," is a powerful, open source object-relational database system with over 30 years of active development that has earned it a strong reputation for reliability, feature robustness, and performance."),(0,r.kt)("h2",{id:"setup"},"Setup"),(0,r.kt)("p",null,"I am going to use the ",(0,r.kt)("a",{parentName:"p",href:"https://hub.docker.com/_/postgres"},"official Docker image")," to set up the SQL Database on a Debian Bullseye server:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker run -d --rm \\\n    --name postgres \\\n    -e POSTGRES_PASSWORD=secretpassword \\\n    -p 5432:5432 \\\n    postgres:14\n")),(0,r.kt)("p",null,"I can now access the container and connect to the Postgres CLI:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'docker exec -ti -u postgres postgres psql\n\npsql (14.0 (Debian 14.0-1.pgdg110+1))\nType "help" for help.\n\npostgres=#\n')),(0,r.kt)("h2",{id:"overview"},"Overview"),(0,r.kt)("h3",{id:"list-of-all-available-commands"},"List of all Available Commands"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"\\?\n\nGeneral\n  \\copyright             show PostgreSQL usage and distribution terms\n  \\crosstabview [COLUMNS] execute query and display results in crosstab\n  \\errverbose            show most recent error message at maximum verbosity\n  \\g [(OPTIONS)] [FILE]  execute query (and send results to file or |pipe);\n                         \\g with no arguments is equivalent to a semicolon\n  \\gdesc                 describe result of query, without executing it\n  \\gexec                 execute query, then execute each value in its result\n  \\gset [PREFIX]         execute query and store results in psql variables\n  \\gx [(OPTIONS)] [FILE] as \\g, but forces expanded output mode\n  \\q                     quit psql\n  \\watch [SEC]           execute query every SEC seconds\n\nHelp\n  \\? [commands]          show help on backslash commands\n  \\? options             show help on psql command-line options\n  \\? variables           show help on special variables\n  \\h [NAME]              help on syntax of SQL commands, * for all commands\n\nQuery Buffer\n  \\e [FILE] [LINE]       edit the query buffer (or file) with external editor\n  \\ef [FUNCNAME [LINE]]  edit function definition with external editor\n  \\ev [VIEWNAME [LINE]]  edit view definition with external editor\n  \\p                     show the contents of the query buffer\n  \\r                     reset (clear) the query buffer\n  \\s [FILE]              display history or save it to file\n  \\w FILE                write query buffer to file\n\nInput/Output\n  \\copy ...              perform SQL COPY with data stream to the client host\n  \\echo [-n] [STRING]    write string to standard output (-n for no newline)\n  \\i FILE                execute commands from file\n  \\ir FILE               as \\i, but relative to location of current script\n  \\o [FILE]              send all query results to file or |pipe\n  \\qecho [-n] [STRING]   write string to \\o output stream (-n for no newline)\n  \\warn [-n] [STRING]    write string to standard error (-n for no newline)\n\nConditional\n  \\if EXPR               begin conditional block\n  \\elif EXPR             alternative within current conditional block\n  \\else                  final alternative within current conditional block\n  \\endif                 end conditional block\n\nInformational\n  (options: S = show system objects, + = additional detail)\n  \\d[S+]                 list tables, views, and sequences\n  \\d[S+]  NAME           describe table, view, sequence, or index\n  \\da[S]  [PATTERN]      list aggregates\n  \\dA[+]  [PATTERN]      list access methods\n  \\dAc[+] [AMPTRN [TYPEPTRN]]  list operator classes\nMost commands optionally preceded by integer argument k.  Defaults in brackets.\nStar (*) indicates argument becomes new default.\n-------------------------------------------------------------------------------\n<space>                 Display next k lines of text [current screen size]\nz                       Display next k lines of text [current screen size]*\n<return>                Display next k lines of text [1]*\nd or ctrl-D             Scroll k lines [current scroll size, initially 11]*\nq or Q or <interrupt>   Exit from more\ns                       Skip forward k lines of text [1]\nf                       Skip forward k screenfuls of text [1]\nb or ctrl-B             Skip backwards k screenfuls of text [1]\n'                       Go to place where previous search started\n=                       Display current line number\n/<regular expression>   Search for kth occurrence of regular expression [1]\nn                       Search for kth occurrence of last r.e [1]\n!<cmd> or :!<cmd>       Execute <cmd> in a subshell\nv                       Start up '/usr/bin/vi' at current line\nctrl-L                  Redraw screen\n:n                      Go to kth next file [1]\n:p                      Go to kth previous file [1]\n:f                      Display current file name and line number\n.                       Repeat previous command\n-------------------------------------------------------------------------------\n\n...skipping 1 line\n  \\dAo[+] [AMPTRN [OPFPTRN]]   list operators of operator families\n  \\dAp[+] [AMPTRN [OPFPTRN]]   list support functions of operator families\n  \\db[+]  [PATTERN]      list tablespaces\n  \\dc[S+] [PATTERN]      list conversions\n  \\dC[+]  [PATTERN]      list casts\n  \\dd[S]  [PATTERN]      show object descriptions not displayed elsewhere\n  \\dD[S+] [PATTERN]      list domains\n  \\ddp    [PATTERN]      list default privileges\n  \\dE[S+] [PATTERN]      list foreign tables\n  \\des[+] [PATTERN]      list foreign servers\n  \\det[+] [PATTERN]      list foreign tables\n  \\deu[+] [PATTERN]      list user mappings\n  \\dew[+] [PATTERN]      list foreign-data wrappers\n  \\df[anptw][S+] [FUNCPTRN [TYPEPTRN ...]]\n                         list [only agg/normal/procedure/trigger/window] functions\n  \\dF[+]  [PATTERN]      list text search configurations\n  \\dFd[+] [PATTERN]      list text search dictionaries\n  \\dFp[+] [PATTERN]      list text search parsers\n  \\dFt[+] [PATTERN]      list text search templates\n  \\dg[S+] [PATTERN]      list roles\n  \\di[S+] [PATTERN]      list indexes\n  \\dl                    list large objects, same as \\lo_list\n  \\dL[S+] [PATTERN]      list procedural languages\n  \\dm[S+] [PATTERN]      list materialized views\n  \\dn[S+] [PATTERN]      list schemas\n  \\do[S+] [OPPTRN [TYPEPTRN [TYPEPTRN]]]\n                         list operators\n  \\dO[S+] [PATTERN]      list collations\n  \\dp     [PATTERN]      list table, view, and sequence access privileges\n  \\dP[itn+] [PATTERN]    list [only index/table] partitioned relations [n=nested]\n  \\drds [ROLEPTRN [DBPTRN]] list per-database role settings\n  \\dRp[+] [PATTERN]      list replication publications\n  \\dRs[+] [PATTERN]      list replication subscriptions\n  \\ds[S+] [PATTERN]      list sequences\n  \\dt[S+] [PATTERN]      list tables\n  \\dT[S+] [PATTERN]      list data types\n  \\du[S+] [PATTERN]      list roles\n  \\dv[S+] [PATTERN]      list views\n  \\dx[+]  [PATTERN]      list extensions\n  \\dX     [PATTERN]      list extended statistics\n  \\dy[+]  [PATTERN]      list event triggers\n  \\l[+]   [PATTERN]      list databases\n  \\sf[+]  FUNCNAME       show a function's definition\n  \\sv[+]  VIEWNAME       show a view's definition\n  \\z      [PATTERN]      same as \\dp\n\nFormatting\n  \\a                     toggle between unaligned and aligned output mode\n  \\C [STRING]            set table title, or unset if none\n  \\f [STRING]            show or set field separator for unaligned query output\n\n...skipping 1 line\n  \\pset [NAME [VALUE]]   set table output option\n                         (border|columns|csv_fieldsep|expanded|fieldsep|\n                         fieldsep_zero|footer|format|linestyle|null|\n                         numericlocale|pager|pager_min_lines|recordsep|\n                         recordsep_zero|tableattr|title|tuples_only|\n                         unicode_border_linestyle|unicode_column_linestyle|\n                         unicode_header_linestyle)\n  \\t [on|off]            show only rows (currently off)\n  \\T [STRING]            set HTML <table> tag attributes, or unset if none\n  \\x [on|off|auto]       toggle expanded output (currently off)\n\nConnection\n  \\c[onnect] {[DBNAME|- USER|- HOST|- PORT|-] | conninfo}\n                         connect to new database (currently \"message_boards\")\n  \\conninfo              display information about current connection\n  \\encoding [ENCODING]   show or set client encoding\n  \\password [USERNAME]   securely change the password for a user\n\nOperating System\n  \\cd [DIR]              change the current working directory\n  \\setenv NAME [VALUE]   set or unset environment variable\n  \\timing [on|off]       toggle timing of commands (currently off)\n  \\! [COMMAND]           execute command in shell or start interactive shell\n\nVariables\n  \\prompt [TEXT] NAME    prompt user to set internal variable\n  \\set [NAME [VALUE]]    set internal variable, or list all if no parameters\n  \\unset NAME            unset (delete) internal variable\n\nLarge Objects\n  \\lo_export LOBOID FILE\n  \\lo_import FILE [COMMENT]\n  \\lo_list\n  \\lo_unlink LOBOID      large object operations\n")),(0,r.kt)("h3",{id:"list-of-all-available-queries"},"List of all Available Queries"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"\\h\nAvailable help:\n  ABORT                            CHECKPOINT                       CREATE USER                      DROP TRIGGER\n  ALTER AGGREGATE                  CLOSE                            CREATE USER MAPPING              DROP TYPE\n  ALTER COLLATION                  CLUSTER                          CREATE VIEW                      DROP USER\n  ALTER CONVERSION                 COMMENT                          DEALLOCATE                       DROP USER MAPPING\n  ALTER DATABASE                   COMMIT                           DECLARE                          DROP VIEW\n  ALTER DEFAULT PRIVILEGES         COMMIT PREPARED                  DELETE                           END\n  ALTER DOMAIN                     COPY                             DISCARD                          EXECUTE\n  ALTER EVENT TRIGGER              CREATE ACCESS METHOD             DO                               EXPLAIN\n  ALTER EXTENSION                  CREATE AGGREGATE                 DROP ACCESS METHOD               FETCH\n  ALTER FOREIGN DATA WRAPPER       CREATE CAST                      DROP AGGREGATE                   GRANT\n  ALTER FOREIGN TABLE              CREATE COLLATION                 DROP CAST                        IMPORT FOREIGN SCHEMA\n  ALTER FUNCTION                   CREATE CONVERSION                DROP COLLATION                   INSERT\n  ALTER GROUP                      CREATE DATABASE                  DROP CONVERSION                  LISTEN\n  ALTER INDEX                      CREATE DOMAIN                    DROP DATABASE                    LOAD\n  ALTER LANGUAGE                   CREATE EVENT TRIGGER             DROP DOMAIN                      LOCK\n  ALTER LARGE OBJECT               CREATE EXTENSION                 DROP EVENT TRIGGER               MOVE\n  ALTER MATERIALIZED VIEW          CREATE FOREIGN DATA WRAPPER      DROP EXTENSION                   NOTIFY\n  ALTER OPERATOR                   CREATE FOREIGN TABLE             DROP FOREIGN DATA WRAPPER        PREPARE\n  ALTER OPERATOR CLASS             CREATE FUNCTION                  DROP FOREIGN TABLE               PREPARE TRANSACTION\n  ALTER OPERATOR FAMILY            CREATE GROUP                     DROP FUNCTION                    REASSIGN OWNED\n  ALTER POLICY                     CREATE INDEX                     DROP GROUP                       REFRESH MATERIALIZED VIEW\n  ALTER PROCEDURE                  CREATE LANGUAGE                  DROP INDEX                       REINDEX\n  ALTER PUBLICATION                CREATE MATERIALIZED VIEW         DROP LANGUAGE                    RELEASE SAVEPOINT\n  ALTER ROLE                       CREATE OPERATOR                  DROP MATERIALIZED VIEW           RESET\n  ALTER ROUTINE                    CREATE OPERATOR CLASS            DROP OPERATOR                    REVOKE\n  ALTER RULE                       CREATE OPERATOR FAMILY           DROP OPERATOR CLASS              ROLLBACK\n  ALTER SCHEMA                     CREATE POLICY                    DROP OPERATOR FAMILY             ROLLBACK PREPARED\n  ALTER SEQUENCE                   CREATE PROCEDURE                 DROP OWNED                       ROLLBACK TO SAVEPOINT\n  ALTER SERVER                     CREATE PUBLICATION               DROP POLICY                      SAVEPOINT\n  ALTER STATISTICS                 CREATE ROLE                      DROP PROCEDURE                   SECURITY LABEL\n  ALTER SUBSCRIPTION               CREATE RULE                      DROP PUBLICATION                 SELECT\n  ALTER SYSTEM                     CREATE SCHEMA                    DROP ROLE                        SELECT INTO\n  ALTER TABLE                      CREATE SEQUENCE                  DROP ROUTINE                     SET\n  ALTER TABLESPACE                 CREATE SERVER                    DROP RULE                        SET CONSTRAINTS\n  ALTER TEXT SEARCH CONFIGURATION  CREATE STATISTICS                DROP SCHEMA                      SET ROLE\n  ALTER TEXT SEARCH DICTIONARY     CREATE SUBSCRIPTION              DROP SEQUENCE                    SET SESSION AUTHORIZATION\n  ALTER TEXT SEARCH PARSER         CREATE TABLE                     DROP SERVER                      SET TRANSACTION\n  ALTER TEXT SEARCH TEMPLATE       CREATE TABLE AS                  DROP STATISTICS                  SHOW\n  ALTER TRIGGER                    CREATE TABLESPACE                DROP SUBSCRIPTION                START TRANSACTION\n  ALTER TYPE                       CREATE TEXT SEARCH CONFIGURATION DROP TABLE                       TABLE\n  ALTER USER                       CREATE TEXT SEARCH DICTIONARY    DROP TABLESPACE                  TRUNCATE\n  ALTER USER MAPPING               CREATE TEXT SEARCH PARSER        DROP TEXT SEARCH CONFIGURATION   UNLISTEN\n  ALTER VIEW                       CREATE TEXT SEARCH TEMPLATE      DROP TEXT SEARCH DICTIONARY      UPDATE\n  ANALYZE                          CREATE TRANSFORM                 DROP TEXT SEARCH PARSER          VACUUM\n  BEGIN                            CREATE TRIGGER                   DROP TEXT SEARCH TEMPLATE        VALUES\n  CALL                             CREATE TYPE                      DROP TRANSFORM                   WITH\n")),(0,r.kt)("h2",{id:"create-a-database-for-your-application"},"Create a Database for your Application"),(0,r.kt)("h3",{id:"create-the-database"},"Create the Database"),(0,r.kt)("h4",{id:"create-database"},"CREATE DATABASE"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE DATABASE message_boards;\n")),(0,r.kt)("p",null,"Switch to using the new ",(0,r.kt)("inlineCode",{parentName:"p"},"message_boards")," table instead of the default ",(0,r.kt)("inlineCode",{parentName:"p"},"postgres"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},'\\connect message_boards;\nYou are now connected to database "message_boards" as user "postgres".\n')),(0,r.kt)("p",null,"List all databases:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"\\list\n                                   List of databases\n      Name      |  Owner   | Encoding |  Collate   |   Ctype    |   Access privileges   \n----------------+----------+----------+------------+------------+-----------------------\n message_boards | postgres | UTF8     | en_US.utf8 | en_US.utf8 | \n postgres       | postgres | UTF8     | en_US.utf8 | en_US.utf8 | \n template0      | postgres | UTF8     | en_US.utf8 | en_US.utf8 | =c/postgres          +\n                |          |          |            |            | postgres=CTc/postgres\n template1      | postgres | UTF8     | en_US.utf8 | en_US.utf8 | =c/postgres          +\n                |          |          |            |            | postgres=CTc/postgres\n(4 rows)\n")),(0,r.kt)("h3",{id:"create-the-tables"},"Create the Tables"),(0,r.kt)("h4",{id:"create-tables"},"CREATE TABLES"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE TABLE users (\n  user_id INTEGER PRIMARY KEY GENERATED ALWAYS AS IDENTITY,\n  username VARCHAR ( 25 ) UNIQUE NOT NULL,\n  email VARCHAR ( 50 ) UNIQUE NOT NULL,\n  full_name VARCHAR ( 100 ) NOT NULL,\n  last_login TIMESTAMP,\n  created_on TIMESTAMP NOT NULL\n);\n\nCREATE TABLE boards (\n  board_id INTEGER PRIMARY KEY GENERATED ALWAYS AS IDENTITY,\n  board_name VARCHAR ( 50 ) UNIQUE NOT NULL,\n  board_description TEXT NOT NULL\n);\n\nCREATE TABLE comments (\n  comment_id INTEGER PRIMARY KEY GENERATED ALWAYS AS IDENTITY,\n  user_id INT REFERENCES users(user_id) ON DELETE CASCADE,\n  board_id INT REFERENCES boards(board_id) ON DELETE CASCADE,\n  comment TEXT NOT NULL,\n  time TIMESTAMP\n);\n\nCREATE TABLE rich_content (\n  content_id INTEGER PRIMARY KEY GENERATED ALWAYS AS IDENTITY,\n  comment_id INT REFERENCES comments(comment_id) ON DELETE CASCADE,\n  content JSONB NOT NULL\n);\n")),(0,r.kt)("p",null,"List all existing tables with:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"\\d\n                     List of relations\n Schema |            Name             |   Type   |  Owner   \n--------+-----------------------------+----------+----------\n public | boards                      | table    | postgres\n public | boards_board_id_seq         | sequence | postgres\n public | comments                    | table    | postgres\n public | comments_comment_id_seq     | sequence | postgres\n public | rich_content                | table    | postgres\n public | rich_content_content_id_seq | sequence | postgres\n public | users                       | table    | postgres\n public | users_user_id_seq           | sequence | postgres\n(8 rows)\n")),(0,r.kt)("h3",{id:"insert-data"},"Insert Data"),(0,r.kt)("h4",{id:"insert-into"},"INSERT INTO"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"INSERT INTO users (username, email, full_name, created_on) VALUES ('mpolinowski', 'm.polinowski@myemail.com', 'Mike Polinowski', NOW());\n")),(0,r.kt)("h3",{id:"read-data"},"Read Data"),(0,r.kt)("h4",{id:"select-all"},"SELECT All"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * FROM users;\n\n user_id |  username   |          email           |    full_name    | last_login |         created_on         \n---------+-------------+--------------------------+-----------------+------------+----------------------------\n       1 | mpolinowski | m.polinowski@myemail.com | Mike Polinowski |            | 2021-10-09 08:20:30.088139\n(1 row)\n")),(0,r.kt)("h4",{id:"select-specific"},"SELECT Specific"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT full_name FROM users;\n\n    full_name    \n-----------------\n Mike Polinowski\n(1 row)\n")),(0,r.kt)("h4",{id:"select-where"},"SELECT WHERE"),(0,r.kt)("p",null,"Find email address of a specific user:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT email FROM users WHERE username='mpolinowski';\n\n          email           \n--------------------------\n m.polinowski@myemail.com\n(1 row)\n")),(0,r.kt)("p",null,"Find all users that never logged in:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * FROM users WHERE last_login IS NULL;\n\n user_id |  username   |          email           |    full_name    | last_login |         created_on         \n---------+-------------+--------------------------+-----------------+------------+----------------------------\n       1 | mpolinowski | m.polinowski@myemail.com | Mike Polinowski |            | 2021-10-09 08:20:30.088139\n(1 row)\n")),(0,r.kt)("p",null,"Find all users that never logged in and who's sign-up is longer than 6 months ago:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * FROM users WHERE last_login IS NULL AND created_on < NOW() - interval '6 months';\n")),(0,r.kt)("p",null,"Find newest / oldest user account:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * FROM users ORDER BY created_on DESC LIMIT 1;\nSELECT * FROM users ORDER BY created_on LIMIT 1;\n")),(0,r.kt)("p",null,"Count number of users and number of users that actually logged in:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"select COUNT(*) FROM users;\nselect COUNT(last_login) FROM users;\n")),(0,r.kt)("h4",{id:"limit"},"LIMIT"),(0,r.kt)("p",null,"Limit the amount of returned data:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * FROM users LIMIT 5;\n")),(0,r.kt)("h4",{id:"update"},"UPDATE"),(0,r.kt)("p",null,"Tag a user that just logged in:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"UPDATE username, last_login SET last_login=NOW() WHERE username='mpolinowski' RETURNING *;\n\n  username   |         last_login         \n-------------+----------------------------\n mpolinowski | 2021-10-09 09:24:05.623879\n(1 row)\nUPDATE 1\n")),(0,r.kt)("h3",{id:"delete-data"},"Delete Data"),(0,r.kt)("h4",{id:"delete-from"},"DELETE FROM"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"DELETE FROM users WHERE username='mpolinowski';\n")),(0,r.kt)("h3",{id:"drop-entire-tables"},"Drop Entire Tables"),(0,r.kt)("h4",{id:"drop-table"},"DROP TABLE"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"DROP TABLE IF EXISTS rich_content;\nDROP TABLE IF EXISTS comments;\nDROP TABLE IF EXISTS boards;\nDROP TABLE IF EXISTS users;\n")))}p.isMDXComponent=!0},29435:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-71f2b7209f58ecc12682d4095513b1b8.jpg"}}]);