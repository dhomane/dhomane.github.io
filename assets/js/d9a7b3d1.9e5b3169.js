"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[84007],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>u});var a=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=a.createContext({}),l=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=l(e.components);return a.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=l(n),u=i,g=d["".concat(p,".").concat(u)]||d[u]||m[u]||r;return n?a.createElement(g,o(o({ref:t},c),{},{components:n})):a.createElement(g,o({ref:t},c))}));function u(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=d;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var l=2;l<r;l++)o[l]=n[l];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},61403:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>m,frontMatter:()=>r,metadata:()=>s,toc:()=>l});var a=n(87462),i=(n(67294),n(3905));const r={sidebar_position:9090,slug:"2022-05-02",title:"React Native Navigation",authors:"mpolinowski",tags:["Javascript","React","ReactNative"]},o=void 0,s={unversionedId:"Development/ReactNative/2022-05-02-react-native-navigation/index",id:"Development/ReactNative/2022-05-02-react-native-navigation/index",title:"React Native Navigation",description:"Victoria Harbour, Hongkong",source:"@site/docs/Development/ReactNative/2022-05-02-react-native-navigation/index.md",sourceDirName:"Development/ReactNative/2022-05-02-react-native-navigation",slug:"/Development/ReactNative/2022-05-02-react-native-navigation/2022-05-02",permalink:"/docs/Development/ReactNative/2022-05-02-react-native-navigation/2022-05-02",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Development/ReactNative/2022-05-02-react-native-navigation/index.md",tags:[{label:"Javascript",permalink:"/docs/tags/javascript"},{label:"React",permalink:"/docs/tags/react"},{label:"ReactNative",permalink:"/docs/tags/react-native"}],version:"current",sidebarPosition:9090,frontMatter:{sidebar_position:9090,slug:"2022-05-02",title:"React Native Navigation",authors:"mpolinowski",tags:["Javascript","React","ReactNative"]},sidebar:"tutorialSidebar",previous:{title:"React Native Context API",permalink:"/docs/Development/ReactNative/2022-05-03-react-native-contextapi/2022-05-03"},next:{title:"React Native Hello World",permalink:"/docs/Development/ReactNative/2022-05-01-react-native-hello-world/2022-05-01"}},p={},l=[{value:"Setup",id:"setup",level:2},{value:"Adding Navigation",id:"adding-navigation",level:2},{value:"Navigate to a Secondary Screen",id:"navigate-to-a-secondary-screen",level:3},{value:"Navigation from a Child Component",id:"navigation-from-a-child-component",level:3},{value:"Passing Data between Screens",id:"passing-data-between-screens",level:3},{value:"Using withNavigation HoC",id:"using-withnavigation-hoc",level:3}],c={toc:l};function m(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,a.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Victoria Harbour, Hongkong",src:n(4760).Z,width:"1500",height:"565"})),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#setup"},"Setup")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#adding-navigation"},"Adding Navigation"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#navigate-to-a-secondary-screen"},"Navigate to a Secondary Screen")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#navigation-from-a-child-component"},"Navigation from a Child Component")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#passing-data-between-screens"},"Passing Data between Screens")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#using-withnavigation-hoc"},"Using withNavigation HoC"))))),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mpolinowski/react-native-routing"},"Github Repository")),(0,i.kt)("h2",{id:"setup"},"Setup"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"npm install -g expo-cli\nexpo init react-native-navigation\n")),(0,i.kt)("p",null,"Choose the ",(0,i.kt)("strong",{parentName:"p"},"blank")," template and run the client:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"cd react-native-navigation\nnpm install styled-components react-navigation axios react-native-safe-area-view react-native-safe-area-context\nexpo-cli install react-native-gesture-handler react-native-reanimated react-navigation-stack\nnpm start\n")),(0,i.kt)("p",null,"I can test code by scanning the QR Code using the ",(0,i.kt)("strong",{parentName:"p"},"Expo Go")," app under Android or by pressing the ",(0,i.kt)("inlineCode",{parentName:"p"},"w")," key to activate a web preview."),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},(0,i.kt)("inlineCode",{parentName:"p"},"error:0308010C:digital envelope routines::unsupported"),": Newer versions of Node.js use OpenSSLv3 that brought some ",(0,i.kt)("a",{parentName:"p",href:"https://wiki.openssl.org/index.php/OpenSSL_3.0#Upgrading_to_OpenSSL_3.0_from_OpenSSL_1.0.2"},"breaking changes"),". Can be fixed (",(0,i.kt)("strong",{parentName:"p"},">=Nodejs v17"),") by adding the following option to the start script inside your ",(0,i.kt)("inlineCode",{parentName:"p"},"package.json")," -> ",(0,i.kt)("inlineCode",{parentName:"p"},'"start": "export NODE_OPTIONS=--openssl-legacy-provider && expo start"'))),(0,i.kt)("h2",{id:"adding-navigation"},"Adding Navigation"),(0,i.kt)("p",null,"The Expo CLI gave us a basic app boiler plate that we can  now edit. Start by removing the content of ",(0,i.kt)("inlineCode",{parentName:"p"},"App.js")," (or ",(0,i.kt)("inlineCode",{parentName:"p"},"index.js"),") and add the following:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"import { createAppContainer, createSwitchNavigator } from 'react-navigation';\nimport { createStackNavigator } from 'react-navigation-stack';\n\nimport HomeScreen from './src/screens/Home'\n\nconst navigator = createStackNavigator(\n    {\n        Home: HomeScreen\n    },\n    {\n        initialRouteName: 'Home',\n        defaultNavigationOptions: {\n            title: 'Home'\n        }\n    }\n)\n\nexport default createAppContainer(navigator)\n")),(0,i.kt)("p",null,"And create the ",(0,i.kt)("inlineCode",{parentName:"p"},"./src/screens/Home.js")," component:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react'\nimport { View, Text } from 'react-native'\n\nconst HomeScreen = () => {\n    return (\n        <View>\n            <Text>Hello</Text>\n        </View>\n    )\n}\n\nexport default HomeScreen\n")),(0,i.kt)("p",null,"Check the output inside your browser - there should be a small ",(0,i.kt)("inlineCode",{parentName:"p"},"Hello")," displayed in the top right. As well as a top navigation bar telling you that you are on the ",(0,i.kt)("strong",{parentName:"p"},"Home")," screen."),(0,i.kt)("h3",{id:"navigate-to-a-secondary-screen"},"Navigate to a Secondary Screen"),(0,i.kt)("p",null,"Create a second screen component ",(0,i.kt)("inlineCode",{parentName:"p"},"src/screens/Details.jsx")," that will show details about the list items on our home screen:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react'\nimport {View, Text} from 'react-native'\n  \nconst ItemDetails = (props) => {\n    return (\n        <View>\n            <Text>Details</Text>\n        </View>\n    )\n}\n\nexport default ItemDetails\n")),(0,i.kt)("p",null,"Add the new screen to our navigator function:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"import { createAppContainer, createSwitchNavigator } from 'react-navigation';\nimport { createStackNavigator } from 'react-navigation-stack';\n\nimport HomeScreen from './src/screens/Home'\nimport ItemDetails from './src/screens/Details'\n\nconst navigator = createStackNavigator(\n    {\n        Home: HomeScreen,\n        Details: ItemDetails\n    },\n    {\n        initialRouteName: 'Home',\n        defaultNavigationOptions: {\n        title: 'Juicy Delicious'\n        }\n    }\n)\n\nexport default createAppContainer(navigator)\n")),(0,i.kt)("p",null,"Forward the navigation prop from our home screen to the home list child component:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react'\nimport { View } from 'react-native'\n\nimport HomeList from '../components/HomeList'\n\nconst HomeScreen = (props) => {\n    return (\n        <View>\n            <HomeList navigate = {props.navigation.navigate}/>\n        </View>\n    )\n}\n\nexport default HomeScreen\n")),(0,i.kt)("p",null,"And use it to set the navigate variable to the desired screen on button press - in this case ",(0,i.kt)("inlineCode",{parentName:"p"},"Details"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react'\nimport { ListHeader, ListSubHeader, ListItem, ListButton, StyledList } from './_styles'\n\nimport data from '../data/fruity.json'\n\nconst HomeList = (props) => {\n    return (\n        <StyledList\n            data={data}\n            keyExtractor={item => item.fruit}\n            renderItem={( {item} ) => {\n                return (\n                    <ListItem>\n                        <ListButton onPress={() => {\n                            props.navigate('Details')\n                        }} >\n                            <ListHeader>{ item.fruit }</ListHeader>\n                            <ListSubHeader>{ item.colour }</ListSubHeader>\n                        </ListButton>\n                    </ListItem>\n            )}} />\n    )\n}\n\nexport default HomeList\n")),(0,i.kt)("p",null,"Pressing on any list item will now set the navigation prop to ",(0,i.kt)("inlineCode",{parentName:"p"},"Details")," and send us to the item details page - that currently only shows the word ",(0,i.kt)("strong",{parentName:"p"},"Details"),"."),(0,i.kt)("h3",{id:"navigation-from-a-child-component"},"Navigation from a Child Component"),(0,i.kt)("p",null,"In the example above we had to get access to the navigation prop from our screen component. We can simplify this by importing the ",(0,i.kt)("inlineCode",{parentName:"p"},"withNavigation")," HOC from ",(0,i.kt)("inlineCode",{parentName:"p"},"react-navigation")," into our child component:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react'\nimport { withNavigation } from 'react-navigation'\n\nimport { ListHeader, ListSubHeader, ListItem, ListButton, StyledList } from './_styles'\nimport data from '../data/fruity.json'\n\nconst HomeList = (props) => {\n    return (\n        <StyledList\n            data={data}\n            keyExtractor={item => item.fruit}\n            renderItem={( {item} ) => {\n                return (\n                    <ListItem>\n                        <ListButton onPress={() => {\n                            props.navigation.navigate('Details')\n                        }} >\n                            <ListHeader>{ item.fruit }</ListHeader>\n                            <ListSubHeader>{ item.colour }</ListSubHeader>\n                        </ListButton>\n                    </ListItem>\n            )}} />\n        )\n}\n\nexport default withNavigation(HomeList)\n")),(0,i.kt)("h3",{id:"passing-data-between-screens"},"Passing Data between Screens"),(0,i.kt)("p",null,"We can use the navigation prop inside our home list to also relay the information which item was clicked to the details screen:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"<HomeList navigation={props.navigation}/>\n")),(0,i.kt)("p",null,"And use this data in our item details:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react'\nimport { ListHeader, ListSubHeader, ListItem, ListButton } from '../components/_styles'\n\nconst ItemDetails = (props) => {\n    const item = props.navigation.getParam('data')\n    return (\n        <ListItem>\n            <ListButton onPress={() => {\n                props.navigation.navigate('Details', {data: item})\n            }} >\n                <ListHeader>{ item.fruit }</ListHeader>\n                <ListSubHeader>{ item.colour }</ListSubHeader>\n            </ListButton>\n        </ListItem>\n    )\n}\n\nexport default ItemDetails\n")),(0,i.kt)("h3",{id:"using-withnavigation-hoc"},"Using withNavigation HoC"),(0,i.kt)("p",null,"Instead of passing the routing information as props from our ",(0,i.kt)("strong",{parentName:"p"},"HomeList"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"<HomeList />\n")),(0,i.kt)("p",null,"we can also use wrap our component in the ",(0,i.kt)("inlineCode",{parentName:"p"},"withNavigation")," component to provide the necessary information:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react'\nimport { withNavigation } from 'react-navigation'\n\nimport { ListHeader, ListItem, ListButton, StyledList } from './_styles'\nimport data from '../data/fruity.json'\n\nconst HomeList = (props) => {\n    return (\n        <StyledList\n            data={data}\n            keyExtractor={item => item.fruit}\n            renderItem={( {item} ) => {\n                return (\n                    <ListItem>\n                    <ListButton onPress={() => {\n                        props.navigation.navigate('Details', {data: item})\n                    }} >\n                        <ListHeader>{ item.fruit }</ListHeader>\n                    </ListButton>\n            </ListItem>\n        )}} />\n    )\n}\n\nexport default withNavigation(HomeList)\n")))}m.isMDXComponent=!0},4760:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-23d027067cc9016279f834178a642545.jpg"}}]);