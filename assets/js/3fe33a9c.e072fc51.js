"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[16048],{3905:(e,t,o)=>{o.d(t,{Zo:()=>u,kt:()=>d});var n=o(67294);function r(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function a(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function i(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?a(Object(o),!0).forEach((function(t){r(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):a(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function s(e,t){if(null==e)return{};var o,n,r=function(e,t){if(null==e)return{};var o,n,r={},a=Object.keys(e);for(n=0;n<a.length;n++)o=a[n],t.indexOf(o)>=0||(r[o]=e[o]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)o=a[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}var l=n.createContext({}),p=function(e){var t=n.useContext(l),o=t;return e&&(o="function"==typeof e?e(t):i(i({},t),e)),o},u=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var o=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),c=p(o),d=r,k=c["".concat(l,".").concat(d)]||c[d]||m[d]||a;return o?n.createElement(k,i(i({ref:t},u),{},{components:o})):n.createElement(k,i({ref:t},u))}));function d(e,t){var o=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=o.length,i=new Array(a);i[0]=c;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var p=2;p<a;p++)i[p]=o[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,o)}c.displayName="MDXCreateElement"},33174:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>s,toc:()=>p});var n=o(87462),r=(o(67294),o(3905));const a={sidebar_position:6070,slug:"2022-07-23",title:"Mosquitto Broker from Source",authors:"mpolinowski",tags:["IoT"],image:"https://mpolinowski.github.io/img/search/mqtt.png",description:"Building the Mosquitto MQTT broker from source on an Arch Linux System with Websocket support."},i=void 0,s={unversionedId:"IoT-and-Machine-Learning/MQTT/2022-07-23-mosquitto-broker-compilation/index",id:"IoT-and-Machine-Learning/MQTT/2022-07-23-mosquitto-broker-compilation/index",title:"Mosquitto Broker from Source",description:"Building the Mosquitto MQTT broker from source on an Arch Linux System with Websocket support.",source:"@site/docs/IoT-and-Machine-Learning/MQTT/2022-07-23-mosquitto-broker-compilation/index.md",sourceDirName:"IoT-and-Machine-Learning/MQTT/2022-07-23-mosquitto-broker-compilation",slug:"/IoT-and-Machine-Learning/MQTT/2022-07-23-mosquitto-broker-compilation/2022-07-23",permalink:"/docs/IoT-and-Machine-Learning/MQTT/2022-07-23-mosquitto-broker-compilation/2022-07-23",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/IoT-and-Machine-Learning/MQTT/2022-07-23-mosquitto-broker-compilation/index.md",tags:[{label:"IoT",permalink:"/docs/tags/io-t"}],version:"current",sidebarPosition:6070,frontMatter:{sidebar_position:6070,slug:"2022-07-23",title:"Mosquitto Broker from Source",authors:"mpolinowski",tags:["IoT"],image:"https://mpolinowski.github.io/img/search/mqtt.png",description:"Building the Mosquitto MQTT broker from source on an Arch Linux System with Websocket support."},sidebar:"tutorialSidebar",previous:{title:"Mosquitto Broker Docker Cross-Compile",permalink:"/docs/IoT-and-Machine-Learning/MQTT/2022-07-24-mosquitto-broker-cross-compilation/2022-07-24"},next:{title:"Go - MQTT Hello World",permalink:"/docs/IoT-and-Machine-Learning/MQTT/2022-07-22-go-hello-world/2022-07-22"}},l={},p=[{value:"Build on Linux Desktop",id:"build-on-linux-desktop",level:2},{value:"Test Run",id:"test-run",level:3}],u={toc:p};function m(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Guangzhou, China",src:o(36250).Z,width:"2385",height:"962"})),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#build-on-linux-desktop"},"Build on Linux Desktop"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#test-run"},"Test Run"))))),(0,r.kt)("h2",{id:"build-on-linux-desktop"},"Build on Linux Desktop"),(0,r.kt)("p",null,"Start by ",(0,r.kt)("a",{parentName:"p",href:"https://mosquitto.org/download/"},"downloading the source code"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"wget https://mosquitto.org/files/source/mosquitto-2.0.15.tar.gz\ntar -xvf mosquitto-2.0.15.tar.gz\nrm -rf mosquitto-2.0.15.tar.gz\ncd ./mosquitto-2.0.15\n")),(0,r.kt)("p",null,"Run ",(0,r.kt)("inlineCode",{parentName:"p"},"make")," to build the binary and use the following flags as required:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"c-ares")," (libc-ares-dev on Debian based systems) - only when compiled with make WITH_SRV=yes"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"cJSON")," - for client JSON output support. Disable with ",(0,r.kt)("inlineCode",{parentName:"li"},"make WITH_CJSON=no")," Auto detected with CMake."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"libwebsockets")," (libwebsockets-dev) - enable with ",(0,r.kt)("inlineCode",{parentName:"li"},"make WITH_WEBSOCKETS=yes")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"openssl")," (libssl-dev on Debian based systems) - disable with ",(0,r.kt)("inlineCode",{parentName:"li"},"make WITH_TLS=no")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"pthreads")," - for client library thread support. This is required to support the mosquitto_loop_start() and mosquitto_loop_stop() functions. If compiled without pthread support, the library isn't guaranteed to be thread safe."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"uthash / utlist")," - bundled versions of these headers are provided, disable their use with make ",(0,r.kt)("inlineCode",{parentName:"li"},"WITH_BUNDLED_DEPS=no")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"xsltproc")," (xsltproc and docbook-xsl on Debian based systems) - only needed when building from git sources - disable with make ",(0,r.kt)("inlineCode",{parentName:"li"},"WITH_DOCS=no"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"make WITH_WEBSOCKETS=yes WITH_CJSON=yes WITH_TLS=yes WITH_BUNDLED_DEPS=yes WITH_DOCS=no\n")),(0,r.kt)("p",null,"This will build the binary ",(0,r.kt)("inlineCode",{parentName:"p"},"./mosquitto-2.0.15/src/mosquitto"),"."),(0,r.kt)("h3",{id:"test-run"},"Test Run"),(0,r.kt)("p",null,"As preparation I will copy the binary to:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo mkdir /opt/mosquitto\nsudo cp src/mosquitto /opt/mosquitto/\n")),(0,r.kt)("p",null,"I will also use the password generator that comes with Mosquitto:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo cp apps/mosquitto_passwd/mosquitto_passwd /opt/mosquitto/\n")),(0,r.kt)("p",null,"To run the broker we first have to create a configuration file ",(0,r.kt)("inlineCode",{parentName:"p"},"mosquitto.conf")," - I am going to activate persistance and logging just to see if it working (make sure to use a ",(0,r.kt)("inlineCode",{parentName:"p"},"user mosquitto")," that is available on your system - you can replace mosquitto with your own user):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-conf"},"auto_id_prefix zeroid-\npersistent_client_expiration 1d\nqueue_qos0_messages true\nuser mosquitto\nlistener 1883\nprotocol mqtt\nlistener 1885\nprotocol websockets\nsocket_domain ipv4\nautosave_interval 7200\npersistence true\npersistence_file mosquitto.db\npersistence_location /opt/mosquitto\nlog_dest file /opt/mosquitto/mosquitto.log\nlog_type error\nlog_type warning\nlog_type notice\nlog_type information\nconnection_messages true\nlog_timestamp true\nlog_timestamp_format %Y-%m-%dT%H:%M:%S\nallow_anonymous false\npassword_file /opt/mosquitto/passwordfile\n")),(0,r.kt)("p",null,"Now we need to create the ",(0,r.kt)("inlineCode",{parentName:"p"},"passwordfile")," that will hold the broker login. ",(0,r.kt)("inlineCode",{parentName:"p"},"mosquitto_passwd")," is a tool for managing password files for mosquitto."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Usage"),": \tmosquitto_passwd ","[-H sha512 | -H sha512-pbkdf2][-c | -D]"," passwordfile username\nmosquitto_passwd ","[-H sha512 | -H sha512-pbkdf2][-c]"," -b passwordfile username password\nmosquitto_passwd -U passwordfile"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"-b")," : run in batch mode to allow passing passwords on the command line."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"-c")," : create a new password file. This will overwrite existing files."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"-D")," : delete the username rather than adding/updating its password."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"-H")," : specify the hashing algorithm. Defaults to sha512-pbkdf2, which is recommended."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"-U")," : update a plain text password file to use hashed passwords.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"mosquitto_passwd -H sha512-pbkdf2 -b -c passwordfile admin instar\n")),(0,r.kt)("p",null,"This creates the passwordfile required by our configuration file:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cat /opt/mosquitto/passwordfile\nadmin:$7$101$LSO6p87vcuGTol/U$t0jRLUn2iEnpLAiO4FGR7kPZsqgGvEjEabsbwJ4wqbLungrBtwM3D7BKqnNgczKX0XPezzvbgURB0LYvveX2zA==\n")),(0,r.kt)("p",null,"Since I am running the broker with the ",(0,r.kt)("inlineCode",{parentName:"p"},"mosquitto")," user I have to make sure that the user is allowed to access all those files inside the directories:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo chown mosquitto:mosquitto /opt/mosquitto/*\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"ls -la\ndrwxr-xr-x  2 mosquitto mosquitto    4096 Sep 11 15:36 .\ndrwxr-xr-x 19 root      root         4096 Sep 11 15:13 ..\n-rwxr-xr-x  1 mosquitto mosquitto 1770008 Sep 11 15:14 mosquitto\n-rw-r--r--  1 mosquitto mosquitto     533 Sep 11 15:41 mosquitto.conf\n-rwxr-xr-x  1 mosquitto mosquitto   80232 Sep 11 15:20 mosquitto_passwd\n-rw-r--r--  1 mosquitto mosquitto     119 Sep 11 15:29 passwordfile\n")),(0,r.kt)("p",null,"Now I can finally start Mosquitto with the following command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"./mosquitto -c /opt/mosquitto/mosquitto.conf\n")),(0,r.kt)("p",null,"I am getting an error message here that the log file could not be written:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"2022-09-11T16:01:23: Error: Unable to open log file /opt/mosquitto/mosquitto.log for writing.\n")),(0,r.kt)("p",null,"This will probably also affect the persistance... let's add the files with correct permissions and restart:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo touch /opt/mosquitto/mosquitto.log\nsudo touch /opt/mosquitto/mosquitto.db\nsudo chown mosquitto:mosquitto /opt/mosquitto/*\n")),(0,r.kt)("p",null,"Strange, I am still getting write permission errors - let's open this up completely:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo chmod 777 /opt/mosquitto/*\n")),(0,r.kt)("p",null,"Not sure what the issue is here with the ",(0,r.kt)("inlineCode",{parentName:"p"},"mosquitto")," user on my system. But it is working correctly:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cat mosquitto.log\n\n2022-09-11T16:15:04: mosquitto version 2.0.15 starting\n2022-09-11T16:15:04: Config loaded from /opt/mosquitto/mosquitto.conf.\n2022-09-11T16:15:04: Opening ipv4 listen socket on port 1883.\n2022-09-11T16:15:04: Opening ipv6 listen socket on port 1883.\n2022-09-11T16:15:04: Opening websockets listen socket on port 1885.\n2022-09-11T16:15:04: mosquitto version 2.0.15 running\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"netstat -tlnp\n\nProto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name    \ntcp        0      0 0.0.0.0:1885            0.0.0.0:*               LISTEN      26215/./mosquitto   \ntcp        0      0 0.0.0.0:1883            0.0.0.0:*               LISTEN      26215/./mosquitto   \ntcp6       0      0 :::1883                 :::*                    LISTEN      26215/./mosquitto\n")),(0,r.kt)("p",null,"I can test the broker using the MQTT Explorer:"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Mosquitto Broker from Source",src:o(91089).Z,width:"1016",height:"622"})),(0,r.kt)("p",null,"The Explorer is going to connect using the Websocket interface on port ",(0,r.kt)("inlineCode",{parentName:"p"},"1885")," and I can add another client - my INSTAR MQTT camera - using classic MQTT on port ",(0,r.kt)("inlineCode",{parentName:"p"},"1883"),". A few seconds later I can see my cameras LWT telling me the connection worked:"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Mosquitto Broker from Source",src:o(25524).Z,width:"1190",height:"669"})))}m.isMDXComponent=!0},91089:(e,t,o)=>{o.d(t,{Z:()=>n});const n=o.p+"assets/images/Mosquitto_Compile_from_Source_01-dd049775b00204aca0e6396b4d0e2ffa.png"},25524:(e,t,o)=>{o.d(t,{Z:()=>n});const n=o.p+"assets/images/Mosquitto_Compile_from_Source_02-c16921842a1564b7e518633f5383b06f.png"},36250:(e,t,o)=>{o.d(t,{Z:()=>n});const n=o.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-4dda98a4eb3b498839926e0b6a5039aa.jpg"}}]);