"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[21809],{3905:(e,t,n)=>{n.d(t,{Zo:()=>h,kt:()=>u});var o=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=o.createContext({}),p=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},h=function(e){var t=p(e.components);return o.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},g=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,h=l(e,["components","mdxType","originalType","parentName"]),g=p(n),u=r,m=g["".concat(s,".").concat(u)]||g[u]||c[u]||a;return n?o.createElement(m,i(i({ref:t},h),{},{components:n})):o.createElement(m,i({ref:t},h))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=g;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var p=2;p<a;p++)i[p]=n[p];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}g.displayName="MDXCreateElement"},39215:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>c,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var o=n(87462),r=(n(67294),n(3905));const a={sidebar_position:1e4,slug:"2017-12-17",title:"Python Network Logger",authors:"mpolinowski",tags:["Python"]},i=void 0,l={unversionedId:"Development/Python/2017-12-17--python-ssh-logger/index",id:"Development/Python/2017-12-17--python-ssh-logger/index",title:"Python Network Logger",description:"Harbin, China",source:"@site/docs/Development/Python/2017-12-17--python-ssh-logger/index.mdx",sourceDirName:"Development/Python/2017-12-17--python-ssh-logger",slug:"/Development/Python/2017-12-17--python-ssh-logger/2017-12-17",permalink:"/docs/Development/Python/2017-12-17--python-ssh-logger/2017-12-17",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Development/Python/2017-12-17--python-ssh-logger/index.mdx",tags:[{label:"Python",permalink:"/docs/tags/python"}],version:"current",sidebarPosition:1e4,frontMatter:{sidebar_position:1e4,slug:"2017-12-17",title:"Python Network Logger",authors:"mpolinowski",tags:["Python"]},sidebar:"tutorialSidebar",previous:{title:"Getting started with Python",permalink:"/docs/Development/Python/2017-12-11--getting-started-with-python/2017-12-11"},next:{title:"Go",permalink:"/docs/category/go"}},s={},p=[],h={toc:p};function c(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,o.Z)({},h,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Harbin, China",src:n(4193).Z,width:"1500",height:"603"})),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#python-ssh-logger"},"Python SSH Logger"))),(0,r.kt)("h1",{id:"python-ssh-logger"},"Python SSH Logger"),(0,r.kt)("p",null,"We want to build a small python program that allows us to log server states over the network by SSH. We start with creating 3 environment files that hold the server ip address, the SSH user login and the commands that we have to send to the server to get the information:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"serverip.env"),(0,r.kt)("li",{parentName:"ol"},"userlogin.env"),(0,r.kt)("li",{parentName:"ol"},"commands.env")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/mpolinowski/python-ssh-logger/blob/master/ip_file_valid.py"},"ip_file_valid.py")," : Ask for ",(0,r.kt)("inlineCode",{parentName:"li"},"serverip.env")," file location and read IP address"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/mpolinowski/python-ssh-logger/blob/master/ip_addr_valid.py"},"ip_addr_valid.py")," : Check if Server IP is a valid IP and does not belong to a restricted range."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/mpolinowski/python-ssh-logger/blob/master/ip_reach.py"},"ip_reach.py")," : Check if IP address can be pinged,"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/mpolinowski/python-ssh-logger/blob/master/ssh_connect.py"},"ssh_connect.py")," : Verify ",(0,r.kt)("inlineCode",{parentName:"li"},"userlogin.env")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"commands.env")," and use ",(0,r.kt)("strong",{parentName:"li"},"Paramiko")," to connect to your server and send commands via SSHv2."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/mpolinowski/python-ssh-logger/blob/master/create_threads.py"},"create_threads.py")," create parallel threads for each SSH connection (only useful if you contact more than 1 server at once)")),(0,r.kt)("p",null,"The command I want to use is the ",(0,r.kt)("inlineCode",{parentName:"p"},"top -n 1")," that will give me an overview over the server load:"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Python Network Logger",src:n(34400).Z,width:"800",height:"214"})),(0,r.kt)("p",null,"To extract the CPU load from the server reply, I am going to use the following regular expression - not that we cannot prepend our RegEx with ",(0,r.kt)("inlineCode",{parentName:"p"},"r")," to get the RAW string, but have to use ",(0,r.kt)("inlineCode",{parentName:"p"},"b")," to handle the response that Python calls ",(0,r.kt)("strong",{parentName:"p"},"byte-like"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"# Searching for the CPU utilization value within the output of 'show processes top once'\ncpu = re.search(b'(%Cpu\\(s\\): ) (.+?)(us)', server_response)\n# cpu = server_response\n\n# Extracting the second group, which matches the actual value of the CPU utilization and decoding to the UTF-8 format from the binary data type\nutilization = cpu.group(2).decode('utf-8')\n# utilization = cpu.decode('utf-8')\n\n# Printing the CPU utilization value to the screen\n# print(utilization)\n\n# Opening the CPU utilization text file and appending the results\nwith open('E:\\\\python-ssh-logger\\\\cpu-load.txt', 'a') as f:\n    # f.write('{},{}\\n'.format(str(datetime.datetime.now()), utilization))\n    f.write(utilization + '\\n')\n")),(0,r.kt)("p",null,"A good way to develop a fitting regular expression for your task is to test it on ",(0,r.kt)("a",{parentName:"p",href:"https://regex101.com/"},"regex101.com"),":"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Python Network Logger",src:n(49396).Z,width:"800",height:"450"})),(0,r.kt)("p",null,"Once the txt file with the CPU utilization is created, we can use ",(0,r.kt)("a",{parentName:"p",href:"https://matplotlib.org"},"matplotlib")," to plot the results in ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/mpolinowski/python-ssh-logger/blob/master/graph.py"},"graph.py")," (You might have to install the library first ",(0,r.kt)("inlineCode",{parentName:"p"},"python -m pip install matplotlib"),")."),(0,r.kt)("p",null,"Running both programs parallel shows us the real-time CPU utilization of our server:"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Python Network Logger",src:n(43698).Z,width:"800",height:"606"})))}c.isMDXComponent=!0},4193:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/photo-33vfghg3253_sd5767gw324d90_o-75fe936f031ba52bc019adcb39e29be9.png"},34400:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/python-network-logger_01-7eab27a067e13f5fded8b13f8152dfff.png"},49396:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/python-network-logger_02-6c9994e7a95e75f841eca6820532ad43.png"},43698:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/python-network-logger_03-e37013b6b3eb3bc4903b9425f9280b32.png"}}]);