"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[48387],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>k});var a=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=a.createContext({}),s=function(e){var n=a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=s(e.components);return a.createElement(c.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=s(t),k=r,g=d["".concat(c,".").concat(k)]||d[k]||u[k]||i;return t?a.createElement(g,o(o({ref:n},p),{},{components:t})):a.createElement(g,o({ref:n},p))}));function k(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,o=new Array(i);o[0]=d;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var s=2;s<i;s++)o[s]=t[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},26042:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var a=t(87462),r=(t(67294),t(3905));const i={sidebar_position:5e3,slug:"2022-11-27",title:"Deep Docker on Arch",authors:"mpolinowski",tags:["Python","Machine Learning","Docker"],description:"The NVIDIA Container Toolkit run GPU accelerated Docker containers"},o=void 0,l={unversionedId:"IoT-and-Machine-Learning/ML/2022-11-27-containerized-deep-learning/index",id:"IoT-and-Machine-Learning/ML/2022-11-27-containerized-deep-learning/index",title:"Deep Docker on Arch",description:"The NVIDIA Container Toolkit run GPU accelerated Docker containers",source:"@site/docs/IoT-and-Machine-Learning/ML/2022-11-27-containerized-deep-learning/index.md",sourceDirName:"IoT-and-Machine-Learning/ML/2022-11-27-containerized-deep-learning",slug:"/IoT-and-Machine-Learning/ML/2022-11-27-containerized-deep-learning/2022-11-27",permalink:"/docs/IoT-and-Machine-Learning/ML/2022-11-27-containerized-deep-learning/2022-11-27",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/IoT-and-Machine-Learning/ML/2022-11-27-containerized-deep-learning/index.md",tags:[{label:"Python",permalink:"/docs/tags/python"},{label:"Machine Learning",permalink:"/docs/tags/machine-learning"},{label:"Docker",permalink:"/docs/tags/docker"}],version:"current",sidebarPosition:5e3,frontMatter:{sidebar_position:5e3,slug:"2022-11-27",title:"Deep Docker on Arch",authors:"mpolinowski",tags:["Python","Machine Learning","Docker"],description:"The NVIDIA Container Toolkit run GPU accelerated Docker containers"},sidebar:"tutorialSidebar",previous:{title:"Breast Histopathology Image Segmentation Part 1",permalink:"/docs/IoT-and-Machine-Learning/ML/2022-12-10-tf-breast-cancer-classification-part1/2022-12-10"},next:{title:"Face Restoration with GFPGAN",permalink:"/docs/IoT-and-Machine-Learning/ML/2022-04-04-pytorch-face-restoration/2022-04-04"}},c={},s=[{value:"Preparations",id:"preparations",level:2},{value:"Installation in Arch Linux",id:"installation-in-arch-linux",level:3},{value:"Testing",id:"testing",level:3},{value:"Docker Images",id:"docker-images",level:2}],p={toc:s};function u(e){let{components:n,...i}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,i,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Guangzhou, China",src:t(23443).Z,width:"1500",height:"383"})),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#preparations"},"Preparations"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#installation-in-arch-linux"},"Installation in Arch Linux")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#testing"},"Testing")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#docker-images"},"Docker Images"))),(0,r.kt)("p",null,"The ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/NVIDIA/nvidia-docker"},"NVIDIA Container Toolkit")," allows users to build and run GPU accelerated Docker containers. The toolkit includes a container runtime library and utilities to automatically configure containers to leverage NVIDIA GPUs."),(0,r.kt)("h2",{id:"preparations"},"Preparations"),(0,r.kt)("p",null,"Make sure you have installed the ",(0,r.kt)("a",{parentName:"p",href:"https://docs.nvidia.com/datacenter/tesla/tesla-installation-notes/index.html"},"NVIDIA driver")," and Docker engine for your Linux distribution. Note that you do not need to install the CUDA Toolkit on the host system."),(0,r.kt)("p",null,"Starting from Docker version 19.03, NVIDIA GPUs are natively supported as Docker devices. ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/NVIDIA/nvidia-docker"},"NVIDIA Container Toolkit")," is the recommended way of running containers that leverage NVIDIA GPUs."),(0,r.kt)("h3",{id:"installation-in-arch-linux"},"Installation in Arch Linux"),(0,r.kt)("p",null,"Install the ",(0,r.kt)("a",{parentName:"p",href:"https://aur.archlinux.org/packages/nvidia-container-toolkit/"},"nvidia-container-toolkit")," package. Next, restart docker. You can now run containers that make use of NVIDIA GPUs using the ",(0,r.kt)("inlineCode",{parentName:"p"},"--gpus")," option: "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"wget https://aur.archlinux.org/cgit/aur.git/snapshot/nvidia-container-toolkit.tar.gz\ntar -xf nvidia-container-toolkit.tar.gz && cd nvidia-container-toolkit/\nmakepkg\nsudo pacman -U nvidia-container-toolkit-1.11.0-1-x86_64.pkg.tar.zst\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("inlineCode",{parentName:"p"},"Missing dependencies: -> libnvidia-container-tools>=1.9.0")," ",(0,r.kt)("a",{parentName:"p",href:"https://aur.archlinux.org/packages/libnvidia-container-tools"},"AUR"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"wget https://aur.archlinux.org/cgit/aur.git/snapshot/libnvidia-container.tar.gz\ntar -xf libnvidia-container.tar.gz && cd libnvidia-container/\nmakepkg\nsudo pacman -U libnvidia-container-1.11.0-1-x86_64.pkg.tar.zst\nsudo pacman -U libnvidia-container-tools-1.11.0-1-x86_64.pkg.tar.zst\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("inlineCode",{parentName:"p"},"Missing dependencies: -> bmake, -> rpcsvc-proto"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo pacman -S bmake rpcsvc-proto \n")),(0,r.kt)("p",null,"You might also need to re-enable c-groups in ",(0,r.kt)("inlineCode",{parentName:"p"},"/etc/nvidia-container-runtime/config.toml")," by ensuring ",(0,r.kt)("inlineCode",{parentName:"p"},"no-cgroups")," is not set\nto true. And restart Docker:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo systemctl restart docker\n")),(0,r.kt)("h3",{id:"testing"},"Testing"),(0,r.kt)("p",null,"At this point, a working setup can be tested by running a base CUDA container:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker run --rm --gpus all nvidia/cuda:11.6.2-base-ubuntu20.04 nvidia-smi\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"Status: Downloaded newer image for nvidia/cuda:11.6.2-base-ubuntu20.04\nSun Nov 27 12:32:07 2022       \n+-----------------------------------------------------------------------------+\n| NVIDIA-SMI 520.56.06    Driver Version: 520.56.06    CUDA Version: 11.8     |\n|-------------------------------+----------------------+----------------------+\n| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |\n| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |\n|                               |                      |               MIG M. |\n|===============================+======================+======================|\n|   0  NVIDIA GeForce ...  Off  | 00000000:01:00.0  On |                  N/A |\n|  0%   53C    P8    10W / 130W |    922MiB /  6144MiB |      4%      Default |\n|                               |                      |                  N/A |\n+-------------------------------+----------------------+----------------------+\n                                                                               \n+-----------------------------------------------------------------------------+\n| Processes:                                                                  |\n|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |\n|        ID   ID                                                   Usage      |\n|=============================================================================|\n+-----------------------------------------------------------------------------+\n")),(0,r.kt)("p",null,"\ud83d\udc4d"),(0,r.kt)("h2",{id:"docker-images"},"Docker Images"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker pull tensorflow/tensorflow:latest-gpu\ndocker pull pytorch/pytorch:1.13.0-cuda11.6-cudnn8-runtime\n")))}u.isMDXComponent=!0},23443:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-918471126c0472aad97358a725e1a399.jpg"}}]);