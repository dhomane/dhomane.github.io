"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[88634],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var a=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=a.createContext({}),d=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=d(e.components);return a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=d(n),m=o,h=u["".concat(l,".").concat(m)]||u[m]||p[m]||r;return n?a.createElement(h,i(i({ref:t},c),{},{components:n})):a.createElement(h,i({ref:t},c))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var d=2;d<r;d++)i[d]=n[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},80222:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>r,metadata:()=>s,toc:()=>d});var a=n(87462),o=(n(67294),n(3905));const r={sidebar_position:4770,slug:"2023-01-05",title:"DVC Model Access",authors:"mpolinowski",tags:["Python","Machine Learning"],description:"Retrieve your Model Data"},i=void 0,s={unversionedId:"IoT-and-Machine-Learning/AIOps/2023-01-06-dvc-model-access/index",id:"IoT-and-Machine-Learning/AIOps/2023-01-06-dvc-model-access/index",title:"DVC Model Access",description:"Retrieve your Model Data",source:"@site/docs/IoT-and-Machine-Learning/AIOps/2023-01-06-dvc-model-access/index.md",sourceDirName:"IoT-and-Machine-Learning/AIOps/2023-01-06-dvc-model-access",slug:"/IoT-and-Machine-Learning/AIOps/2023-01-06-dvc-model-access/2023-01-05",permalink:"/docs/IoT-and-Machine-Learning/AIOps/2023-01-06-dvc-model-access/2023-01-05",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/IoT-and-Machine-Learning/AIOps/2023-01-06-dvc-model-access/index.md",tags:[{label:"Python",permalink:"/docs/tags/python"},{label:"Machine Learning",permalink:"/docs/tags/machine-learning"}],version:"current",sidebarPosition:4770,frontMatter:{sidebar_position:4770,slug:"2023-01-05",title:"DVC Model Access",authors:"mpolinowski",tags:["Python","Machine Learning"],description:"Retrieve your Model Data"},sidebar:"tutorialSidebar",previous:{title:"Python Ray Basic Concepts",permalink:"/docs/IoT-and-Machine-Learning/AIOps/2023-01-22-python-ray-introduction/2023-01-22"},next:{title:"Data Version Control",permalink:"/docs/IoT-and-Machine-Learning/AIOps/2023-01-05-dvc-model-version-control/2023-01-05"}},l={},d=[{value:"Data and Model Access",id:"data-and-model-access",level:2},{value:"Find a file or Directory",id:"find-a-file-or-directory",level:3},{value:"Download",id:"download",level:3},{value:"Data Pipelines",id:"data-pipelines",level:2}],c={toc:d};function p(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,a.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Guangzhou, China",src:n(54663).Z,width:"1500",height:"662"})),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#data-and-model-access"},"Data and Model Access"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#find-a-file-or-directory"},"Find a file or Directory")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#download"},"Download")))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#data-pipelines"},"Data Pipelines"))),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/docs/IoT-and-Machine-Learning/AIOps/2023-01-05-dvc-model-version-control/2023-01-05"},"We've learned how to track data and models with DVC"),", and how to commit their versions to Git. The next questions are: How can we use these artifacts outside of the project? How do we download a model to deploy it? How to download a specific version of a model? Or reuse datasets across different projects?"),(0,o.kt)("h2",{id:"data-and-model-access"},"Data and Model Access"),(0,o.kt)("p",null,"DVC's remote storage config is also saved in Git, and contains all the information needed to access and download any version of datasets, files, and models. It means that a Git repository with DVC files becomes an entry point, and can be used instead of accessing files directly."),(0,o.kt)("h3",{id:"find-a-file-or-directory"},"Find a file or Directory"),(0,o.kt)("p",null,"You can use dvc list to explore a DVC repository hosted on any Git server:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"dvc list https://github.com/mpolinowski/dvc-demo-project.git\n.dvcignore\ndata\n")),(0,o.kt)("p",null,"The benefit of this command over browsing a Git hosting website is that the list includes files and directories tracked by both Git and DVC."),(0,o.kt)("h3",{id:"download"},"Download"),(0,o.kt)("p",null,"One way is to simply download the data with dvc get. This is useful when working outside of a DVC project environment, for example in an automated ML model deployment task:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"dvc get https://github.com/mpolinowski/dvc-demo-project \\\n        data\n")),(0,o.kt)("p",null,"And now to the magic part - while the Git repository only contains the ",(0,o.kt)("inlineCode",{parentName:"p"},".dvc")," configuration file that points to our data:"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Data Version Control Model Access",src:n(94356).Z,width:"1233",height:"239"})),(0,o.kt)("p",null,"The GET command we used above automatically pulled the data with the version that was committed to Git:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"ls -la data\n\n     256 Jan  5 17:25 .\n     232 Jan  5 17:25 ..\n14445097 Jan  5 17:25 data.xml\n      10 Jan  5 17:25 .gitignore\n")),(0,o.kt)("h2",{id:"data-pipelines"},"Data Pipelines"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"WiP")))}p.isMDXComponent=!0},94356:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/DVC-Model-Access_01-bc3d525fec33e0f38e48e3779952174c.png"},54663:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-296769d73822f07b0ac5dc952f56bfa1.jpg"}}]);