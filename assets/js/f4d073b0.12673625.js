"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[48095],{3905:(e,n,o)=>{o.d(n,{Zo:()=>c,kt:()=>u});var t=o(67294);function a(e,n,o){return n in e?Object.defineProperty(e,n,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[n]=o,e}function r(e,n){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),o.push.apply(o,t)}return o}function l(e){for(var n=1;n<arguments.length;n++){var o=null!=arguments[n]?arguments[n]:{};n%2?r(Object(o),!0).forEach((function(n){a(e,n,o[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):r(Object(o)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(o,n))}))}return e}function i(e,n){if(null==e)return{};var o,t,a=function(e,n){if(null==e)return{};var o,t,a={},r=Object.keys(e);for(t=0;t<r.length;t++)o=r[t],n.indexOf(o)>=0||(a[o]=e[o]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)o=r[t],n.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(a[o]=e[o])}return a}var s=t.createContext({}),p=function(e){var n=t.useContext(s),o=n;return e&&(o="function"==typeof e?e(n):l(l({},n),e)),o},c=function(e){var n=p(e.components);return t.createElement(s.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},m=t.forwardRef((function(e,n){var o=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=p(o),u=a,h=m["".concat(s,".").concat(u)]||m[u]||d[u]||r;return o?t.createElement(h,l(l({ref:n},c),{},{components:o})):t.createElement(h,l({ref:n},c))}));function u(e,n){var o=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=o.length,l=new Array(r);l[0]=m;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var p=2;p<r;p++)l[p]=o[p];return t.createElement.apply(null,l)}return t.createElement.apply(null,o)}m.displayName="MDXCreateElement"},98067:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>r,metadata:()=>i,toc:()=>p});var t=o(87462),a=(o(67294),o(3905));const r={sidebar_position:6010,slug:"2022-02-16",title:"Yolo App - Train a Model with Tensorflow",authors:"mpolinowski",tags:["Tensorflow","Machine Learning","Python","YOLO"]},l=void 0,i={unversionedId:"IoT-and-Machine-Learning/ML/2022-02-16--yolo-app-tensorflow-model/index",id:"IoT-and-Machine-Learning/ML/2022-02-16--yolo-app-tensorflow-model/index",title:"Yolo App - Train a Model with Tensorflow",description:"Shenzhen, China",source:"@site/docs/IoT-and-Machine-Learning/ML/2022-02-16--yolo-app-tensorflow-model/index.md",sourceDirName:"IoT-and-Machine-Learning/ML/2022-02-16--yolo-app-tensorflow-model",slug:"/IoT-and-Machine-Learning/ML/2022-02-16--yolo-app-tensorflow-model/2022-02-16",permalink:"/docs/IoT-and-Machine-Learning/ML/2022-02-16--yolo-app-tensorflow-model/2022-02-16",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/IoT-and-Machine-Learning/ML/2022-02-16--yolo-app-tensorflow-model/index.md",tags:[{label:"Tensorflow",permalink:"/docs/tags/tensorflow"},{label:"Machine Learning",permalink:"/docs/tags/machine-learning"},{label:"Python",permalink:"/docs/tags/python"},{label:"YOLO",permalink:"/docs/tags/yolo"}],version:"current",sidebarPosition:6010,frontMatter:{sidebar_position:6010,slug:"2022-02-16",title:"Yolo App - Train a Model with Tensorflow",authors:"mpolinowski",tags:["Tensorflow","Machine Learning","Python","YOLO"]},sidebar:"tutorialSidebar",previous:{title:"Yolo App - Pipeline Predictions",permalink:"/docs/IoT-and-Machine-Learning/ML/2022-02-17--yolo-app-prediction-pipeline/2022-02-17"},next:{title:"Yolo App - Data Collection",permalink:"/docs/IoT-and-Machine-Learning/ML/2022-02-15--yolo-app-get-data/2022-02-15"}},s={},p=[{value:"Prepare the Neural Network",id:"prepare-the-neural-network",level:2},{value:"Train your Model",id:"train-your-model",level:2}],c={toc:p};function d(e){let{components:n,...r}=e;return(0,a.kt)("wrapper",(0,t.Z)({},c,r,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Shenzhen, China",src:o(27861).Z,width:"1500",height:"688"})),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("a",{parentName:"li",href:"/docs/IoT-and-Machine-Learning/ML/2022-02-15--yolo-app-get-data/2022-02-15"},"Prepare your Images and get Data")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("a",{parentName:"li",href:"/docs/IoT-and-Machine-Learning/ML/2022-02-16--yolo-app-tensorflow-model/2022-02-16"},"Train your Tensorflow Model")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("a",{parentName:"li",href:"/docs/IoT-and-Machine-Learning/ML/2022-02-17--yolo-app-prediction-pipeline/2022-02-17"},"Use your Model to do Predictions")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("a",{parentName:"li",href:"/docs/IoT-and-Machine-Learning/ML/2022-02-18--yolo-app-ocr/2022-02-18"},"Use Tesseract to Read Number Plates")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("a",{parentName:"li",href:"/docs/IoT-and-Machine-Learning/ML/2022-02-19--yolo-app-flask/2022-02-19"},"Flask Web Application")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("a",{parentName:"li",href:"/docs/IoT-and-Machine-Learning/ML/2022-02-20--yolo-app-yolov5-data-prep/2022-02-20"},"Yolo v5 - Data Prep"))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#prepare-the-neural-network"},"Prepare the Neural Network")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#train-your-model"},"Train your Model"))),(0,a.kt)("h2",{id:"prepare-the-neural-network"},"Prepare the Neural Network"),(0,a.kt)("p",null," When running the following code I kept getting this warning:"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("a",{parentName:"p",href:"https://stackoverflow.com/questions/44232898/memoryerror-in-tensorflow-and-successful-numa-node-read-from-sysfs-had-negativ"},"Memory Error in Tensorflow"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:936] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero"))),(0,a.kt)("p",null," Running the following command from my console to set each device to ",(0,a.kt)("inlineCode",{parentName:"p"},"0")," got rid of the warning:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"for a in /sys/bus/pci/devices/*; do echo 0 | sudo tee -a $a/numa_node; done\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py"},"import tensorflow as tf\nfrom tensorflow.keras.applications import MobileNetV2, InceptionV3, InceptionResNetV2\nfrom tensorflow.keras.layers import Dense, Dropout, Flatten\nfrom tensorflow.keras.models import Model\n\n# Inception ResNet for 224x224 3-channel image source\ninception_resnet = InceptionResNetV2(weights=\"imagenet\", include_top=False, input_tensor=Input(shape=(224, 224, 3)))\ninception_resnet.trainable=False\nheadmodel = inception_resnet.output\nheadmodel = Flatten()(headmodel)\n# Build neural network layers\nheadmodel = Dense(500,activation='relu')(headmodel)\nheadmodel = Dense(250,activation='relu')(headmodel)\nheadmodel = Dense(4, activation='sigmoid')(headmodel)\n# Define inputs / outputs for your model\nmodel = Model(inception_resnet.input, outputs=headmodel)\n# Compile the model\nmodel.compile(loss='mse', optimizer=tf.keras.optimizers.Adam(learning_rate=1e-4))\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"2022-03-05 16:55:55.576063: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1525] Created device /job:localhost/replica:0/task:0/device:GPU:0 with 4607 MB memory:  -> device: 0, name: NVIDIA GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0, compute capability: 6.1\n")),(0,a.kt)("h2",{id:"train-your-model"},"Train your Model"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py"},"from tensorflow.keras.callbacks import TensorBoard\ntfb = TensorBoard('object_detection')\nhistory = model.fit(x=x_train, y=y_train, batch_size=10, epochs=100, validation_data=(x_test, y_test), callbacks=[tfb])\n")),(0,a.kt)("p",null,"With ",(0,a.kt)("inlineCode",{parentName:"p"},"tensorflow-gpu")," on an Nvidia GTX 1060 I am getting training cycles of 2-3s:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"Epoch 1/100\n\n2022-03-05 17:44:41.082245: I tensorflow/stream_executor/cuda/cuda_dnn.cc:368] Loaded cuDNN version 8301\n\n18/18 [==============================] - 13s 289ms/step - loss: 0.1179 - val_loss: 0.1214\nEpoch 2/100\n18/18 [==============================] - 2s 128ms/step - loss: 0.1204 - val_loss: 0.1146\nEpoch 3/100\n18/18 [==============================] - 2s 129ms/step - loss: 0.1223 - val_loss: 0.1235\n...\nEpoch 499/500\n20/20 [==============================] - 3s 136ms/step - loss: 3.2455e-05 - val_loss: 0.0042\nEpoch 500/500\n20/20 [==============================] - 3s 137ms/step - loss: 2.7786e-05 - val_loss: 0.0042\n")),(0,a.kt)("p",null,"To save the model run:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py"},"model.save('../models/object_detection.h5')\n")),(0,a.kt)("p",null,"I can use Tensorboard to check the results - run the following command from your console and point it to your training data folder:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"tensorboard --logdir=object_detection\n\nTensorBoard 2.8.0 at http://localhost:6006/ (Press CTRL+C to quit)\n")),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Yolo App Tensorflow Model",src:o(6175).Z,width:"1120",height:"746"})))}d.isMDXComponent=!0},6175:(e,n,o)=>{o.d(n,{Z:()=>t});const t=o.p+"assets/images/Yolo_App_Tensorflow_01-f530809d82db700a9ed45a2467113b16.png"},27861:(e,n,o)=>{o.d(n,{Z:()=>t});const t=o.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-ffe80356d19fb4b090a3bef79b45aab3.jpg"}}]);